<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[JSLite.io]]></title>
  <subtitle><![CDATA[让web开发更迅速，下载执行更快、量级更轻，针对现代高级浏览器的JavaScript库。 推进前端开发标准对于攻城师来说，人人有责。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jslite.io/"/>
  <updated>2015-06-19T03:16:41.000Z</updated>
  <id>http://jslite.io/</id>
  
  <author>
    <name><![CDATA[kacper.wang]]></name>
    <email><![CDATA[wowohoo@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Nodejs 制作命令行工具]]></title>
    <link href="http://jslite.io/2015/06/19/Nodejs-%E5%88%B6%E4%BD%9C%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/"/>
    <id>http://jslite.io/2015/06/19/Nodejs-制作命令行工具/</id>
    <published>2015-06-19T03:15:01.000Z</published>
    <updated>2015-06-19T03:16:41.000Z</updated>
    <content type="html"><![CDATA[<h1 id="wcj">wcj</h1><p><a href="https://github.com/jaywcjlove/wcj/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/wcj.svg" alt=""></a> <a href="https://github.com/jaywcjlove/wcj/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/wcj.svg" alt=""></a> <a href="https://github.com/jaywcjlove/wcj/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/wcj.svg" alt=""></a> <a href="https://github.com/jaywcjlove/wcj/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/wcj.svg" alt=""></a></p>
<p>在使用 <code>Nodejs</code> 过程中，有很多包都支持全局安装，提供一个命令，然后在命令行我们就可以完成一些任务。有时候我们也需要开发这样的命令工具。<code>Node.js</code> 中发现弄个命令行工具特别轻松，我来学习如何使用 <code>node.js</code> 生成自己的command命令，在未来的项目中方便自己。  </p>
<ul>
<li>先弄个小实例感受一下命令行的魅力</li>
<li>再用命令行实现输出自己的简历（我觉得这个可能很有趣）</li>
<li>常用的命令加入进来<ul>
<li>ls 查看当前目录</li>
<li>ls -a 包括隐藏文件</li>
<li>打开当前目录</li>
</ul>
</li>
<li>就先这么计划着吧。</li>
</ul>
<h1 id="小实例">小实例</h1><p>开始编写之前需要确认的一件事情是你已经安装了<a href="https://nodejs.org/" target="_blank" rel="external">Node.js</a>。你可以在命令行中运行 <code>which node</code> 来确认是否已经安装，或者运行 <code>node -v</code> 查看 node 的版本 。如果你已经安装了node，你可以看到类似于下面的输出结果，一般情况安装了node.js 顺带npm工具自动安装了。</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line">$ which <span class="keyword">node</span></span><br><span class="line">/usr/local/bin/<span class="keyword">node</span>  </span><br><span class="line"></span><br><span class="line">$ <span class="keyword">node</span> -v</span><br><span class="line">v<span class="number">0</span>.<span class="number">10.36</span></span><br></pre></td></tr></table></figure>
<h2 id="创建目录">创建目录</h2><p>首先任意创建一个文件夹，初始化 <code>package.json</code> 文件，在该文件夹下创建bin目录：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ mkdir wcj #&#21019;&#24314;&#19968;&#20010;&#25991;&#20214;&#22841;&#10;$ cd wcj &#38;&#38; mkdir bin&#10;$ npm init #&#21021;&#22987;&#21270; `package.json` &#25991;&#20214;</span><br></pre></td></tr></table></figure>
<h2 id="编写命令行">编写命令行</h2><p>cd到 <code>bin</code> 目录下，新建一个 <code>wcj.js</code> 文件(名字自取)，编写如下代码，在js文件顶部加上 <code>#!/usr/bin/env node</code> 这段代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/usr/</span>bin/env node  </span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>),</span><br><span class="line">    path = process.cwd();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> run= <span class="function"><span class="keyword">function</span> <span class="params">(obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(obj[<span class="number">0</span>] === <span class="string">'-v'</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'version is 1.0.0'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj[<span class="number">0</span>] === <span class="string">'-h'</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'Useage:'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'  -v --version [show version]'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        fs.readdir(path, <span class="function"><span class="keyword">function</span><span class="params">(err, files)</span></span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(err)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">console</span>.log(err);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; files.length; i += <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(files[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//获取除第一个命令以后的参数，使用空格拆分</span></span><br><span class="line">run(process.argv.slice(<span class="number">2</span>));</span><br></pre></td></tr></table></figure>
<p>上面的 <code>#!/usr/bin/env node</code> 被成为 <code>shebang</code> ，表示用后面的路径所示的程序来执行当前文件夹。还需要一个 <code>package.json</code> 文件</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"wcj"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,</span><br><span class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"wcj ---"</span></span>,</span><br><span class="line">  "<span class="attribute">repository</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"git"</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">"https://github.com/jaywcjlove/wcj.git"</span></span><br><span class="line">  </span>&#125;</span>,</span><br><span class="line">  "<span class="attribute">main</span>": <span class="value"><span class="string">"index.js"</span></span>,</span><br><span class="line">  "<span class="attribute">bin</span>": <span class="value">&#123; "<span class="attribute">wcj</span>": <span class="value"><span class="string">"bin/wcj.js"</span> </span>&#125;</span>,</span><br><span class="line">  "<span class="attribute">author</span>": <span class="value"><span class="string">"kenny wang &lt;wowohoo@qq.com&gt; "</span></span>,</span><br><span class="line">  "<span class="attribute">license</span>": <span class="value"><span class="string">"MIT"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>运行 <code>node bin/wcj.js</code> 会显示当前文件夹下的所以文件和文件夹名。这个玩意儿真的跑起来了。更多npm link的信息请<a href="https://docs.npmjs.com/cli/link" target="_blank" rel="external">查看</a>   </p>
<p><code>package.json</code> 文件中 <code>bin</code> 里面的内容表示这个字段将 <code>wcj</code> 命令映射到了你的 <code>bin/wcj.js</code> 脚本。<a href="https://docs.npmjs.com/files/package.json#bin" target="_blank" rel="external">bin参考</a> </p>
<p>此工具采用 npm版本号采用的 <a href="http://semver.org/lang/zh-CN/" target="_blank" rel="external">semver</a> 规则</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">"bin"</span>: &#123; <span class="string">"wcj"</span>: <span class="string">"bin/wcj.js"</span> &#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jaywcjlove/wcj/blob/master/examples/ls.js" target="_blank" rel="external">列子源码</a></p>
<h2 id="全局运行命令调试">全局运行命令调试</h2><blockquote>
<p>确保你在 <code>package.json</code> 文件中添加了 <code>bin</code> 节点。然后打开命令了工具进入 <code>wcj</code> 目录 </p>
</blockquote>
<p>如果在项目目录下运行没有问题，可以将当前目录模块安装到全局，也可以采用此方法来更新你的命令行工具</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> . -g</span><br></pre></td></tr></table></figure>
<p>或者目录输入 <code>npm link</code> 会自动添加全局的 <code>symbolic link</code> ，然后就可以使用自己的命令了。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ wcj&#10;#README.md&#10;#bin&#10;#package.json&#10;&#10;$ cmd -v&#10;# version is 1.0.0&#10;&#10;$ cmd -h &#10;#Useage:&#10;#  -v --version [show version]</span><br></pre></td></tr></table></figure>
<h2 id="错误">错误</h2><p>在运行 <code>sudo npm install . -g</code> 会有一堆警告可以忽视</p>
<p>如果你已经 <code>npm link</code> 搞了一遍你再 link 一遍，会报如下错误。即使你 <code>npm unlink</code> 也会报如下错误：</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> link</span><br><span class="line"><span class="built_in">npm</span> ERR! Darwin <span class="number">14.3</span>.<span class="number">0</span></span><br><span class="line"><span class="built_in">npm</span> ERR! argv <span class="string">"node"</span> <span class="string">"/usr/local/bin/npm"</span> <span class="string">"link"</span></span><br><span class="line"><span class="built_in">npm</span> ERR! node v0.<span class="number">10.36</span></span><br><span class="line"><span class="built_in">npm</span> ERR! <span class="built_in">npm</span>  v2.<span class="number">7.1</span></span><br><span class="line"><span class="built_in">npm</span> ERR! path /usr/local/bin/wcj</span><br><span class="line"><span class="built_in">npm</span> ERR! code EEXIST</span><br><span class="line"></span><br><span class="line"><span class="built_in">npm</span> ERR! Refusing <span class="keyword">to</span> <span class="attribute">delete</span>: /usr/local/bin/wcj <span class="keyword">not</span> <span class="keyword">in</span> /Applications/XAMPP/xamppfiles/htdocs/git/github.com/myJS/wcj</span><br><span class="line">File <span class="attribute">exists</span>: /usr/local/bin/wcj</span><br><span class="line">Move <span class="literal">it</span> away, <span class="keyword">and</span> <span class="keyword">try</span> again.</span><br></pre></td></tr></table></figure>
<p>让你删除 <code>/usr/local/bin/wcj</code> 再 <code>npm link</code> ， 删除此目录运行 <code>rm -rf /usr/local/bin/wcj</code></p>
<h2 id="发布安装">发布安装</h2><h3 id="发布到npm中">发布到npm中</h3><p>发布必须注册 <a href="https://www.npmjs.com/" target="_blank" rel="external">npm</a> 账号，还有 <a href="https://github.com/jaywcjlove" target="_blank" rel="external">github</a> 账号，具体怎么玩儿问 谷歌大婶吧。在<a href="http://jslite.io" target="_blank" rel="external">JSLite.io</a> 中也有教程哦。</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> publish</span><br></pre></td></tr></table></figure>
<h3 id="安装">安装</h3><p>前提你发布到了<a href="https://www.npmjs.com/" target="_blank" rel="external">npm</a>中，你就可以运行下面的命令了。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> -g wcj</span><br></pre></td></tr></table></figure>
<p>例子下载：<a href="https://github.com/jaywcjlove/wcj/releases/tag/v1.0.1" target="_blank" rel="external">v1.0.1</a></p>
<h1 id="Commander">Commander</h1><p>依赖 <code>nodejs</code> 原生开发命令工具比较麻烦，<a href="https://github.com/tj/commander.js" target="_blank" rel="external">Commander.js</a> 可以帮助我们简化命令行开发。Commander 是一款重量轻，表现力和强大的命令行框架。提供了用户命令行输入和参数解析强大功能。Commander 源自一个同名的Ruby项目。<a href="https://github.com/tj/commander.js" target="_blank" rel="external">Commander.js</a> 是 <a href="https://github.com/tj" target="_blank" rel="external">TJ</a> 写的一个帮助快速开发Nodejs命令行工具的package。<a href="https://github.com/tj" target="_blank" rel="external">TJ</a>这货是Nodejs社区里非常知名的高产作者。方便的定义option(包括option的描述和其回调函数)和子命令。    </p>
<h2 id="特性">特性</h2><p>Commander的方便之处在于：  </p>
<p>自记录代码、自动生成帮助、合并短参数（“ABC”==“-A-B-C”）、默认选项、强制选项​​、命令解析、提示符</p>
<h2 id="API">API</h2><p><code>Option()</code>: 初始化自定义参数对象，设置“关键字”和“描述”<br><code>Command()</code>: 初始化命令行参数对象，直接获得命令行输入<br><code>Command#command()</code>: 定义一个命令名字<br><code>Command#action()</code>: 注册一个callback函数<br><code>Command#option()</code>: 定义参数，需要设置“关键字”和“描述”，关键字包括“简写”和“全写”两部分，以”,”,”|”,”空格”做分隔。<br><code>Command#parse()</code>: 解析命令行参数argv<br><code>Command#description()</code>: 设置description值<br><code>Command#usage()</code>: 设置usage值  </p>
<p>参考：<a href="http://tj.github.io/commander.js" target="_blank" rel="external">官方文档例子</a>  </p>
<h2 id="安装-1">安装</h2><p>安装commander</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">sudo npm <span class="keyword">install</span> commander</span><br></pre></td></tr></table></figure>
<h2 id="Option">Option</h2><p>内置选项Built-in option，Commander 会为程序提供给一个默认的 <code>-h</code> option。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">program</span><br><span class="line">  .version(<span class="string">'0.0.1'</span>)</span><br><span class="line">  .option(<span class="string">'-r, --resume'</span>, <span class="string">'简历'</span>);</span><br><span class="line">program.parse(process.argv);</span><br></pre></td></tr></table></figure>
<p>其中parse函数是处理定义的option和sub-command， 解析命令行参数并触发相应的回调(下文会说)。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#10;./bin/wcj.js -h&#10;## &#36755;&#20986;&#19979;&#38754;&#20869;&#23481;&#10;  Usage: wcj [options]&#10;&#10;  Options:&#10;&#10;    -h, --help     output usage information&#10;    -V, --version  output the version number&#10;    -r, --resume   &#31616;&#21382;</span><br></pre></td></tr></table></figure>
<p>可以看到默认就有个 <code>-h</code> 参数，传入后会输出 <code>wcj</code> 命令的帮助信息。  </p>
<h2 id="Custom_option">Custom option</h2><p>为 <code>wcj</code> 命令增加一个 <code>option</code>，展示说明是我的简历。</p>
<figure class="highlight rsl"><table><tr><td class="code"><pre><span class="line">program</span><br><span class="line">  .version(<span class="string">'0.0.1'</span>)</span><br><span class="line">  .<span class="built_in">option</span>(<span class="string">'-r| --resume'</span>, <span class="string">'简历'</span>);</span><br><span class="line">program.parse(process.argv);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (program.resume) &#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">'简历 - '</span></span><br><span class="line">        + <span class="string">'这个是我的简历！'</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>option()</code> 接收<a href="http://tj.github.io/commander.js/#Command.prototype.option" target="_blank" rel="external">四个参数</a></p>
<ul>
<li>第一个参数中，<code>-r</code> 为<code>short option</code>，<code>--resume</code>为对应的<code>long option</code>, 二者的分割符是<code>|</code>或者<code>,</code>。在命令行里使用时，这两个是等价的。 区别是后者可以在程序里通过 <code>program.resume</code> 的方式取到该 <code>option</code> 的值，此处 <code>option</code> 的值为 <code>bool</code>，也可以为字符串。</li>
<li>第二个为 <code>option</code> 描述, 会在 <code>help</code> 信息里展示出来</li>
<li>第三个参数为回调函数</li>
<li>第四个参数为默认值</li>
</ul>
<h2 id="Unknown_option">Unknown option</h2><p>当接收到未定义的option时，程序会自动抛出错误</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">./bin/wcj.js -h&#10;&#10;## &#36755;&#20986;&#19979;&#38754;&#20869;&#23481;&#10;error: unknown option &#39;--res&#39;</span><br></pre></td></tr></table></figure>
<p>Commander同时提供了api来取消这个自动报错机制， <code>.allowUnknownOption()</code>。 </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/usr/</span>bin/env node</span><br><span class="line">program</span><br><span class="line">    .allowUnknownOption()</span><br><span class="line">    .version(<span class="string">'0.0.1'</span>)</span><br><span class="line">    .option(<span class="string">'-r, --resume'</span>, <span class="string">'简历'</span>);</span><br><span class="line"></span><br><span class="line">program.parse(process.argv);</span><br><span class="line"><span class="comment">//省略一些细节...</span></span><br></pre></td></tr></table></figure>
<h2 id="Option_types">Option types</h2><p>Command支持以下两种类型的option： <code>required</code> 、 <code>optional</code> 和 <code>bool</code></p>
<h3 id="required_和_optional">required 和 optional</h3><p>在option的第一个参数里, 除了<code>short</code>，<code>long option</code>，还可以指定option类型，分隔符也是<code>|</code>和<code>,</code> 其中</p>
<ul>
<li><code>&lt;lang&gt;</code> required参数，使用时后边必须跟参数值, 否则程序会报错</li>
<li><code>[db]</code> optional参数，后面可以选择是否跟参数值</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/usr/</span>bin/env node  </span><br><span class="line"><span class="keyword">var</span> program = <span class="built_in">require</span>(<span class="string">'commander'</span>);</span><br><span class="line">program</span><br><span class="line">    .allowUnknownOption()</span><br><span class="line">    .version(<span class="string">'0.0.1'</span>)</span><br><span class="line">    .option(<span class="string">'-r, --resume'</span>, <span class="string">'简历'</span>)</span><br><span class="line">    .option(<span class="string">'-l, --language &lt;lang&gt;'</span>, <span class="string">'这个语言是我擅长的语言。'</span>)</span><br><span class="line">    .parse(process.argv);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (program.resume) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'简历'</span></span><br><span class="line">        + <span class="string">'-'</span></span><br><span class="line">        + <span class="string">'这个是我的简历！'</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (program.language) <span class="built_in">console</span>.log(<span class="string">'language: 我擅长的语言`'</span> + program.language + <span class="string">'`'</span>);</span><br><span class="line"><span class="keyword">if</span> (program.database) <span class="built_in">console</span>.log(<span class="string">'db: 我擅长的语言`'</span> + program.database + <span class="string">'`'</span>);</span><br></pre></td></tr></table></figure>
<p>看下效果</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">./bin/wcj.js -l python&#10;## &#36755;&#20986;&#10;language: &#25105;&#25797;&#38271;&#30340;&#35821;&#35328;`python`&#10;db: &#25105;&#25797;&#38271;&#30340;&#35821;&#35328;`MySQL`&#10;&#10;./bin/wcj.js -l&#10;## &#36755;&#20986;&#10;  error: option &#39;-l, --language &#60;lang&#62;&#39; argument missing</span><br></pre></td></tr></table></figure>
<h3 id="bool">bool</h3><p>选项值为布尔型, 像上面的<code>--date</code>, 默认是<code>false</code>，当使用此参数时，<code>program.date</code> 为<code>true</code>, 否则为<code>false</code>   </p>
<p><code>bool</code>型<code>option</code>有个变种，当<code>long option</code>定义为<code>no-*</code>时默认值为<code>true</code>, 将</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> program = <span class="built_in">require</span>(<span class="string">'commander'</span>);</span><br><span class="line">program</span><br><span class="line">  .option(<span class="string">'-d, --no-date'</span>, <span class="string">'don‘t display current date'</span>)</span><br><span class="line">  .parse(process.argv);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">if</span> (program.date) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(dt.getFullYear()</span><br><span class="line">        + <span class="string">'-'</span></span><br><span class="line">        + (dt.getMonth() + <span class="number">1</span>)</span><br><span class="line">        + <span class="string">'-'</span></span><br><span class="line">        + dt.getDate()</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>不带-d 参数时, 参数的默认值为true</p>
<h2 id="Automated_—help">Automated —help</h2><p>Commander会根据配置的option，sub-command等信息，自动生成help信息。</p>
<h3 id="Custom_help">Custom help</h3><p>可以通过监听—help事件来输出额外的帮助信息，如下面给fe命令添加了一些examples</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// must be before .parse() since node's emit() is immediate</span></span><br><span class="line">program.on(<span class="string">'--help'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'  自定义的例子:'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">''</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'    输出命令  wcj -d'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'    输出命令  wcj -l python'</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">''</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">program.parse(process.argv);</span><br></pre></td></tr></table></figure>
<p>效果如下：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">./bin/wcj.js -h&#10;&#10;  Usage: wcj [options]&#10;&#10;  Options:&#10;&#10;    -h, --help             output usage information&#10;    -d, --no-date          display current time&#10;    -l, --language &#60;lang&#62;  &#36825;&#20010;&#35821;&#35328;&#26159;&#25105;&#25797;&#38271;&#30340;&#35821;&#35328;&#12290;&#10;    -b, --database [db]    &#35813;&#25968;&#25454;&#24211;&#20026;&#25105;&#26368;&#25797;&#38271;&#25968;&#25454;&#24211;&#10;&#10;  &#33258;&#23450;&#20041;&#30340;&#20363;&#23376;:&#10;&#10;    &#36755;&#20986;&#21629;&#20196;  wcj -d&#10;    &#36755;&#20986;&#21629;&#20196;  wcj -l python</span><br></pre></td></tr></table></figure>
<h2 id="像git风格一样的命令">像git风格一样的命令</h2><p><a href="https://github.com/jaywcjlove/wcj/blob/master/examples/gitstyle.js" target="_blank" rel="external">列子源码</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/usr/</span>bin/env node </span><br><span class="line"><span class="keyword">var</span> program = <span class="built_in">require</span>(<span class="string">'commander'</span>);</span><br><span class="line"><span class="keyword">var</span> appInfo = <span class="built_in">require</span>(<span class="string">'./../package.json'</span>);</span><br><span class="line"></span><br><span class="line">program</span><br><span class="line">    .version(appInfo.version)</span><br><span class="line">    .usage(<span class="string">'这里是我私人玩耍的命令哦！[options] &lt;package&gt;'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//像git风格一样的子命令</span></span><br><span class="line">program</span><br><span class="line">    <span class="comment">//子命令</span></span><br><span class="line">    .command(<span class="string">'resume &lt;cmd&gt;'</span>)</span><br><span class="line">    <span class="comment">//短命令 - 简写方式</span></span><br><span class="line">    .alias(<span class="string">'rs'</span>)</span><br><span class="line">    <span class="comment">//说明</span></span><br><span class="line">    .description(<span class="string">'这里是我的简历详情！'</span>)</span><br><span class="line">    <span class="comment">//resume的子命令</span></span><br><span class="line">    .option(<span class="string">"-n, --name &lt;mode&gt;"</span>, <span class="string">"输出我的名字"</span>)</span><br><span class="line">    <span class="comment">//注册一个callback函数</span></span><br><span class="line">    .action(<span class="function"><span class="keyword">function</span><span class="params">(cmd, options)</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> nm = <span class="keyword">typeof</span> options.name==<span class="string">'string'</span>?options.name:<span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'resume "%s" 使用 %s 模式'</span>, cmd, nm);</span><br><span class="line">    &#125;).on(<span class="string">'--help'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//这里输出子命令的帮助</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'  Examples:'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'    运行方法：'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'    $ ./bin/wcj.js resume ss -n aaaaa'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'    $ ./bin/wcj.js resume ss'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">program.parse(process.argv);</span><br></pre></td></tr></table></figure>
<p>上面实例运行输出方式</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">$ ./bin/wcj.js resume ss -n aaaaa&#10;&#10;#&#36755;&#20986;&#65306;&#10;resume &#34;ss&#34; &#20351;&#29992; aaaaa &#27169;&#24335;&#10;&#10;$ ./bin/wcj.js resume ss&#10;#&#36755;&#20986;&#65306;&#10;resume &#34;aa&#34; &#20351;&#29992;  &#27169;&#24335;</span><br></pre></td></tr></table></figure>
<h2 id="事件监听">事件监听</h2><p>命名多少个命令就监听多少命令，<code>--help</code> 为默认监听事件。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">program.on(&#39;--help&#39;, function(argv,test)&#123;&#10;    process.exit(1);&#10;&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="阅读参考">阅读参考</h1><p>第一个小实例看了很多文章，记录一下，感觉非常简单的样子。</p>
<ul>
<li><a href="http://binbinliao.com/programming/commandline-nodejs.html" target="_blank" rel="external">用node.js开发命令行工具</a></li>
<li><a href="http://cruft.io/posts/node-command-line-utilities/" target="_blank" rel="external">Command-line utilities with Node.js</a></li>
<li><a href="http://zdan.me/post/2015/04/23/build-commands-with-nodejs.html" target="_blank" rel="external">使用Node.js创建命令行工具</a></li>
<li><a href="https://github.com/tj/commander.js" target="_blank" rel="external">commander.js</a></li>
<li><a href="http://tj.github.io/commander.js/" target="_blank" rel="external">commander.js例子</a></li>
<li><a href="https://github.com/substack/node-optimist" target="_blank" rel="external">node-optimist</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="wcj">wcj</h1><p><a href="https://github.com/jaywcjlove/wcj/issues" target="_blank" rel="external"><img src="https://img.shields.io/g]]>
    </summary>
    
      <category term="commander" scheme="http://jslite.io/tags/commander/"/>
    
      <category term="nodejs" scheme="http://jslite.io/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS实现浏览器的title闪烁、滚动、声音提示、通知]]></title>
    <link href="http://jslite.io/2015/05/12/JS%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84title%E9%97%AA%E7%83%81%E3%80%81%E6%BB%9A%E5%8A%A8%E3%80%81%E5%A3%B0%E9%9F%B3%E3%80%81chrome%E9%80%9A%E7%9F%A5/"/>
    <id>http://jslite.io/2015/05/12/JS实现浏览器的title闪烁、滚动、声音、chrome通知/</id>
    <published>2015-05-12T12:48:10.000Z</published>
    <updated>2015-05-14T08:39:45.000Z</updated>
    <content type="html"><![CDATA[<h1 id="通知">通知</h1><p><a href="https://github.com/jaywcjlove/iNotify/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/iNotify.svg" alt=""></a> <a href="https://github.com/jaywcjlove/iNotify/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/iNotify.svg" alt=""></a> <a href="https://github.com/jaywcjlove/iNotify/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/iNotify.svg" alt=""></a> <a href="https://github.com/jaywcjlove/iNotify/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/iNotify.svg" alt=""></a></p>
<p>JS 实现浏览器的 title 闪烁、滚动、声音提示、chrome、Firefox、Safari等系统通知</p>
<p>这是重复造轮子…，标题闪烁、或者滚动提示，favicon数字显示。打开chrome浏览器调试工具，按照下面截图的方式放到调试里面调用一下，你就可以看到效果了。</p>
<p><img src="https://github.com/jaywcjlove/iNotify/blob/master/iNotify.png?raw=true" alt="界面预览"></p>
<h2 id="下载">下载</h2><h3 id="npm">npm</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> title-notify</span><br></pre></td></tr></table></figure>
<h3 id="bower">bower</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ bower <span class="keyword">install</span> inotify</span><br></pre></td></tr></table></figure>
<h2 id="init">init</h2><p>effect: flash | scroll | favicon  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.init(&#123;</span><br><span class="line">    message: <span class="string">'有消息了。'</span>,<span class="comment">//标题</span></span><br><span class="line">    effect: <span class="string">'flash'</span>, <span class="comment">// flash | scroll 闪烁还是滚动</span></span><br><span class="line">    <span class="comment">//可选播放声音</span></span><br><span class="line">    audio:&#123;</span><br><span class="line">        file: <span class="string">'msg.mp4'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//标题闪烁，或者滚动速度</span></span><br><span class="line">    interval: <span class="number">1000</span>,</span><br><span class="line">    <span class="comment">//可选，默认绿底白字的  Favicon</span></span><br><span class="line">    updateFavicon:&#123;</span><br><span class="line">        <span class="comment">// favicon 字体颜色</span></span><br><span class="line">        textColor: <span class="string">"#fff"</span>,</span><br><span class="line">        <span class="comment">//背景颜色，设置背景颜色透明，将值设置为“transparent”</span></span><br><span class="line">        backgroundColor: <span class="string">"#2F9A00"</span> </span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//可选chrome浏览器通知，默认不填写就是下面的内容</span></span><br><span class="line">    notification:&#123;</span><br><span class="line">        title:<span class="string">"通知！"</span>,<span class="comment">//设置标题</span></span><br><span class="line">        icon:<span class="string">""</span>,<span class="comment">//设置图标 icon 默认为 Favicon</span></span><br><span class="line">        body:<span class="string">'您来了一条新消息'</span><span class="comment">//设置消息内容</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="声音设置">声音设置</h2><h3 id="player">player</h3><p>播放声音</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.player()</span><br></pre></td></tr></table></figure>
<h3 id="loopPlay">loopPlay</h3><p>自动播放声音</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.loopPlay()</span><br></pre></td></tr></table></figure>
<h3 id="stopPlay">stopPlay</h3><p>停止播放声音</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.stopPlay()</span><br></pre></td></tr></table></figure>
<h3 id="setURL">setURL</h3><p>设置播放声音URL</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.setURL()</span><br></pre></td></tr></table></figure>
<h2 id="title通知">title通知</h2><h3 id="setTitle">setTitle</h3><p>设置标题  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.setTitle(<span class="string">'新标题'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="setInterval">setInterval</h3><p>设置时间间隔  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.setInterval(<span class="number">2000</span>)</span><br></pre></td></tr></table></figure>
<h3 id="addTimer">addTimer</h3><p>添加计数器</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.addTimer()</span><br></pre></td></tr></table></figure>
<h3 id="clearTimer">clearTimer</h3><p>清除计数器  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.clearTimer()</span><br></pre></td></tr></table></figure>
<h2 id="favicon通知">favicon通知</h2><h3 id="setFavicon">setFavicon</h3><p>设置icon 显示数字</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.setFavicon(<span class="number">10</span>)</span><br></pre></td></tr></table></figure>
<h3 id="faviconClear">faviconClear</h3><p>清除数字显示原来的icon</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.faviconClear()</span><br></pre></td></tr></table></figure>
<h2 id="chrome通知">chrome通知</h2><h3 id="notify">notify</h3><p>弹出chrome通知，不传参数为预设值…</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">iNotify.notify(); </span><br><span class="line">iNotify.notify(&#123;</span><br><span class="line">    title:<span class="string">"新通知"</span></span><br><span class="line">    body:<span class="string">"打雷啦，下雨啦..."</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="其它">其它</h2><p><code>iNotify.init().title;</code> 获取标题</p>
<h2 id="例子">例子</h2><h3 id="实例一">实例一</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">iconNotify</span><span class="params">(num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!notify) &#123;</span><br><span class="line">        <span class="keyword">var</span> notify = iNotify.init(&#123;</span><br><span class="line">            effect: <span class="string">'flash'</span>,</span><br><span class="line">            interval: <span class="number">500</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(num===<span class="number">0</span>)&#123;</span><br><span class="line">        notify.faviconClear()</span><br><span class="line">        notify.setTitle();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num&lt;<span class="number">100</span>)&#123;</span><br><span class="line">        notify.setFavicon(num)</span><br><span class="line">        notify.setTitle(<span class="string">"有新消息！"</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num&gt;<span class="number">99</span>)&#123;</span><br><span class="line">        notify.setFavicon(<span class="string">'..'</span>)</span><br><span class="line">        notify.setTitle(<span class="string">"有新消息！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="实例二">实例二</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> notify = iNotify.init(&#123;</span><br><span class="line">    effect: <span class="string">'flash'</span>,</span><br><span class="line">    interval: <span class="number">500</span></span><br><span class="line">&#125;);</span><br><span class="line">notify.setFavicon(<span class="string">"1"</span>)</span><br></pre></td></tr></table></figure>
<h3 id="实例三">实例三</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iN = iNotify.init(&#123;</span><br><span class="line">    effect: <span class="string">'flash'</span>,</span><br><span class="line">    interval: <span class="number">500</span>,</span><br><span class="line">    message:<span class="string">"有消息拉！"</span>,</span><br><span class="line">    updateFavicon:&#123;<span class="comment">//可选，默认绿底白字</span></span><br><span class="line">        textColor: <span class="string">"#fff"</span>,<span class="comment">// favicon 字体颜色</span></span><br><span class="line">        backgroundColor: <span class="string">"#2F9A00"</span> <span class="comment">//背景颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).setFavicon(<span class="number">10</span>);</span><br></pre></td></tr></table></figure>
<h3 id="实例四">实例四</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iN = iNotify.init().setFavicon(<span class="number">5</span>);</span><br></pre></td></tr></table></figure>
<h3 id="实例五">实例五</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iN = iNotify.init(&#123;</span><br><span class="line">    effect: <span class="string">'flash'</span>,</span><br><span class="line">    interval: <span class="number">500</span>,</span><br><span class="line">    message:<span class="string">"有消息拉！"</span>,</span><br><span class="line">    audio:&#123;</span><br><span class="line">        file: <span class="string">'msg.mp4'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).setFavicon(<span class="number">10</span>).player();</span><br></pre></td></tr></table></figure>
<h3 id="实例五-1">实例五</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> iN = iNotify.init(&#123;</span><br><span class="line">    effect: <span class="string">'flash'</span>,</span><br><span class="line">    interval: <span class="number">500</span>,</span><br><span class="line">    message:<span class="string">"有消息拉！"</span>,</span><br><span class="line">    audio:&#123;</span><br><span class="line">        file: <span class="string">'msg.mp4'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    notification:&#123;</span><br><span class="line">        title:<span class="string">"通知！"</span>,</span><br><span class="line">        icon:<span class="string">""</span>,</span><br><span class="line">        body:<span class="string">'您来了一条新消息'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;).setFavicon(<span class="number">10</span>).player();</span><br><span class="line"></span><br><span class="line"><span class="comment">//弹出chrome通知，不传参数为预设值...</span></span><br><span class="line">iN.notify(); </span><br><span class="line"></span><br><span class="line">iN.notify(&#123;</span><br><span class="line">    title:<span class="string">"新通知"</span></span><br><span class="line">    body:<span class="string">"打雷啦，下雨啦..."</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="通知">通知</h1><p><a href="https://github.com/jaywcjlove/iNotify/issues" target="_blank" rel="external"><img src="https://img.shields.io]]>
    </summary>
    
      <category term="js" scheme="http://jslite.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Gulp教程-前端自动管理工具]]></title>
    <link href="http://jslite.io/2015/05/07/Gulp%E6%95%99%E7%A8%8B-%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    <id>http://jslite.io/2015/05/07/Gulp教程-前端自动管理工具/</id>
    <published>2015-05-07T07:08:20.000Z</published>
    <updated>2015-05-07T09:00:31.000Z</updated>
    <content type="html"><![CDATA[<p>Gulp与Grunt一样，也是一个自动任务运行器。它充分借鉴了Unix操作系统的管道（pipe）思想，很多人认为，在操作上，它要比Grunt简单。</p>
<h1 id="安装">安装</h1><p>进入相关项目目录。</p>
<p><code>npm install -g gulp</code> 全局安装  </p>
<h1 id="gulpfile-js">gulpfile.js</h1><h2 id="gulp本地安装">gulp本地安装</h2><p><code>npm install --save-dev gulp</code> 本地模块安装  </p>
<h2 id="js中添加任务">js中添加任务</h2><p>项目根目录中的 <code>gulpfile.js</code>，是Gulp的配置文件。它大概是下面的样子。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="gulp-uglify">gulp-uglify</h1><p>压缩源码，先安装 <code>gulp-uglify</code> 这个模块。</p>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-uglify</span><br></pre></td></tr></table></figure>
<p>gulpfile.js加载gulp和gulp-uglify模块之后，使用gulp模块的task方法指定任务。task方法有两个参数，第一个是任务名，第二个是任务函数。在任务函数中，使用gulp模块的src方法，指定所要处理的文件，然后使用pipe方法，将上一步的输出转为当前的输入，进行链式处理。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    gulp.src(<span class="string">'./src/*.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./build/'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>注意 必须有一个默认的 <code>default</code> 任务。src方法读入文件产生数据流，dest方法将数据流写入文件，中间是一些中间步骤，每一步都对数据流进行一些处理。  </p>
<p><code>js/app.js</code>：指定确切的文件名。<br><code>js/*.js</code>：某个目录所有后缀名为js的文件。<br><code>js/**/*.js</code>：某个目录及其所有子目录中的所有后缀名为js的文件。<br><code>!js/app.js</code>：除了js/app.js以外的所有文件。<br><code>*.+(js|css)</code>：匹配项目根目录下，所有后缀名为js或css的文件。  </p>
<h1 id="gulp-rename">gulp-rename</h1><p>重命名<a href="https://github.com/hparra/gulp-rename" target="_blank" rel="external">gulp-rename</a></p>
<h2 id="安装-1">安装</h2><figure class="highlight q"><table><tr><td class="code"><pre><span class="line">npm install --<span class="built_in">save</span>-<span class="built_in">dev</span> gulp-rename</span><br></pre></td></tr></table></figure>
<h2 id="修改_gulpfile_文件">修改 gulpfile 文件</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>)</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    gulp.src(<span class="string">'./src/iNotify.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(rename(&#123;</span><br><span class="line">            extname:<span class="string">'.min.js'</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./build/'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="gulp-watch">gulp-watch</h1><p>gulp模块的watch方法，用于指定需要监视的文件。一旦这些文件发生变动，就运行指定任务。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</span><br><span class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>)</span><br><span class="line">    watch = <span class="built_in">require</span>(<span class="string">'gulp-watch'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//默认执行default任务，并执行监听任务</span></span><br><span class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'watch'</span>], <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="comment">// gulp.start('styles', 'scripts', 'images');</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//watch任务：侦听js文件执行 build 任务</span></span><br><span class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">   gulp.watch(<span class="string">'src/*.js'</span>, [<span class="string">'build'</span>]);<span class="comment">//侦听js文件执行 build 任务</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//build任务：压缩js | js重命名 | 压缩</span></span><br><span class="line">gulp.task(<span class="string">'build'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    gulp.src(<span class="string">'./src/iNotify.js'</span>)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(rename(&#123;</span><br><span class="line">            extname:<span class="string">'.min.js'</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./build/'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="gulp-load-plugins">gulp-load-plugins</h1><p>这种一一加载的写法，比较麻烦。使用gulp-load-plugins模块，可以加载package.json文件中所有的gulp模块。上面的代码用gulp-load-plugins模块改写，就是下面这样。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</span><br><span class="line">    gulpLoadPlugins = <span class="built_in">require</span>(<span class="string">'gulp-load-plugins'</span>),</span><br><span class="line">    plugins = gulpLoadPlugins();</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'js'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> gulp.src(<span class="string">'js/*.js'</span>)</span><br><span class="line">      .pipe(plugins.jshint())</span><br><span class="line">      .pipe(plugins.jshint.reporter(<span class="string">'default'</span>))</span><br><span class="line">      .pipe(plugins.uglify())</span><br><span class="line">      .pipe(plugins.concat(<span class="string">'app.js'</span>))</span><br><span class="line">      .pipe(gulp.dest(<span class="string">'build'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>上面代码假设package.json文件包含以下内容。<br><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   "<span class="attribute">devDependencies</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">gulp-concat</span>": <span class="value"><span class="string">"~2.2.0"</span></span>,</span><br><span class="line">      "<span class="attribute">gulp-uglify</span>": <span class="value"><span class="string">"~0.2.1"</span></span>,</span><br><span class="line">      "<span class="attribute">gulp-jshint</span>": <span class="value"><span class="string">"~1.5.1"</span></span>,</span><br><span class="line">      "<span class="attribute">gulp</span>": <span class="value"><span class="string">"~3.5.6"</span></span><br><span class="line">   </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="参考地址">参考地址</h1><p><a href="http://gulpjs.com/" target="_blank" rel="external">gulpjs.com</a><br><a href="http://gulpjs.com/plugins/" target="_blank" rel="external">plugins</a>    </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Gulp与Grunt一样，也是一个自动任务运行器。它充分借鉴了Unix操作系统的管道（pipe）思想，很多人认为，在操作上，它要比Grunt简单。</p>
<h1 id="安装">安装</h1><p>进入相关项目目录。</p>
<p><code>npm install -g]]>
    </summary>
    
      <category term="gulp" scheme="http://jslite.io/tags/gulp/"/>
    
      <category term="nodejs" scheme="http://jslite.io/tags/nodejs/"/>
    
      <category term="tools" scheme="http://jslite.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[提交自己的包到bower、npm中]]></title>
    <link href="http://jslite.io/2015/05/03/%E6%8F%90%E4%BA%A4%E8%87%AA%E5%B7%B1%E5%8C%85%E5%88%B0bower%E3%80%81npm%E4%B8%AD/"/>
    <id>http://jslite.io/2015/05/03/提交自己包到bower、npm中/</id>
    <published>2015-05-02T17:01:49.000Z</published>
    <updated>2015-05-06T15:09:17.000Z</updated>
    <content type="html"><![CDATA[<h1 id="bower">bower</h1><p>Bower 是 twitter 推出的一款包管理工具，基于nodejs的模块化思想，把功能分散到各个模块中，让模块和模块之间存在联系，通过 Bower 来管理模块间的这种联系。  </p>
<p><a href="http://bower.io/" target="_blank" rel="external">bower官网</a>  </p>
<h2 id="安装Bower">安装Bower</h2><p>一旦你已经安装了上面所说的所有必要文件，键入以下命令安装Bower：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> -g bower</span><br></pre></td></tr></table></figure>
<p>这行命令是Bower的全局安装，-g 操作表示全局。</p>
<h2 id="使用bower">使用bower</h2><ol>
<li>直接下载 git 库: <code>bower install git://github.com/JSLite/JSLite.git</code>  </li>
<li>github别名自动解析git库: <code>bower install JSLite/JSLite</code>  </li>
<li>下载线上的任意文件: <code>bower install http://foo.com/jquery.awesome-plugin.js</code>  </li>
<li>下载本地库: <code>bower install ./repos/jquery</code></li>
</ol>
<h2 id="常用命令">常用命令</h2><p><code>$ bower install jquery --save</code> 添加依赖并更新bower.json文件<br><code>$ bower cache clean</code> 安装失败清除缓存<br><code>$ bower install storejs</code> 安装storejs<br><code>$ bower uninstall storejs</code> 卸载storejs    </p>
<h2 id="注册">注册</h2><h3 id="添加配置文件">添加配置文件</h3><p>bower.json文件的使用可以让包的安装更容易，你可以在应用程序的根目录下创建一个名为 <code>bower.json</code> 的文件，并定义它的依赖关系。使用<code>bower init</code> 命令来创建<code>bower.json</code>文件：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">$ bower init</span><br><span class="line">? name: store.js</span><br><span class="line">? <span class="built_in">version</span>: <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">? description: <span class="string">"本地存储localstorage的封装，提供简单的AIP"</span></span><br><span class="line">? authors: (kenny.wang &lt;wowohoo@qq.co&gt;)</span><br><span class="line">? license: MIT</span><br><span class="line">? homepage:</span><br><span class="line">? <span class="built_in">set</span> currently installed components <span class="keyword">as</span> dependencies?: Yes</span><br><span class="line">? <span class="built_in">add</span> commonly ignored <span class="built_in">files</span> <span class="built_in">to</span> ignore list?: Yes</span><br><span class="line">? would you like <span class="built_in">to</span> mark this package <span class="keyword">as</span> <span class="keyword">private</span> which prevents <span class="keyword">it</span> <span class="built_in">from</span> being accidentally publis? would you like <span class="built_in">to</span> mark this package <span class="keyword">as</span> <span class="keyword">private</span> which prevents <span class="keyword">it</span> <span class="built_in">from</span> being accidentally published <span class="built_in">to</span> <span class="operator">the</span> registry?: No</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  name: <span class="string">'store.js'</span>,</span><br><span class="line">  main: <span class="string">'store.js'</span>,</span><br><span class="line">  <span class="built_in">version</span>: <span class="string">'1.0.1'</span>,</span><br><span class="line">  authors: [</span><br><span class="line">    <span class="string">'(kenny.wang &lt;wowohoo@qq.co&gt;)'</span></span><br><span class="line">  ],</span><br><span class="line">  description: <span class="string">'"本地存储localstorage的封装，提供简单的AIP"'</span>,</span><br><span class="line">  moduleType: [</span><br><span class="line">    <span class="string">'amd'</span>,</span><br><span class="line">    <span class="string">'node'</span></span><br><span class="line">  ],</span><br><span class="line">  keywords: [</span><br><span class="line">    <span class="string">'storejs'</span></span><br><span class="line">  ],</span><br><span class="line">  license: <span class="string">'MIT'</span>,</span><br><span class="line">  ignore: [</span><br><span class="line">    <span class="string">'**/.*'</span>,</span><br><span class="line">    <span class="string">'node_modules'</span>,</span><br><span class="line">    <span class="string">'bower_components'</span>,</span><br><span class="line">    <span class="string">'test'</span>,</span><br><span class="line">    <span class="string">'tests'</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">? Looks good?: Yes</span><br></pre></td></tr></table></figure>
<h3 id="注册自己的包">注册自己的包</h3><p>可以注册自己的包，这样其他人也可以使用了，这个操作只是在服务器上保存了一个隐射，服务器本身不托管代码。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">bower <span class="keyword">register</span> storejs git:<span class="comment">//github.com/jaywcjlove/store.js.git</span></span><br></pre></td></tr></table></figure>
<h1 id="npm">npm</h1><p>npm全称Node Package Manager，是node.js的模块依赖管理工具。使用github管理NPM包的代码，并定期提交至NPM服务器；<br><a href="https://www.npmjs.com/" target="_blank" rel="external">npm官网</a>  </p>
<h2 id="提交自己开发的NPM包">提交自己开发的NPM包</h2><h3 id="创建package-json文件">创建package.json文件</h3><p>package.json文件的使用可以让包的安装更容易，你可以在应用程序的根目录下创建一个名为 <code>package.json</code> 的文件，并定义它的依赖关系。使用<code>npm init</code> 命令来创建<code>package.json</code>文件：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">$ npm init</span><br><span class="line">This utility will walk you through creating <span class="operator">a</span> package.json <span class="built_in">file</span>.</span><br><span class="line">It only covers <span class="operator">the</span> most common <span class="keyword">items</span>, <span class="operator">and</span> tries <span class="built_in">to</span> guess sane defaults.</span><br><span class="line"></span><br><span class="line">See `npm help json` <span class="keyword">for</span> definitive documentation <span class="command"><span class="keyword">on</span> <span class="title">these</span> <span class="title">fields</span></span></span><br><span class="line"><span class="operator">and</span> exactly what they <span class="built_in">do</span>.</span><br><span class="line"></span><br><span class="line">Use `npm install &lt;pkg&gt; <span class="comment">--save` afterwards to install a package and</span></span><br><span class="line">save <span class="keyword">it</span> <span class="keyword">as</span> <span class="operator">a</span> dependency <span class="operator">in</span> <span class="operator">the</span> package.json <span class="built_in">file</span>.</span><br><span class="line"></span><br><span class="line">Press ^C <span class="keyword">at</span> <span class="keyword">any</span> <span class="built_in">time</span> <span class="built_in">to</span> quit.</span><br><span class="line">name: (store.js)</span><br><span class="line"><span class="built_in">version</span>: (<span class="number">1.0</span><span class="number">.0</span>)</span><br><span class="line">description: Local storage localstorage package provides <span class="operator">a</span> simple API</span><br><span class="line">entry point: (store.js)</span><br><span class="line">test <span class="command"><span class="keyword">command</span>: <span class="title">store</span>.<span class="title">js</span></span></span><br><span class="line">git repository: (<span class="keyword">https</span>://github.com/jaywcjlove/store.js.git)</span><br><span class="line">keywords: store.js</span><br><span class="line">author: (kenny.wang &lt;wowohoo@qq.co&gt;)</span><br><span class="line">license: (ISC) MIT</span><br><span class="line">About <span class="built_in">to</span> <span class="built_in">write</span> <span class="built_in">to</span> /Applications/XAMPP/xamppfiles/htdocs/git/github.com/myJS/store.js/package.json:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"store.js"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="string">"description"</span>: <span class="string">"Local storage localstorage package provides a simple API"</span>,</span><br><span class="line">  <span class="string">"main"</span>: <span class="string">"store.js"</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"store.js"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"repository"</span>: &#123;</span><br><span class="line">    <span class="string">"type"</span>: <span class="string">"git"</span>,</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"https://github.com/jaywcjlove/store.js.git"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"keywords"</span>: [</span><br><span class="line">    <span class="string">"store.js"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"author"</span>: <span class="string">" &lt;wowohoo@qq.co&gt; (kenny.wang &lt;wowohoo@qq.co&gt;)"</span>,</span><br><span class="line">  <span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">  <span class="string">"bugs"</span>: &#123;</span><br><span class="line">    <span class="string">"url"</span>: <span class="string">"https://github.com/jaywcjlove/store.js/issues"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"homepage"</span>: <span class="string">"https://github.com/jaywcjlove/store.js"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Is this ok? (yes) yes</span><br></pre></td></tr></table></figure>
<h2 id="发布到线上">发布到线上</h2><h3 id="添加用户">添加用户</h3><p>按照提示输入用户名，密码和邮箱</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> adduser</span><br></pre></td></tr></table></figure>
<h3 id="登陆用户">登陆用户</h3><p>按照提示输入用户名，密码和邮箱</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> login</span><br></pre></td></tr></table></figure>
<h3 id="发布">发布</h3><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> publish</span><br></pre></td></tr></table></figure>
<p>如果不带参数，则会在当前目录下查找package.json文件，按照该文件描述信息发布；<br>如果指定目录，就会在指定目录下查找package.json文件<br>测试是否发布成功，在官网搜索一下<a href="https://www.npmjs.com/" target="_blank" rel="external">www.npmjs.com</a>  </p>
<p>注： <code>package.json</code> 中的<code>name</code>不要又特殊字符哦  </p>
<h4 id="版本更新">版本更新</h4><p>修改package.json里的版本号，重新npm publish</p>
<h4 id="取消发布">取消发布</h4><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> unpublish</span><br></pre></td></tr></table></figure>
<h2 id="其它命令">其它命令</h2><p><code>npm install storejs</code>  下载使用<br><code>npm config set registry https://registry.npm.taobao.org</code>  更换镜像地址<br><code>npm config get registry</code>  获取镜像地址<br><code>npm dist-tag ls jslite</code>  查看当前版本<br><code>npm dedupe</code> 尽量压平依赖树  </p>
<h2 id="国内优秀npm镜像">国内优秀npm镜像</h2><p>由于npm的源在国外，所以国内用户使用起来各种不方便。<br><a href="http://segmentfault.com/a/1190000000491162" target="_blank" rel="external">利用kappa搭建私有NPM仓库</a>  </p>
<h3 id="淘宝npm镜像">淘宝npm镜像</h3><ol>
<li>搜索地址：<a href="http://npm.taobao.org/" target="_blank" rel="external">http://npm.taobao.org/</a></li>
<li>registry地址：<a href="http://registry.npm.taobao.org/" target="_blank" rel="external">http://registry.npm.taobao.org/</a></li>
</ol>
<h3 id="cnpmjs镜像">cnpmjs镜像</h3><ol>
<li>搜索地址：<a href="http://cnpmjs.org/" target="_blank" rel="external">http://cnpmjs.org/</a></li>
<li>registry地址：<a href="http://r.cnpmjs.org/" target="_blank" rel="external">http://r.cnpmjs.org/</a></li>
</ol>
<h3 id="临时使用">临时使用</h3><figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> --registry <span class="attribute">https</span>:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org install express</span><br></pre></td></tr></table></figure>
<h3 id="持久使用">持久使用</h3><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> registry https:<span class="comment">//registry.npm.taobao.org</span></span><br><span class="line"><span class="comment">// 配置后可通过下面方式来验证是否成功</span></span><br><span class="line">npm config <span class="keyword">get</span> registry</span><br><span class="line"><span class="comment">// 或</span></span><br><span class="line">npm info express</span><br></pre></td></tr></table></figure>
<h3 id="通过cnpm使用">通过cnpm使用</h3><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=<span class="string">https:</span><span class="comment">//registry.npm.taobao.org</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">cnpm install expresstall express</span><br></pre></td></tr></table></figure>
<h1 id="spmjs">spmjs</h1><p><a href="http://spmjs.io" target="_blank" rel="external">spmjs</a></p>
<p>据说已经不更新了，日后如果有研究再补充！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="bower">bower</h1><p>Bower 是 twitter 推出的一款包管理工具，基于nodejs的模块化思想，把功能分散到各个模块中，让模块和模块之间存在联系，通过 Bower 来管理模块间的这种联系。  </p>
<p><a href="http:]]>
    </summary>
    
      <category term="bower" scheme="http://jslite.io/tags/bower/"/>
    
      <category term="npm" scheme="http://jslite.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[js面向对象编程]]></title>
    <link href="http://jslite.io/2015/04/30/js%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    <id>http://jslite.io/2015/04/30/js面向对象编程/</id>
    <published>2015-04-30T02:47:55.000Z</published>
    <updated>2015-05-02T15:39:02.000Z</updated>
    <content type="html"><![CDATA[<p>这个是学习<a href="http://www.ruanyifeng.com/" target="_blank" rel="external">阮一峰</a>老师发的Javascript 面向对象编程教程，然后转载过来的文章，目的是为进入靠近大牛更近一点，对于一直面向过程写js偶尔用一下，当初封装<a href="http://jslite.io" target="_blank" rel="external">JSLite.io</a>就是学习的阮一峰这文章哦，用得一知半解，想升华一下，最近一直封装各种库重新温习巩固系统的学习一下。</p>
<a id="more"></a> 
<h1 id="转载原地址">转载原地址</h1><p>阮一峰  </p>
<p><a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_encapsulation.html" target="_blank" rel="external">Javascript面向对象编程（一）：封装</a><br><a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html" target="_blank" rel="external">Javascript面向对象编程（二）：构造函数的继承</a><br><a href="http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html" target="_blank" rel="external">Javascript面向对象编程（三）：非构造函数的继承</a>   </p>
<h1 id="封装">封装</h1><p>Javascript 是一种基于对象（object-based）的语言，一切皆对象。虽然新版的ES6有class(类)，但是它只是个语法糖而已，所以它不是一种正真的面向对象（OOP）语言。  </p>
<p>如果需要把<code>属性</code>（property）和<code>方法</code>（method）封装成一个对象，我们要重原型对象生成一个实例对象，应该怎么做呢？</p>
<h2 id="生成对象的原始模式">生成对象的原始模式</h2><p>假设我们把猫看成一个对象，它有 <code>名字</code> 和 <code>颜色</code> 两个属性。  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Cat = &#123;</span><br><span class="line">    name:<span class="string">""</span>,</span><br><span class="line">    color:<span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在，我们需要根据这个原型对象的规格（schema），生成两个实例对象。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cat1=&#123;&#125;;<span class="comment">//创建一个空对象</span></span><br><span class="line">    cat1.name=<span class="string">"大毛"</span>;</span><br><span class="line">    cat1.color=<span class="string">"黄毛"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> cat2 = &#123;&#125;;</span><br><span class="line">    cat2.name = <span class="string">"二毛"</span>;</span><br><span class="line">    cat2.color = <span class="string">"黑色"</span>;</span><br></pre></td></tr></table></figure>
<p>进入简单的封装了，把连个属性封装到一个对象里面。但是这里面又俩缺点：</p>
<ol>
<li>如果多生成几个实例，写起来就非常麻烦</li>
<li>实例与原型之间，没有任何办法，可以看出什么关联</li>
</ol>
<h2 id="原始模式的改进">原始模式的改进</h2><p>我们可以写一个函数，解决代码重复的问题。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        name:name,</span><br><span class="line">        color:color</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后生成实例对象，对于是调用函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cat1 = Cat(<span class="string">'大毛'</span>,<span class="string">'黄毛'</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = Cat(<span class="string">'二毛'</span>,<span class="string">'黑色'</span>);</span><br></pre></td></tr></table></figure>
<p>这种方法的问题依然是，cat1和cat2之间没有内在的联系，不能反映出他们是统一个原型对象的实例。</p>
<h2 id="构造函数模式">构造函数模式</h2><p>为了解决从圆形对象生成实例的问题，javascript 提供了一个构造函数（Constructor）模式。  </p>
<p>所谓的<code>构造函数</code> ， 其实是一个普通的函数，但是内部使用了 <code>this</code> 变量。对构造函数使用<code>new</code> 运算符，就能生成实例，并且<code>this</code> 变量会绑定在实例对象上。  </p>
<p>比如，猫的原型对象现在可以这样写：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在可以生成实例对象了。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = <span class="keyword">new</span> Cat(<span class="string">'二毛'</span>,<span class="string">'黑色'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(cat1.name); <span class="comment">//==&gt; 黄毛</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.color); <span class="comment">//==&gt; 大黄</span></span><br></pre></td></tr></table></figure>
<p>这个时候 <code>cat1</code> 和 <code>cat2</code> 会自动含有一个 <code>constructor</code> 属性，指向它们的构造函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.constructor == Cat); <span class="comment">//==&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat2.constructor == Cat); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<p>javascript 还提供了一个 <code>instanceof</code> 运算符，验证原型对象与实例对象之间的关系。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1 <span class="keyword">instanceof</span> Cat); <span class="comment">//==&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat2 <span class="keyword">instanceof</span> Cat); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<h2 id="构造函数模式的问题">构造函数模式的问题</h2><p>构造函数方法很好用，但是存在一个浪费内存的问题。  </p>
<p>请看，我们现在为<code>Cat</code>对象添加一个不变的属性 <code>type</code> (种类)，再添加一个方法 <code>eat</code> (吃老鼠)。那么，原型对象 <code>Cat</code> 就变成了下面这样：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">    <span class="keyword">this</span>.type = <span class="string">"猫科动物"</span>;</span><br><span class="line">    <span class="keyword">this</span>.eat = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="built_in">console</span>.log(<span class="string">'吃老鼠'</span>) &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还是采用相同的方法，生成实例：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cat1 =<span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 =<span class="keyword">new</span> Cat(<span class="string">'二毛'</span>,<span class="string">'黑色'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.type); <span class="comment">//==&gt;猫科动物</span></span><br><span class="line">cat1.eat(); <span class="comment">//==&gt; 吃老鼠</span></span><br></pre></td></tr></table></figure>
<p>表面上好像没有什么问题，但是实际上这样做，又个很大的弊端。那就是对于每一个实例对象，type 属性和eat() 方法都是一模一样的内容，每一次生成一个实例，都必须为重复的内容，多占用一些内存。这样既不环保，也缺乏效率。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.eat == cat2.eat); <span class="comment">//=&gt; false</span></span><br></pre></td></tr></table></figure>
<p>能补能让type 属性和eat()方法再内存中只生成一次，然后所有实例都指向那个内存地址呢？回答是可以的。（哈哈不是我回答的，阮一峰老师回答的）</p>
<h2 id="Prototype模式">Prototype模式</h2><p>javascript 规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，，都会被构造函数的实体继承。  </p>
<p>这就意味着，我们可以把那些不变的属性和方法，直接定义在 prototype 对象上。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line">Cat.prototype.type = <span class="string">"猫科动物"</span>; </span><br><span class="line">Cat.prototype.eat = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123; <span class="built_in">console</span>.log(<span class="string">"吃老鼠"</span>) &#125;</span><br></pre></td></tr></table></figure>
<p>然后生成实例。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="keyword">var</span> cat2 = <span class="keyword">new</span> Cat(<span class="string">'二毛'</span>,<span class="string">'黑色'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.type); <span class="comment">//==&gt; 猫科动物</span></span><br><span class="line">cat1.eat(); <span class="comment">//==&gt; 吃老鼠</span></span><br></pre></td></tr></table></figure>
<p>这样所有实例的 type 属性和 eat() 方法，其实都是同一个内存地址，指向prototype对象，因此就提高了运行效率。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.eat == cat2.eat); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<h2 id="Prototype模式的验证方法">Prototype模式的验证方法</h2><p>未了配合prototype属性，javascript定义了一些辅助方法，帮助我们使用。</p>
<h3 id="isPrototypeOf()">isPrototypeOf()</h3><p>这个方法来判断，某个prototype 对象和某个实例之间的关系。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Cat.prototype.isPrototypeOf(cat1)); <span class="comment">//==&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(Cat.prototype.isPrototypeOf(cat2)); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<h3 id="hasOwnProperty()">hasOwnProperty()</h3><p>每个实例对象都有一个 hasOwnProperty()方法，用来判断某一个属性到底是本地属性，还是继承自prototype 对象的属性。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.hasOwnProperty(<span class="string">'name'</span>)); <span class="comment">//==&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(cat1.hasOwnProperty(<span class="string">'type'</span>)); <span class="comment">//==&gt; false</span></span><br></pre></td></tr></table></figure>
<h3 id="in_运算符">in 运算符</h3><p>in运算符可以用来判断，某个实例是否含有某个属性，不管是不是本地属性。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'name'</span> <span class="keyword">in</span> cat1); <span class="comment">//==&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'type'</span> <span class="keyword">in</span> cat1); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<p>in运算符黑可以用来遍历某个对象的所有属性。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> cat1)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"cat1["</span>+prop+<span class="string">"]="</span>+cat1[prop])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="构造函数的继承">构造函数的继承</h1><p>这一部分主要介绍的是，对象之间的 <code>继承</code> 的五种方法。比如，现在有一个 <code>动物</code> 对象的构造函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.species = <span class="string">"动物"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还有个<code>猫</code> 对象的构造函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如何才能使 <code>猫</code> 继承 <code>动物</code> 呢？</p>
<h2 id="构造函数绑定">构造函数绑定</h2><p>第一种方法也是最简单的方法，使用 <code>call</code> 或 <code>apply</code> 方法，将父对象的构造函数绑定在子对象上，即在子对象构造函数中加一行：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span><span class="params">(name,color)</span></span>&#123;</span><br><span class="line">    Animal.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.color = color;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species); <span class="comment">//==&gt; 动物</span></span><br></pre></td></tr></table></figure>
<h2 id="prototype模式">prototype模式</h2><p>第二种方法便常见，使用 prototype 属性。<br>如何“猫”的prototype 对象，指向一个 Animal 的实例，那么所有“猫”的实例，就能继承 Animal 了。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Cat.prototype = <span class="keyword">new</span> Animal(); </span><br><span class="line"><span class="comment">//代码第一行，我们将Cat的prototype对象指向一个Animal的实例。</span></span><br><span class="line">Cat.prototype.constructor = Cat;</span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species); <span class="comment">//==&gt; 动物</span></span><br></pre></td></tr></table></figure>
<p><code>Cat.prototype = new Animal();</code> 这行代码意思是：我们将Cat的prototype对象指向一个Animal的实例。它相当于完全删除了prototype对象原先的值，然后富裕一个新值。</p>
<p><code>Cat.prototype.constructor = Cat;</code> 这行代码意思是：原来，任何一个 <code>prototype</code> 对象都有一个 <code>constructor</code> 属性，指向它的构造函数。如果没有<code>Cat.prototype = new Animal();</code> 这一行，<code>Cat.prototype.constructor</code> 是指向Cat的；加了这一行以后，<code>Cat.prototype.constructor</code> 指向 <code>Animal</code>。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Cat.prototype.constructor == Animal); <span class="comment">//==&gt; true</span></span><br></pre></td></tr></table></figure>
<p>更重要的是，每一个实例也有一个 <code>constructor</code> 属性，默认调用 <code>prototype</code> 对象的 <code>constructor</code> 属性。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.constructor == Cat.prototype.constructor); <span class="comment">//true</span></span><br></pre></td></tr></table></figure>
<p>因此，在运行 <code>Cat.prototype = new Animal();</code> 这一行之后，<code>cat1.constructor</code> 也指向  <code>Animal</code> !</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(cat1.constructor == Animal); <span class="comment">//==&gt;true</span></span><br></pre></td></tr></table></figure>
<p>这显然会导致继承链的絮乱(cat1明明是用构造函数Cat生成的)，因此我们必须动手纠正，将 <code>Cat.prototype</code> 对象的 <code>constructor</code> 值改为Cat。这就是第二行的意思。  </p>
<p>这个是很重要的一点，编程时务必要遵守。下文都遵循这一点，即如果替换了 <code>prototype</code> 对象，<code>o.prototype = {};</code> 那么，下一步必然是为新的 <code>prototype</code> 对象上加 <code>constructor</code> 属性，并将这个属性指回原来的构造函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">o.prototype.constructor = o;</span><br></pre></td></tr></table></figure>
<h2 id="直接继承prototype">直接继承prototype</h2><p>第三种方法是对第二种方法的改进。由于 <code>Animal</code> 对象中，不变的属性都可以直接写入 <code>Animal.prototype</code>。所以，我们也可以让Cat()跳过 Animal()，直接继承 Animal.prototype 。  </p>
<p>现在，我们先将 Animal 对象改写。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">Animal.prototype.species = <span class="string">"动物"</span>;</span><br></pre></td></tr></table></figure>
<p>然后，将Cat的 <code>prototype</code> 对象，然后指向 Animal 的 prototype 对象，这样就完成了继承。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Cat.prototype = Animal.prototype;</span><br><span class="line">Cat.prototype.constructor = Cat;</span><br><span class="line"><span class="keyword">var</span> cat1= <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species);<span class="comment">//==&gt;动物</span></span><br></pre></td></tr></table></figure>
<p>与前一种方法相比，这样做的有点是效率比较高（不用执行和建立 Animal 的实例了），比较省内存。缺点是 Cat.prototype 和 Animal.prototype 现在只想了同一个对象，那么任何对象 Cat.prototype 的修改，都会反映到 Animal.prototype 。<br>所以，上面这一段代码其实是有问题的。请看第二行</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Cat.prototype.constructor =Cat;</span><br></pre></td></tr></table></figure>
<p>这一句实际上把 Animal.prototype 对象 constructor 属性也改掉了！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Animal.prototype.constructor); <span class="comment">//=&gt; Cat</span></span><br></pre></td></tr></table></figure>
<h2 id="利用空对象作为中介">利用空对象作为中介</h2><p>由于“直接继承prototype”存在上述的缺点，所以就有第四种方法，利用一个空对象作为中介。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">F.prototype = Animal.prototype;</span><br><span class="line">Cat.prototype = <span class="keyword">new</span> F();</span><br><span class="line">Cat.prototype.constructor = Cat;</span><br></pre></td></tr></table></figure>
<p>F是空对象，所以几乎占内存。这事，修改 Cat 的 prototype 对象，就不会影响到 Animal 的 prototype 对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Animal.prototype.constructor); <span class="comment">//==&gt; Animal</span></span><br></pre></td></tr></table></figure>
<p>我们将上面的方法，封装成一个函数，方便于使用。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend</span><span class="params">(Child,Parent)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    F.prototype = Parent.prototype;</span><br><span class="line">    Child.prototype = <span class="keyword">new</span> F();</span><br><span class="line">    Child.prototype.constructor = Child;</span><br><span class="line">    Child.uber = Parent.prototype;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用的时候，方法如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">extend(Cat,Animal);</span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">'大毛'</span>,<span class="string">'黄色'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species); <span class="comment">//==&gt; 动物</span></span><br></pre></td></tr></table></figure>
<p>这个 extend 函数，就是 YUI 库如何实现继承的方法。<br>另外，说明一点，函数体最后一行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Child.uber = Parent.prototype;</span><br></pre></td></tr></table></figure>
<p>意思是为子对象设一个uber 属性，这个属性直接指向父对象的prototype属性。（uber是一个德语词，意思是“向上”、“上一层”。）这等于在子对象上打开一条通道，可以直接调用父对象的方法。这一行放在这里，只是为了实现继承的完备性，纯属备用性质。</p>
<h2 id="拷贝继承">拷贝继承</h2><p>上面采用 <code>prototype</code> 对象，实现继承。我们也可以换一种思路，纯粹采用“拷贝”方法实现继承。简单说，如果把父对象的所有属性和方法，拷贝进子对象，不也能够实现继承吗？这样我们有了第五种方法。<br>首先，还是把 Animal 的所有不变属性，都放到它的 prototype 对象上。  </p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">Animal.prototype.species = <span class="string">"动物"</span>;</span><br></pre></td></tr></table></figure>
<p>然后，再写一个函数，实现属性拷贝的目的。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extend2</span><span class="params">(Child,Parent)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> p = Parent.prototype;</span><br><span class="line">    <span class="keyword">var</span> c = Child.prototype;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> p)&#123;</span><br><span class="line">        c[i] = p[i]</span><br><span class="line">    &#125;</span><br><span class="line">    c.uber = p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个函数的作用，就是将父对象的prototype 对象中的属性，一一拷贝给 Child 对象的 prototype 对象。  </p>
<p>使用的时候，这样写：  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">extend2(Cat,Animal);</span><br><span class="line"><span class="keyword">var</span> cat1 = <span class="keyword">new</span> Cat(<span class="string">"大毛"</span>,<span class="string">"黄色"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(cat1.species); <span class="comment">//==&gt; 动物</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="非构造函数的继承">非构造函数的继承</h1><h2 id="什么是“非构造函数”的继承？">什么是“非构造函数”的继承？</h2><p>比如，现在有一个对象，叫做“中国人”。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Chinese = &#123;</span><br><span class="line">    nation:<span class="string">"中国"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还有个对象，叫做“医生”。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span>  Doctor = &#123;</span><br><span class="line">    career:<span class="string">"医生"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>请问怎样才能让“医生” 去继承“中国人”呢？也就是说，我怎样才能生成一个“中国医生”的对象呢？<br>这里要注意，这连个对象都是普通对象，不是构造函数，无法使用构造函数的方法实现“继承”。  </p>
<h2 id="object方法">object方法</h2><p>json格式的发明人 Douglas Crockford，提出了一个object()函数，可以做到这一点。  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">object</span><span class="params">(o)</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">F</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">    F.prototype = o;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个object()函数，其实只是做一件事，就是把子对象的prototype 属性，指向父对象，从而使得子对象与父对象连在一起使用的时候，第一步先在父对象的基础上，生成子对象：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Doctor = object(Chinese);</span><br></pre></td></tr></table></figure>
<p>然后，再加上子对象本身的属性：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Doctor.career = <span class="string">"医生"</span>;</span><br></pre></td></tr></table></figure>
<p>这时，子对象已经继承了父对象的属性了。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Doctor.nation); <span class="comment">//==&gt;中国</span></span><br></pre></td></tr></table></figure>
<h2 id="浅拷贝">浅拷贝</h2><p>除了使用“prototype链”以外，还有另一种思路：把父对象的属性，全部拷贝给子对象，也能实现继承。  </p>
<p>下面这个函数，就是在做拷贝：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extendCopy</span><span class="params">(p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> p)&#123;</span><br><span class="line">        c[i] = p[i]</span><br><span class="line">    &#125;</span><br><span class="line">    c.uber = p;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用的时候，这样写：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Doctor = extendCopy(Chinese);</span><br><span class="line">Doctor.career = <span class="string">"医生"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Doctor.nation) <span class="comment">//==&gt; 中国</span></span><br></pre></td></tr></table></figure>
<p>但是，这样拷贝有一个问题。那就是，如果父对象的属性等于数组或者另一个对象，那么实际上，子对象获得的只有一个内存地址，而不是真正拷贝，因为存在父对象被篡改的可能。</p>
<p>请看，现在给Chinese 添加一个“出生地”属性，它的值是一个数组。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Chinese.birthPlaces = [<span class="string">"北京"</span>,<span class="string">"上海"</span>,<span class="string">"香港"</span>];</span><br></pre></td></tr></table></figure>
<p>通过 extendCopy() 函数，Doctor 继承了Chinese。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> Doctor = extendCopy(Chinese)</span><br></pre></td></tr></table></figure>
<p>然后，我们为 Doctor 的“出生地”添加一个城市：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Doctor.birthPlaces.push(<span class="string">'厦门'</span>);</span><br></pre></td></tr></table></figure>
<p>发生了什么事儿？Chinese的“出生地”也被改掉了！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Doctor.birthPlaces); <span class="comment">//==&gt; 北京，上海，香港，厦门</span></span><br><span class="line"><span class="built_in">console</span>.log(Chinese.birthPlaces); <span class="comment">//==&gt; 北京，上海，香港，厦门</span></span><br></pre></td></tr></table></figure>
<p>所以，extendCopy()只是拷贝基本类型的数据，我们把这种拷贝叫做”浅拷贝”。这是早期jQuery实现继承的方式。</p>
<h2 id="深拷贝">深拷贝</h2><p>所谓“深拷贝”，就是能够实现真正意义上的数组和对象的拷贝。它的实现并不难，只要递归调用“浅拷贝”就行了。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deepCopy</span><span class="params">(p,c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = c || &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">typeof</span> p[i] == <span class="string">'object'</span>)&#123;</span><br><span class="line">            c[i] = (p[i].constructor === <span class="built_in">Array</span>) ? []:&#123;&#125;;</span><br><span class="line">            deepCopy(p[i],c[i])</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            c[i] = p[i]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用的时候这样写：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Chinese.birthPlaces = [<span class="string">'北京'</span>,<span class="string">'上海'</span>,<span class="string">'香港'</span>];<span class="comment">//给父对象加一个属性，值为数组。</span></span><br><span class="line"><span class="keyword">var</span>  Doctor = deepCopy(Chinese);</span><br></pre></td></tr></table></figure>
<p>然后，再子对象上修改这个属性：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">Doctor.birthPlaces.push(<span class="string">'厦门'</span>);</span><br></pre></td></tr></table></figure>
<p>这时，父对象就不会受到影响了。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(Doctor.birthPlaces); <span class="comment">//==&gt; 北京，上海，香港，厦门</span></span><br><span class="line"><span class="built_in">console</span>.log(Chinese.birthPlaces); <span class="comment">//==&gt; 北京，上海，香港</span></span><br></pre></td></tr></table></figure>
<p>目前 我封装的<a href="http://jslite.io" target="_blank" rel="external">JSLite.io</a> 就是使用的这种继承方法。JQuery 也是用的这种方法哦。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这个是学习<a href="http://www.ruanyifeng.com/">阮一峰</a>老师发的Javascript 面向对象编程教程，然后转载过来的文章，目的是为进入靠近大牛更近一点，对于一直面向过程写js偶尔用一下，当初封装<a href="http://jslite.io">JSLite.io</a>就是学习的阮一峰这文章哦，用得一知半解，想升华一下，最近一直封装各种库重新温习巩固系统的学习一下。</p>]]>
    
    </summary>
    
      <category term="js" scheme="http://jslite.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[各种设备的CSS3MediaQuery整理及爽歪歪写法]]></title>
    <link href="http://jslite.io/2015/04/29/%E5%90%84%E7%A7%8D%E8%AE%BE%E5%A4%87%E7%9A%84CSS3MediaQuery%E6%95%B4%E7%90%86%E5%8F%8A%E7%88%BD%E6%AD%AA%E6%AD%AA%E5%86%99%E6%B3%95/"/>
    <id>http://jslite.io/2015/04/29/各种设备的CSS3MediaQuery整理及爽歪歪写法/</id>
    <published>2015-04-29T08:20:54.000Z</published>
    <updated>2015-04-29T08:50:50.000Z</updated>
    <content type="html"><![CDATA[<h2 id="响应式布局">响应式布局</h2><p>响应式布局麻烦之处就是每个尺寸的都要进行css定义，这个真的不是一般的蛋疼，下面有搜集到的各种尺寸css Media Query内容，搜集来源：<a href="https://css-tricks.com/snippets/css/media-queries-for-standard-devices/" target="_blank" rel="external">media-queries-for-standard-devices</a>。  </p>
<p>看了之后是不是非常之蛋疼呢，那么只有使用工具来写这些玩意儿了，俺用得最爽的就是 <code>stylus</code> ，真的爽yy了，如果 <code>stylus</code> 不会玩耍请看这里 <a href="http://jslite.io/2015/04/27/stylus%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/" target="_blank" rel="external">stylus入门使用方法</a></p>
<p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Media queries</span></span><br><span class="line">mq-mobile = <span class="string">"screen and (max-width: 479px)"</span></span><br><span class="line">mq-tablet = <span class="string">"screen and (min-width: 480px) and (max-width: 767px)"</span></span><br><span class="line">mq-iPhones4 = <span class="string">"only screen and (min-device-width: 320px) and (max-device-width: 480px) and (-webkit-min-device-pixel-ratio: 2)"</span></span><br><span class="line">mq-<span class="attribute">normal</span> = <span class="string">"screen and (min-width: 768px)"</span></span><br><span class="line"></span><br><span class="line"><span class="class">.page-number</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block</span><br><span class="line">    <span class="at_rule">@media</span> mq-mobile</span><br><span class="line">        <span class="attribute">display</span>: <span class="attribute">none</span></span><br><span class="line">    <span class="at_rule">@media</span> mq-tablet</span><br><span class="line">        <span class="attribute">color</span>:red</span><br><span class="line">    <span class="at_rule">@media</span> mq-iPhones4</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">12px</span></span><br><span class="line">    <span class="at_rule">@media</span> mq-<span class="attribute">normal</span></span><br><span class="line">        <span class="attribute">background</span>:yellow</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.page-number</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> inline-block</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (max-width: <span class="number">479px</span>) </span>&#123;</span><br><span class="line">  <span class="class">.page-number</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (min-width: <span class="number">480px</span>) and (max-width: <span class="number">767px</span>) </span>&#123;</span><br><span class="line">  <span class="class">.page-number</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen and (min-device-width: <span class="number">320px</span>) and (max-device-width: <span class="number">480px</span>) and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line">  <span class="class">.page-number</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (min-width: <span class="number">768px</span>) </span>&#123;</span><br><span class="line">  <span class="class">.page-number</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ff0</span></span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Phones_and_Handhelds">Phones and Handhelds</h2><h3 id="iPhones">iPhones</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- iPhone 4 and 4S ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">480px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">480px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">480px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- iPhone 5 and 5S ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">568px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">568px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">320px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">568px</span>)</span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- iPhone 6 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">375px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">667px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">375px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">667px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: portrait) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">375px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">667px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (orientation: landscape) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- iPhone 6+ ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">3</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">3</span>)</span><br><span class="line">  and (orientation: portrait) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">414px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">736px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">3</span>)</span><br><span class="line">  and (orientation: landscape) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Galaxy_Phones">Galaxy Phones</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Galaxy S3 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">2</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">2</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- Galaxy S4 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">320px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- Galaxy S5 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="HTC_Phones">HTC Phones</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- HTC One ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">360px</span>) </span><br><span class="line">  and (device-height: <span class="number">640px</span>) </span><br><span class="line">  and (-webkit-device-pixel-ratio: <span class="number">3</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Tablets">Tablets</h2><h3 id="iPads">iPads</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- iPad mini ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: portrait) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: landscape) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- iPad 1 and 2 ----------- */</span></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: portrait) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: landscape) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- iPad 3 and 4 ----------- */</span></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: portrait) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">768px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1024px</span>) </span><br><span class="line">  and (orientation: landscape) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Galaxy_Tablets">Galaxy Tablets</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Galaxy Tab 10.1 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> </span><br><span class="line">  (min-device-width: <span class="number">800px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1280px</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> </span><br><span class="line">  (max-device-width: <span class="number">800px</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> </span><br><span class="line">  (max-device-width: <span class="number">1280px</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Nexus_Tablets">Nexus Tablets</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Asus Nexus 7 ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">601px</span>) </span><br><span class="line">  and (device-height: <span class="number">906px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.331</span>) </span><br><span class="line">  and (-webkit-max-device-pixel-ratio: <span class="number">1.332</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">601px</span>) </span><br><span class="line">  and (device-height: <span class="number">906px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.331</span>) </span><br><span class="line">  and (-webkit-max-device-pixel-ratio: <span class="number">1.332</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (device-width: <span class="number">601px</span>) </span><br><span class="line">  and (device-height: <span class="number">906px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.331</span>) </span><br><span class="line">  and (-webkit-max-device-pixel-ratio: <span class="number">1.332</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Kindle_Fire">Kindle Fire</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Kindle Fire HD 7" ----------- */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">800px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1280px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">800px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1280px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">800px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1280px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ----------- Kindle Fire HD 8.9" ----------- */</span></span><br><span class="line"><span class="comment">/* Portrait and Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">1200px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1600px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* Portrait */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">1200px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1600px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span><br><span class="line">  and (orientation: portrait) </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Landscape */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> only screen </span><br><span class="line">  and (min-device-width: <span class="number">1200px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1600px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1.5</span>) </span><br><span class="line">  and (orientation: landscape) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Laptops">Laptops</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Non-Retina Screens ----------- */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (min-device-width: <span class="number">1200px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1600px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">1</span>) </span>&#123; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* ----------- Retina Screens ----------- */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen </span><br><span class="line">  and (min-device-width: <span class="number">1200px</span>) </span><br><span class="line">  and (max-device-width: <span class="number">1600px</span>) </span><br><span class="line">  and (-webkit-min-device-pixel-ratio: <span class="number">2</span>)</span><br><span class="line">  and (min-resolution: <span class="number">192dpi</span>) </span>&#123; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Wearables">Wearables</h2><h3 id="Apple_Watch">Apple Watch</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Apple Watch ----------- */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span></span><br><span class="line">  (max-device-width: <span class="number">42mm</span>)</span><br><span class="line">  and (min-device-width: <span class="number">38mm</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Moto_360_Watch">Moto 360 Watch</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* ----------- Moto 360 Watch ----------- */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> </span><br><span class="line">  (max-device-width: <span class="number">218px</span>)</span><br><span class="line">  and (max-device-height: <span class="number">281px</span>) </span>&#123; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="响应式布局">响应式布局</h2><p>响应式布局麻烦之处就是每个尺寸的都要进行css定义，这个真的不是一般的蛋疼，下面有搜集到的各种尺寸css Media Query内容，搜集来源：<a href="https://css-tricks.com/snippets]]>
    </summary>
    
      <category term="css3" scheme="http://jslite.io/tags/css3/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[stylus入门使用方法]]></title>
    <link href="http://jslite.io/2015/04/27/stylus%E8%8F%9C%E9%B8%9F%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://jslite.io/2015/04/27/stylus菜鸟入门使用方法/</id>
    <published>2015-04-26T17:17:02.000Z</published>
    <updated>2015-04-27T16:56:53.000Z</updated>
    <content type="html"><![CDATA[<h2 id="stylus介绍">stylus介绍</h2><p>是个什么鬼？对于开发来说，CSS的弱点在于静态化。我们需要一个真正能提高开发效率的工具，<code>LESS</code>， <code>SASS</code>都在这方面做了一些贡献。  </p>
<p><code>Stylus</code> 是一个CSS的预处理框架，2010年产生，来自Node.js社区，主要用来给Node项目进行CSS预处理支持，所以 <code>Stylus</code> 是一种新型语言，可以创建健壮的、动态的、富有表现力的CSS。比较年轻，其本质上做的事情与 <code>SASS</code>/<code>LESS</code> 等类似，应该是有很多借鉴，所以近似脚本的方式去写CSS代码。  </p>
<p><code>Stylus</code>默认使用 <code>.styl</code> 的作为文件扩展名，支持多样性的CSS语法。</p>
<p><code>Stylus</code>功能上更为强壮，和js联系更加紧密。所以我选择 <code>Stylus</code>，<code>SASS</code> 玩儿过一段时间，主要是这玩意依赖ruby运行，所以我放弃使用了。</p>
<h2 id="文档参考">文档参考</h2><p><a href="http://learnboost.github.io/stylus/" target="_blank" rel="external">官方Stylus API</a><br><a href="http://www.zhangxinxu.com/jq/stylus/" target="_blank" rel="external">张鑫旭中文翻译</a><br><a href="http://learnboost.github.io/stylus/try.html" target="_blank" rel="external">Try Stylus!</a>  </p>
<h2 id="Stylus安装">Stylus安装</h2><p>全局安装，安装之前你需要你安装 <code>nodejs</code> 这个怎么安装搜去哦。</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> stylus -g</span><br></pre></td></tr></table></figure>
<p>这样就算是安装完Stylus了，也可以正常使用Stylus。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">Usage: stylus [options] [command] [&lt; <span class="keyword">in</span> [&gt; <span class="keyword">out</span>]]</span><br><span class="line">              [<span class="keyword">file</span>|<span class="keyword">dir</span> ...]</span><br><span class="line">Commands:</span><br><span class="line">  <span class="keyword">help</span> &lt;<span class="keyword">prop</span>&gt;     Opens <span class="keyword">help</span> info <span class="keyword">for</span> &lt;<span class="keyword">prop</span>&gt; <span class="keyword">in</span></span><br><span class="line">                  your default browser. (OS X only)</span><br><span class="line">Options:</span><br><span class="line"></span><br><span class="line">  -<span class="keyword">u</span>, --<span class="keyword">use</span> &lt;path&gt;        Utilize the stylus <span class="keyword">plugin</span> at &lt;path&gt;</span><br><span class="line">  -i, --interactive       Start interactive REPL</span><br><span class="line">  -w, --watch             Watch <span class="keyword">file</span>(s) <span class="keyword">for</span> changes and re-compile</span><br><span class="line">  -o, --<span class="keyword">out</span> &lt;<span class="keyword">dir</span>&gt;         Output to &lt;<span class="keyword">dir</span>&gt; when passing files</span><br><span class="line">  -C, --css &lt;src&gt; [dest]  Convert CSS <span class="keyword">input</span> to Stylus</span><br><span class="line">  -I, --<span class="keyword">include</span> &lt;path&gt;    Add &lt;path&gt; to <span class="keyword">lookup</span> paths</span><br><span class="line">  -c, --<span class="keyword">compress</span>          <span class="keyword">Compress</span> CSS output</span><br><span class="line">  -<span class="keyword">d</span>, --<span class="keyword">compare</span>           <span class="keyword">Display</span> <span class="keyword">input</span> along with output</span><br><span class="line">  -f, --firebug           Emits debug infos <span class="keyword">in</span> the generated css that</span><br><span class="line">                          can be used <span class="keyword">by</span> the FireStylus Firebug <span class="keyword">plugin</span></span><br><span class="line">  -<span class="keyword">l</span>, --<span class="keyword">line</span>-numbers      Emits comments <span class="keyword">in</span> the generated CSS</span><br><span class="line">                          indicating the corresponding Stylus <span class="keyword">line</span></span><br><span class="line">  -V, --<span class="keyword">version</span>           <span class="keyword">Display</span> the <span class="keyword">version</span> of Stylus</span><br><span class="line">  -<span class="keyword">h</span>, --<span class="keyword">help</span>              <span class="keyword">Display</span> <span class="keyword">help</span> information</span><br></pre></td></tr></table></figure>
<h2 id="生成CSS">生成CSS</h2><h3 id="命令行中">命令行中</h3><p>建立一个<code>stylusExample/</code>，再在里面建立 <code>src</code> 目录专门存放 <code>stylus</code> 文件，在里面建立 <code>example.styl</code> 文件。然后在 <code>stylusExample</code> 目录下面执行下面命令</p>
<p><code>$ stylus --compress  src/</code>  </p>
<p>输出<code>compiled src/example.css</code> ，这个时候表示你生成成功了，带上<code>--compress</code>参数表示你生成压缩的CSS文件。   </p>
<p><code>$ stylus --css css/example.css css/out.styl</code>  CSS转换成styl<br><code>$ stylus help box-shadow</code>  CSS属性的帮助<br><code>$ stylus --css test.css</code>  输出基本名一致的.styl文件  </p>
<h3 id="grunt生成">grunt生成</h3><p>grunt生成 就比较爽歪歪了，具体grunt怎么玩儿，俺写了个教程<a href="http://jslite.io/2015/04/09/Grunt%E6%95%99%E7%A8%8B-%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96/" target="_blank" rel="external">Grunt教程-前端自动化</a> 可以学习以下。  </p>
<p>stylusExample 目录下创建两个文件，这两个文件是grunt必备文件。</p>
<blockquote>
<p>package.json：用于保存项目元数据。<br>Gruntfile.js：用于配置或定义任务、加载 Grunt 插件。  </p>
</blockquote>
<p>package.json 内容</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,</span><br><span class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"测试的例子"</span></span>,</span><br><span class="line">  "<span class="attribute">repository</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"git"</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">""</span></span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>然后安装必备插件，这些插件让stylus文件变更了自动生成，生成到相对应的文件目录中。如果报错你需要在命令行前面加上sudo，给它最大的执行权限。  </p>
<p><code>npm install grunt --save-dev</code><br><code>npm install grunt-contrib-watch --save-dev</code> ：监视文件变动，做出相应动作。<a href="https://www.npmjs.com/package/grunt-contrib-watch" target="_blank" rel="external">npm&gt;&gt;</a><br><code>npm install grunt-contrib-stylus --save-dev</code> ：stylus编写styl输出css <a href="https://www.npmjs.com/package/grunt-contrib-stylus" target="_blank" rel="external">npm&gt;&gt;</a>   </p>
<p>安装出现这样的警告 <code>npm WARN package.json test@1.0.0 No README data</code> 可以不理会，如果你看着不舒服，你需要在stylusExample目录下面建立一个 README.md 文件并输入内容。也可命令执行 <code>echo &quot;#stylus 学习&quot; &gt;&gt; README.md</code>  </p>
<p>插件执行完毕之后 <code>package.json</code> 文件变成了这样样子滴。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,</span><br><span class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"测试的例子"</span></span>,</span><br><span class="line">  "<span class="attribute">repository</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"git"</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">""</span></span><br><span class="line">  </span>&#125;</span>,</span><br><span class="line">  "<span class="attribute">devDependencies</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">grunt</span>": <span class="value"><span class="string">"^0.4.5"</span></span>,</span><br><span class="line">    "<span class="attribute">grunt-contrib-stylus</span>": <span class="value"><span class="string">"^0.21.0"</span></span>,</span><br><span class="line">    "<span class="attribute">grunt-contrib-watch</span>": <span class="value"><span class="string">"^0.6.1"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>这个时候你需要使用这些插件儿完成你的任务需要在<code>Gruntfile.js</code>里面写你的执行任务。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/// 包装函数</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span><span class="params">(grunt)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 任务配置,所有插件的配置信息</span></span><br><span class="line">    grunt.initConfig(&#123;</span><br><span class="line">        pkg: grunt.file.readJSON(<span class="string">'package.json'</span>),</span><br><span class="line">        stylus:&#123;</span><br><span class="line">            build: &#123;</span><br><span class="line">                options: &#123;</span><br><span class="line">                    linenos: <span class="literal">false</span>,</span><br><span class="line">                    compress: <span class="literal">true</span></span><br><span class="line">                &#125;,</span><br><span class="line">                files: [&#123;</span><br><span class="line">                    <span class="string">'css/index.css'</span>: [<span class="string">'src/index.styl'</span>]</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// watch插件的配置信息</span></span><br><span class="line">        watch: &#123;</span><br><span class="line">            another: &#123;</span><br><span class="line">                files: [<span class="string">'css/*'</span>,<span class="string">'src/*.styl'</span>],</span><br><span class="line">                tasks: [<span class="string">'stylus'</span>],</span><br><span class="line">                options: &#123;</span><br><span class="line">                    livereload: <span class="number">1337</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 告诉grunt我们将使用插件</span></span><br><span class="line">    grunt.loadNpmTasks(<span class="string">'grunt-contrib-watch'</span>);</span><br><span class="line">    grunt.loadNpmTasks(<span class="string">'grunt-contrib-stylus'</span>);</span><br><span class="line">    <span class="comment">// 告诉grunt当我们在终端中输入grunt时需要做些什么</span></span><br><span class="line">    grunt.registerTask(<span class="string">'default'</span>, [<span class="string">'watch'</span>]);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>注意读懂上面的哦，目录高对哦，这些没有必要提醒哦，这个时候你可以好好耍一下stylus  </p>
<h2 id="Stylus应用">Stylus应用</h2><p>这个时候真正的开始玩耍了哦。</p>
<h3 id="Try_Stylus!">Try Stylus!</h3><p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span>,<span class="tag">html</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">0</span></span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">0</span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span>,</span><br><span class="line"><span class="tag">html</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<p>stylus : 强大的功能丰富的语言</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">-pos(type, args)</span><br><span class="line">  i = <span class="number">0</span></span><br><span class="line">  position: unquote(type)</span><br><span class="line">  &#123;args[i]&#125;: args[i + <span class="number">1</span>] <span class="keyword">is</span> a <span class="string">'unit'</span> ? args[i += <span class="number">1</span>] : <span class="number">0</span></span><br><span class="line">  &#123;args[i += <span class="number">1</span>]&#125;: args[i + <span class="number">1</span>] <span class="keyword">is</span> a <span class="string">'unit'</span> ? args[i += <span class="number">1</span>] : <span class="number">0</span></span><br><span class="line"></span><br><span class="line">absolute()</span><br><span class="line">  -pos(<span class="string">'absolute'</span>, arguments)</span><br><span class="line"></span><br><span class="line"><span class="keyword">fixed</span>()</span><br><span class="line">  -pos(<span class="string">'fixed'</span>, arguments)</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#prompt</span></span><br><span class="line">  absolute: top <span class="number">150</span>px left <span class="number">5</span>px</span><br><span class="line">  width: <span class="number">200</span>px</span><br><span class="line">  margin-left: -(@width / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#logo</span></span><br><span class="line">  <span class="keyword">fixed</span>: top left</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="id">#prompt</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">150px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> -<span class="number">100px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="id">#logo</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> fixed</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="nibStylus插件">nibStylus插件</h3><p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@import</span> <span class="string">'nib'</span></span><br><span class="line"><span class="tag">body</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="function"><span class="title">linear-gradient</span><span class="params">(<span class="number">20px</span> top, white, black)</span></span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">-webkit-linear-gradient</span>(<span class="number">20px</span> top, <span class="hexcolor">#fff</span>, <span class="hexcolor">#000</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">-moz-linear-gradient</span>(<span class="number">20px</span> top, <span class="hexcolor">#fff</span>, <span class="hexcolor">#000</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">-o-linear-gradient</span>(<span class="number">20px</span> top, <span class="hexcolor">#fff</span>, <span class="hexcolor">#000</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">-ms-linear-gradient</span>(<span class="number">20px</span> top, <span class="hexcolor">#fff</span>, <span class="hexcolor">#000</span>)</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">linear-gradient</span>(<span class="number">20px</span> top, <span class="hexcolor">#fff</span>, <span class="hexcolor">#000</span>)</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Nesting(嵌套)">Nesting(嵌套)</h3><p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="tag">header</span></span><br><span class="line">    <span class="id">#logo</span></span><br><span class="line">        <span class="attribute">border</span>:<span class="number">1px</span> solid red</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">header</span> <span class="id">#logo</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Flexible_syntax(灵活的用法)">Flexible syntax(灵活的用法)</h3><p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span></span><br><span class="line">    <span class="attribute">font</span> <span class="number">14px</span>/<span class="number">1.5</span> Helvetica, arial, sans-serif</span><br><span class="line">    <span class="tag">button</span></span><br><span class="line">    <span class="tag">button</span><span class="class">.button</span></span><br><span class="line">    <span class="tag">input</span>[type=<span class="string">'button'</span>]</span><br><span class="line">    <span class="tag">input</span>[type=<span class="string">'submit'</span>]</span><br><span class="line">        <span class="attribute">border-radius</span> <span class="number">5px</span></span><br><span class="line">        </span><br><span class="line"><span class="tag">header</span> </span><br><span class="line">    <span class="id">#logo</span>,<span class="tag">div</span></span><br><span class="line">        <span class="attribute">font-size</span>:<span class="number">14px</span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">14px</span>/<span class="number">1.5</span> Helvetica, arial, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">body</span> <span class="tag">button</span>,</span><br><span class="line"><span class="tag">body</span> <span class="tag">button</span><span class="class">.button</span>,</span><br><span class="line"><span class="tag">body</span> <span class="tag">input</span><span class="attr_selector">[type='button']</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">header</span> <span class="id">#logo</span>,</span><br><span class="line"><span class="tag">header</span> <span class="tag">div</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Flexible_&amp;(灵活&amp;)">Flexible &amp;(灵活&amp;)</h3><p>stylus </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="tag">ul</span></span><br><span class="line">    <span class="tag">li</span> <span class="tag">a</span></span><br><span class="line">        <span class="attribute">display</span>: block</span><br><span class="line">        <span class="attribute">color</span>: blue</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">5px</span></span><br><span class="line">        <span class="tag">html</span><span class="class">.ie</span> &amp;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">6px</span></span><br><span class="line">        <span class="pseudo">&amp;:hover</span><br><span class="line"></span>            <span class="attribute">color</span>: red</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">html</span><span class="class">.ie</span> <span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">6px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Functions_方法">Functions 方法</h3><h4 id="返回值">返回值</h4><p>stylus </p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">border-radius(<span class="function"><span class="keyword">val</span>)</span><br><span class="line"></span>    -webkit-border-radius: <span class="function"><span class="keyword">val</span></span><br><span class="line"></span>    -moz-border-radius: <span class="function"><span class="keyword">val</span></span><br><span class="line"></span>    border-radius: <span class="function"><span class="keyword">val</span></span><br><span class="line"></span></span><br><span class="line">button </span><br><span class="line">    border-radius(<span class="number">5</span>px);</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">button</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="Transparent_mixins">Transparent mixins</h4><p>不带参数</p>
<p>stylus  </p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">border-radius()</span><br><span class="line">    -webkit-border-<span class="string">radius:</span> arguments</span><br><span class="line">    -moz-border-<span class="string">radius:</span> arguments</span><br><span class="line">    border-<span class="string">radius:</span> arguments</span><br><span class="line"></span><br><span class="line">button </span><br><span class="line">    border-<span class="string">radius:</span> <span class="number">5</span>px <span class="number">10</span>px;</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">button</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">5px</span> <span class="number">10px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">5px</span> <span class="number">10px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">5px</span> <span class="number">10px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="默认参数">默认参数</h4><p>不带参数</p>
<p>stylus  </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">add</span><span class="params">(a, b = a)</span></span></span><br><span class="line">  <span class="tag">a</span> + <span class="tag">b</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">add</span><span class="params">(<span class="number">10</span>, <span class="number">5</span>)</span></span></span><br><span class="line"><span class="comment">// =&gt; 15</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">add</span><span class="params">(<span class="number">10</span>)</span></span></span><br><span class="line"><span class="comment">// =&gt; 20</span></span><br></pre></td></tr></table></figure>
<h4 id="函数体">函数体</h4><p>通过内置unit()把单位都变成px, 因为赋值在每个参数上，因此，我们可以无视单位换算。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">add</span><span class="params">(a, b = a)</span></span></span><br><span class="line">  <span class="tag">a</span> = <span class="function"><span class="title">unit</span><span class="params">(a, px)</span></span></span><br><span class="line">  <span class="tag">b</span> = <span class="function"><span class="title">unit</span><span class="params">(b, px)</span></span></span><br><span class="line">  <span class="tag">a</span> + <span class="tag">b</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">add</span><span class="params">(<span class="number">15%</span>, <span class="number">10deg</span>)</span></span></span><br><span class="line"><span class="comment">// =&gt; 25</span></span><br></pre></td></tr></table></figure>
<h4 id="多个返回值">多个返回值</h4><p>通过内置unit()把单位都变成px, 因为赋值在每个参数上，因此，我们可以无视单位换算。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">sizes</span><span class="params">()</span></span></span><br><span class="line"> <span class="number">15px</span> <span class="number">10px</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">sizes</span><span class="params">()</span></span>[<span class="number">0</span>]</span><br><span class="line"><span class="comment">// =&gt; 15px</span></span><br></pre></td></tr></table></figure>
<h3 id="Variables(变量)">Variables(变量)</h3><h4 id="常用方法">常用方法</h4><p>stylus  </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-size</span> = <span class="number">14px</span></span><br><span class="line"></span><br><span class="line"><span class="tag">body</span></span><br><span class="line">    <span class="attribute">font</span> <span class="attribute">font-size</span> Arial, sans-seri</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">14px</span> Arial, sans-seri</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="变量放在属性中">变量放在属性中</h4><p>stylus  </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="id">#prompt</span></span><br><span class="line">    <span class="attribute">position</span>: absolute</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">150px</span></span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span></span><br><span class="line">    <span class="attribute">width</span>: w = <span class="number">200px</span></span><br><span class="line">    <span class="attribute">margin-left</span>: -(w / <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="id">#prompt</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">150px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> -<span class="number">100px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="块属性访问引用">块属性访问引用</h4><p>stylus  </p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="id">#prompt</span></span><br><span class="line">    <span class="tag">position</span>: <span class="tag">absolute</span></span><br><span class="line">    <span class="tag">width</span>: <span class="tag">200px</span></span><br><span class="line">    <span class="tag">margin-left</span>: <span class="tag">-</span>(<span class="variable">@width</span> / <span class="number">2</span>)</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="id">#prompt</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> -<span class="number">100px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="属性有条件地定义属性">属性有条件地定义属性</h4><p>stylus:指定z-index值为1，但是，只有在z-index之前未指定的时候才这样：  </p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">position</span><span class="params">()</span></span></span><br><span class="line">  <span class="attribute">position</span>: arguments</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span> unless @<span class="attribute">z-index</span></span><br><span class="line"></span><br><span class="line"><span class="id">#logo</span></span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">20</span></span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br><span class="line"></span><br><span class="line"><span class="id">#logo2</span></span><br><span class="line">  <span class="attribute">position</span>: absolute</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="id">#logo</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">20</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="id">#logo2</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">1</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="向上冒泡">向上冒泡</h4><p>stylus:属性会“向上冒泡”查找堆栈直到被发现，或者返回null（如果属性搞不定）下面这个例子，@color被弄成了blue.</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span></span><br><span class="line">  <span class="attribute">color</span>: red</span><br><span class="line">  <span class="tag">ul</span></span><br><span class="line">    <span class="tag">li</span></span><br><span class="line">      <span class="attribute">color</span>: blue</span><br><span class="line">      <span class="tag">a</span></span><br><span class="line">        <span class="attribute">background-color</span>: @<span class="attribute">color</span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">body</span> <span class="tag">ul</span> <span class="tag">li</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">body</span> <span class="tag">ul</span> <span class="tag">li</span> <span class="tag">a</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Iteration(迭代)">Iteration(迭代)</h3><p>stylus</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">table</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line">        tr:nth-child(&#123;row&#125;)</span><br><span class="line">            height: <span class="number">10</span>px * row</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">table</span> <span class="tag">tr</span><span class="pseudo">:nth-child(1)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">10px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">table</span> <span class="tag">tr</span><span class="pseudo">:nth-child(2)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">table</span> <span class="tag">tr</span><span class="pseudo">:nth-child(3)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">table</span> <span class="tag">tr</span><span class="pseudo">:nth-child(4)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="tag">table</span> <span class="tag">tr</span><span class="pseudo">:nth-child(5)</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">50px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Interpolation(插值)">Interpolation(插值)</h3><p>stylus</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">vendors = webkit moz o ms official</span><br><span class="line">border-radius()</span><br><span class="line">    <span class="keyword">for</span> vendor <span class="keyword">in</span> vendors</span><br><span class="line">        <span class="keyword">if</span> vendor == official</span><br><span class="line">            border-<span class="string">radius:</span> arguments</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            -&#123;vendor&#125;-border-<span class="string">radius:</span> arguments</span><br><span class="line">#content</span><br><span class="line">    border-<span class="string">radius:</span> <span class="number">5</span>px</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="id">#content</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-moz-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-o-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-ms-border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="Operators(运算符)">Operators(运算符)</h3><p>运算符优先级<br>下表运算符优先级，从最高到最低：  </p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line"> []</span><br><span class="line"> ! ~ + -</span><br><span class="line"> <span class="keyword">is</span> defined</span><br><span class="line"> ** * / %</span><br><span class="line"> + -</span><br><span class="line"> ... ..</span><br><span class="line"> &lt;= &gt;= &lt; &gt;</span><br><span class="line"> <span class="keyword">in</span></span><br><span class="line"> == <span class="keyword">is</span> != <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">isnt</span></span><br><span class="line"> <span class="keyword">is</span> a</span><br><span class="line"> &amp;&amp; <span class="keyword">and</span> || <span class="keyword">or</span></span><br><span class="line"> ?:</span><br><span class="line"> = := ?= += -= *= /= %=</span><br><span class="line"> <span class="keyword">not</span></span><br><span class="line"> <span class="keyword">if</span> <span class="keyword">unless</span></span><br></pre></td></tr></table></figure>
<h3 id="@import">@import</h3><p><code>@import &quot;reset.css&quot;</code></p>
<p>当使用<code>@import</code>没有<code>.css</code>扩展，会被认为是<code>Stylus</code>片段（如：<code>@import &quot;mixins/border-radius&quot;</code>）。  </p>
<p><code>@import</code>工作原理为：遍历目录队列，并检查任意目录中是否有该文件（类似node的require.paths）。该队列默认为单一路径，从<code>filename</code>选项的<code>dirname</code>衍生而来。 因此，如果你的文件名是<code>/tmp/testing/stylus/main.styl</code>，导入将显现为<code>/tmp/testing/stylus/</code>。  </p>
<p><code>@import</code>也支持索引形式。这意味着当你<code>@import blueprint</code>, 则会理解成<code>blueprint.styl</code>或<code>blueprint/index.styl</code>. 对于库而言，这很有用，既可以展示所有特征与功能，同时又能导入特征子集。</p>
<h3 id="@font-face">@font-face</h3><p>stylus</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@font-face</span></span><br><span class="line">  <span class="attribute">font-family</span> Geo</span><br><span class="line">  <span class="attribute">font-style</span> <span class="attribute">normal</span></span><br><span class="line">  src <span class="function"><span class="title">url</span><span class="params">(fonts/geo_sans_light/GensansLight.ttf)</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">.ingeo</span></span><br><span class="line">  <span class="attribute">font-family</span> Geo</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">font-face</span></span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Geo</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">font-style</span>:<span class="value"> normal</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">src</span>:<span class="value"> <span class="function">url</span>(<span class="string">"fonts/geo_sans_light/GensansLight.ttf"</span>)</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="class">.ingeo</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Geo</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="@media">@media</h3><p>stylus</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@media</span> print</span><br><span class="line">  <span class="id">#header</span></span><br><span class="line">  <span class="id">#footer</span></span><br><span class="line">    <span class="attribute">display</span> <span class="attribute">none</span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">media</span> print </span>&#123;</span><br><span class="line">  <span class="id">#header</span>,</span><br><span class="line">  <span class="id">#footer</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="@keyframes">@keyframes</h3><p>stylus</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">@keyframes pulse</span><br><span class="line">    <span class="number">0%</span></span><br><span class="line">      <span class="attribute">background-color</span> red</span><br><span class="line">      <span class="attribute">transform</span> <span class="function"><span class="title">scale</span><span class="params">(<span class="number">1.0</span>)</span></span> <span class="function"><span class="title">rotate</span><span class="params">(<span class="number">0deg</span>)</span></span></span><br><span class="line">    <span class="number">33%</span></span><br><span class="line">      <span class="attribute">background-color</span> blue</span><br><span class="line">      -webkit-<span class="attribute">transform</span> <span class="function"><span class="title">scale</span><span class="params">(<span class="number">1.1</span>)</span></span> <span class="function"><span class="title">rotate</span><span class="params">(-<span class="number">5deg</span>)</span></span></span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">-moz-keyframes</span> pulse </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1</span>) <span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">  33% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1.1</span>) <span class="function">rotate</span>(-<span class="number">5deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">-webkit-keyframes</span> pulse </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1</span>) <span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">  33% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1.1</span>) <span class="function">rotate</span>(-<span class="number">5deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">-o-keyframes</span> pulse </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1</span>) <span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">  33% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1.1</span>) <span class="function">rotate</span>(-<span class="number">5deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@<span class="keyword">keyframes</span> pulse </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#f00</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1</span>) <span class="function">rotate</span>(<span class="number">0deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">  33% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00f</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">scale</span>(<span class="number">1.1</span>) <span class="function">rotate</span>(-<span class="number">5deg</span>)</span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="CSS字面量(CSS_Literal)">CSS字面量(CSS Literal)</h3><p>stylus</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">css</span> </span>&#123;</span><br><span class="line">  <span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">14px</span></span></span>;</span><br><span class="line">  <span class="rule">&#125;</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译成</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">14px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="stylus介绍">stylus介绍</h2><p>是个什么鬼？对于开发来说，CSS的弱点在于静态化。我们需要一个真正能提高开发效率的工具，<code>LESS</code>， <code>SASS</code>都在这方面做了一些贡献。  </p>
<p><cod]]>
    </summary>
    
      <category term="css" scheme="http://jslite.io/tags/css/"/>
    
      <category term="stylus" scheme="http://jslite.io/tags/stylus/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[js获取来源的URL代码]]></title>
    <link href="http://jslite.io/2015/04/22/js%E8%8E%B7%E5%8F%96%E6%9D%A5%E6%BA%90%E7%9A%84URL%E4%BB%A3%E7%A0%81/"/>
    <id>http://jslite.io/2015/04/22/js获取来源的URL代码/</id>
    <published>2015-04-22T06:56:04.000Z</published>
    <updated>2015-05-07T16:29:23.000Z</updated>
    <content type="html"><![CDATA[<h2 id="referrer">referrer</h2><p>正常取来源网页的URL只要用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.referrer</span><br></pre></td></tr></table></figure>
<h2 id="opener">opener</h2><p>如果来源页是Javascript跳转过来的，上边的方法就拿不到了！所以用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">opener.location.href</span><br></pre></td></tr></table></figure>
<h2 id="合并">合并</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ref = <span class="string">''</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">document</span>.referrer.length &gt; <span class="number">0</span>) &#123; </span><br><span class="line">    ref = <span class="built_in">document</span>.referrer; </span><br><span class="line">&#125;<span class="keyword">try</span> &#123; </span><br><span class="line">    <span class="keyword">if</span> (ref.length == <span class="number">0</span> &amp;&amp; opener.location.href.length &gt; <span class="number">0</span>) &#123; </span><br><span class="line">        ref = opener.location.href; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="其它">其它</h2><h3 id="获取域名后面的">获取域名后面的</h3><p><code>window.location.pathname</code>  </p>
<h3 id="获取URL">获取URL</h3><p><code>window.location.href</code>  </p>
<h3 id="获取域名">获取域名</h3><p><code>/[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(\.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+(:[0-9]{1,4})?/</code>  域名加端口号</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">var urlReg = /[<span class="link_label">a-zA-Z0-9</span>][<span class="link_reference">-a-zA-Z0-9</span>]&#123;0,62&#125;(\.[<span class="link_label">a-zA-Z0-9</span>][<span class="link_reference">-a-zA-Z0-9</span>]&#123;0,62&#125;)+\.?/;  </span><br><span class="line">var url=urlReg.exec("http://www.baidu.com/aaaa");  </span><br><span class="line">console.log(url[0]);</span><br></pre></td></tr></table></figure>
<h3 id="获取URL参数">获取URL参数</h3><p><code>location.search</code>               //=&gt;  “?hello=1&amp;wcj=2”<br><code>location.search.substr(1)</code>     //=&gt;  “hello=1&amp;wcj=2”<br><code>location.search.substr(1).split(&#39;&amp;&#39;)</code>   //=&gt;  [“hello=1”, “wcj=2”]</p>
<h3 id="获取URL返回JSON">获取URL返回JSON</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> url=location.search.substr(<span class="number">1</span>).split(<span class="string">'&amp;'</span>),</span><br><span class="line">    i=url.length,</span><br><span class="line">    _url,</span><br><span class="line">    GET=&#123;&#125;;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span>(i--)&#123;</span><br><span class="line">    _url = url[i].split(<span class="string">'='</span>);</span><br><span class="line">    GET[_url.shift()]=<span class="built_in">decodeURIComponent</span>(_url);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(GET)  <span class="comment">//=&gt; Object &#123;wcj: "2", hello: "1"&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="获取URL参数-1">获取URL参数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line"> * 获取特定字段的查询字符串</span><br><span class="line"> * @param &#123;String&#125; name: 查询字符串的字段名</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQuerySrting</span><span class="params">(name)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> search = location.search.substring(<span class="number">1</span>).split(<span class="string">'&amp;'</span>);</span><br><span class="line">    <span class="keyword">var</span> value = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; search.length;i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> keyValue = search[i].split(<span class="string">'='</span>);</span><br><span class="line">        <span class="keyword">if</span> (keyValue[<span class="number">0</span>] == name) &#123;</span><br><span class="line">            value = keyValue[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="referrer">referrer</h2><p>正常取来源网页的URL只要用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端博客相关网站搜集]]></title>
    <link href="http://jslite.io/2015/04/17/%E5%89%8D%E7%AB%AF%E5%8D%9A%E5%AE%A2%E7%9B%B8%E5%85%B3%E7%BD%91%E7%AB%99%E6%90%9C%E9%9B%86/"/>
    <id>http://jslite.io/2015/04/17/前端博客相关网站搜集/</id>
    <published>2015-04-17T13:13:57.000Z</published>
    <updated>2015-04-23T09:57:47.000Z</updated>
    <content type="html"><![CDATA[<h1 id="中文前端开发博客网站列表">中文前端开发博客网站列表</h1><p>本博客网站列表会不断更新维护，如果有推荐的博客</p>
<h2 id="组织团伙">组织团伙</h2><p><a href="http://www.w3.org/" target="_blank" rel="external">W3C</a><br><a href="http://www.chinaw3c.org/member-meetings.html#tpac" target="_blank" rel="external">TPAC</a><br><a href="http://w3ctech.com/" target="_blank" rel="external">w3ctech</a><br><a href="http://www.webrebuild.org/" target="_blank" rel="external">WebReBuild</a><br><a href="http://www.mhtml5.com/" target="_blank" rel="external">HTML5研究小组</a><br><a href="http://adc.alibabatech.org/" target="_blank" rel="external">阿里技术嘉年华</a><br><a href="http://jsconf.cn/" target="_blank" rel="external">京/沪JS</a><br><a href="http://fequan.com/" target="_blank" rel="external">前端圈</a><br><a href="http://www.html5dw.com/" target="_blank" rel="external">HTML5梦工场</a><br><a href="http://accessibilityunion.org/" target="_blank" rel="external">无障碍联盟</a>  </p>
<h2 id="综合">综合</h2><p><a href="http://www.qianduan.net/" target="_blank" rel="external">前端观察</a><br><a href="http://www.ruanyifeng.com/blog/" target="_blank" rel="external">阮一峰</a><br><a href="http://www.w3cplus.com/" target="_blank" rel="external">W3CPLUS</a><br><a href="http://www.w3cfuns.com/" target="_blank" rel="external">W3CFUNS</a><br><a href="http://www.daqianduan.com/" target="_blank" rel="external">大前端</a><br><a href="http://www.w3help.org/zh-cn/" target="_blank" rel="external">W3HELP</a><br><a href="http://www.w3school.com.cn/" target="_blank" rel="external">W3SCHOOL</a><br><a href="http://www.html5cn.org/" target="_blank" rel="external">HTML5中国</a><br><a href="http://www.html-js.com/" target="_blank" rel="external">前端乱炖</a><br><a href="http://f2e.im/" target="_blank" rel="external">F2E社区</a><br><a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="external">MDN</a>  </p>
<h2 id="个人博客">个人博客</h2><table>
<thead>
<tr>
<th>博客地址</th>
<th>RSS地址</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://blog.cssforest.org/" target="_blank" rel="external">CSS森林</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.twinsenliang.net/" target="_blank" rel="external">twinsen</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://blog.ivane.me/" target="_blank" rel="external">艾文王</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://yuguo.us/weblog/" target="_blank" rel="external">余果</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.zhangxinxu.com/wordpress/" target="_blank" rel="external">张鑫旭</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://bigc.at/" target="_blank" rel="external">大猫</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://pufen.net/" target="_blank" rel="external">飘飘</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://s5s5.me/" target="_blank" rel="external">米随随</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.99css.com/" target="_blank" rel="external">99css</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.topcss.org/" target="_blank" rel="external">进步博客</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://wange.im/" target="_blank" rel="external">万戈</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://rpsh.net/" target="_blank" rel="external">任平生</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.ofcss.com/" target="_blank" rel="external">小李刀刀</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.yuanyun.me/" target="_blank" rel="external">元云</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://csshouse.net/" target="_blank" rel="external">珍妮</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://tommyfan.com/blog/" target="_blank" rel="external">偷米饭</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.smallni.com/" target="_blank" rel="external">丁小倪</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="https://github.com/lifesinger/lifesinger.github.com/issues?labels=blog" target="_blank" rel="external">玉伯</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://jayli.github.io/blog/" target="_blank" rel="external">拔赤</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.osmn00.com/" target="_blank" rel="external">堂主</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.planabc.net/" target="_blank" rel="external">怿飞</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.aoao.org.cn/blog/" target="_blank" rel="external">嗷嗷</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.iyunlu.com/view/" target="_blank" rel="external">一丝</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://jiongks.name/" target="_blank" rel="external">勾三股四</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://hax.iteye.com/" target="_blank" rel="external">贺师俊</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://hikejun.com/blog/" target="_blank" rel="external">张克军</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://gaowhen.com/" target="_blank" rel="external">糖拌西红柿</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.css88.com/" target="_blank" rel="external">愚人码头</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://linxz.de" target="_blank" rel="external">林小志</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://i.wanz.im/" target="_blank" rel="external">丸子</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://uicss.cn/" target="_blank" rel="external">崔凯</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://julying.com/" target="_blank" rel="external">王子墨</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://js8.in/" target="_blank" rel="external">三水清</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.weilaixu.cn/" target="_blank" rel="external">许未来</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://uicss.cn/" target="_blank" rel="external">崔凯</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://blog.bingo929.com/" target="_blank" rel="external">彬go</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.wufangbo.com/" target="_blank" rel="external">武方博</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://panweizeng.com/" target="_blank" rel="external">潘魏增</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://swordair.com/" target="_blank" rel="external">葵中剑</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.css3china.com/" target="_blank" rel="external">css3China</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://www.brucewar.com/" target="_blank" rel="external">brucewar</a></td>
<td>——</td>
</tr>
<tr>
<td><a href="http://muyao.me" target="_blank" rel="external">牧遥</a></td>
<td><a href="http://muyao.me/feed/atom/" target="_blank" rel="external">http://muyao.me/feed/atom/</a></td>
</tr>
</tbody>
</table>
<h2 id="CDN免费服务">CDN免费服务</h2><p><a href="http://lib.sinaapp.com/" target="_blank" rel="external">新浪CDN</a><br><a href="http://libs.useso.com/" target="_blank" rel="external">360CDN</a><br><a href="http://cdn.code.baidu.com/" target="_blank" rel="external">百度CDN</a><br><a href="http://www.staticfile.org/" target="_blank" rel="external">七牛云存储</a><br><a href="http://jscdn.upai.com/" target="_blank" rel="external">又拍云JS库加速服务</a><br><a href="https://cdnjs.com/" target="_blank" rel="external">cdnjs.com</a><br><a href="http://www.cdnjs.cn/" target="_blank" rel="external">cdnjs.cn</a>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="中文前端开发博客网站列表">中文前端开发博客网站列表</h1><p>本博客网站列表会不断更新维护，如果有推荐的博客</p>
<h2 id="组织团伙">组织团伙</h2><p><a href="http://www.w3.org/" target="_blank"]]>
    </summary>
    
      <category term="网站导航" scheme="http://jslite.io/tags/%E7%BD%91%E7%AB%99%E5%AF%BC%E8%88%AA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[本地存储cookie的封装]]></title>
    <link href="http://jslite.io/2015/04/17/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8cookie%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://jslite.io/2015/04/17/本地存储cookie的封装/</id>
    <published>2015-04-16T16:54:41.000Z</published>
    <updated>2015-05-03T13:27:35.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/jaywcjlove/cookie.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/cookie.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/cookie.js/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/cookie.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/cookie.js/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/cookie.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/cookie.js/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/cookie.js.svg" alt=""></a></p>
<p>本地存储cookie的封装，提供简单的AIP，没有对IE做兼容处理，因为俺主要用于chrome，Safari，Firefox、<strong>移动端</strong>等先进浏览器里面跑。如果您有需求，可以自行解决，共享出来。目前俺用不上，所以不想兼容IE。。。</p>
<p><strong><a href="https://github.com/jaywcjlove/cookie.js" target="_blank" rel="external">Github下载地址</a></strong></p>
<h2 id="下载">下载</h2><h3 id="bower">bower</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ bower <span class="keyword">install</span> cookiejs</span><br></pre></td></tr></table></figure>
<h3 id="npm">npm</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> cookiejs</span><br></pre></td></tr></table></figure>
<h2 id="cookie_APIs">cookie APIs</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie(<span class="string">"test"</span>,<span class="string">"tank"</span>,<span class="number">1800</span>)  <span class="comment">//设置 cookie 的值，生存时间半个小时</span></span><br><span class="line">cookie(<span class="string">"test"</span>)              <span class="comment">//获取 cookie 的值，显示tank</span></span><br><span class="line">cookie(<span class="string">"test"</span>,<span class="literal">null</span>)         <span class="comment">//删除cookie test</span></span><br><span class="line">cookie()                    <span class="comment">//清空cookie</span></span><br><span class="line"></span><br><span class="line">cookie.set(<span class="string">"test"</span>,<span class="string">"tank"</span>,<span class="number">1800</span>)  <span class="comment">//====cookie("test","tank",1800)</span></span><br><span class="line">cookie.get(<span class="string">"test"</span>)              <span class="comment">//====cookie("test")</span></span><br><span class="line">cookie.remove(<span class="string">"test"</span>)           <span class="comment">//====cookie("test",null)</span></span><br><span class="line">cookie.clear()                  <span class="comment">//====cookie()</span></span><br><span class="line"></span><br><span class="line">cookie.all()                    <span class="comment">//获取所有 cookie</span></span><br></pre></td></tr></table></figure>
<h3 id="批量设置cookie的值">批量设置cookie的值</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie.set(&#123;</span><br><span class="line">   name1: <span class="string">'value1'</span>,</span><br><span class="line">   name2: <span class="string">'value2'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="expires过期时间、_path路径、_domain域、以及_secure安全。">expires过期时间、 path路径、 domain域、以及 secure安全。</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie(<span class="string">"test"</span>,<span class="string">"123"</span>,&#123;</span><br><span class="line">    <span class="string">"expires"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">'/'</span>,</span><br><span class="line">    <span class="string">"domain"</span>:<span class="string">""</span></span><br><span class="line">&#125;);</span><br><span class="line">cookie(&#123;<span class="string">"test"</span>:<span class="string">"123"</span>&#125;,&#123;</span><br><span class="line">    <span class="string">"expires"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">'/'</span>,</span><br><span class="line">    <span class="string">"domain"</span>:<span class="string">""</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th style="text-align:left">key</th>
<th style="text-align:left">value</th>
<th style="text-align:left">default value</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left"><code>expires</code></td>
<td style="text-align:left">过期时间(天)。指定cookie的生命期。具体是值是过期日期。如果想让cookie的存在期限超过当前浏览器会话时间，就必须使用这个属性。当过了到期日期时，浏览器就可以删除cookie文件，没有任何影响。</td>
<td style="text-align:left">浏览器关闭过期</td>
</tr>
<tr>
<td style="text-align:left"><code>domain</code></td>
<td style="text-align:left">域。指定关联的WEB服务器或域。值是域名，比如pc175.com。这是对path路径属性的一个延伸。如果我们想让 catalog.pc175.com 能够访问shoppingcart.pc175.com设置的cookies，该怎么办? 我们可以把domain属性设置成“pc175.com”，并把path属性设置成“/”。tag：不能把cookies域属性设置成与设置它的服务器的所在域不同的值。</td>
<td style="text-align:left">默认本域</td>
</tr>
<tr>
<td style="text-align:left"><code>path</code></td>
<td style="text-align:left">路径。指定与cookie关联的WEB页。值可以是一个目录，或者是一个路径。如果<a href="http://www.pc175.com/devhead/index.html" target="_blank" rel="external">http://www.pc175.com/devhead/index.html</a> 建立了一个cookie，那么在<a href="http://www.pc175.com/devhead/目录里的所有页面，以及该目录下面任何子目录里的页面都可以访问这个cookie。这就是说，在http://www.pc175.com/devhead/stories/articles" target="_blank" rel="external">http://www.pc175.com/devhead/目录里的所有页面，以及该目录下面任何子目录里的页面都可以访问这个cookie。这就是说，在http://www.pc175.com/devhead/stories/articles</a> 里的任何页面都可以访问<a href="http://www.pc175.com/devhead/index.html建立的cookie。但是，如果http://www.pc175.com/zdnn/" target="_blank" rel="external">http://www.pc175.com/devhead/index.html建立的cookie。但是，如果http://www.pc175.com/zdnn/</a> 需要访问<a href="http://www.pc175.com/devhead/index.html设置的cookes，该怎么办？这时，我们要把cookies" target="_blank" rel="external">http://www.pc175.com/devhead/index.html设置的cookes，该怎么办？这时，我们要把cookies</a> 的path属性设置成“/”。在指定路径的时候，凡是来自同一服务器，URL里有相同路径的所有WEB页面都可以共享cookies。现在看另一个例子：如果想让 <a href="http://www.pc175.com/devhead/filters/" target="_blank" rel="external">http://www.pc175.com/devhead/filters/</a> 和<a href="http://www.pc175.com/devhead/stories/共享cookies，就要把path设成“/devhead”。" target="_blank" rel="external">http://www.pc175.com/devhead/stories/共享cookies，就要把path设成“/devhead”。</a></td>
<td style="text-align:left">默认 <code>/</code></td>
</tr>
<tr>
<td style="text-align:left"><code>secure</code></td>
<td style="text-align:left">安全。指定cookie的值通过网络如何在用户和WEB服务器之间传递。这个属性的值或者是“secure”，或者为空。缺省情况下，该属性为空，也就是使用不安全的HTTP连接传递数据。如果一个 cookie 标记为secure，那么，它与WEB服务器之间就通过HTTPS或者其它安全协议传递数据。不过，设置了secure属性不代表其他人不能看到你机器本地保存的cookie。换句话说，把cookie设置为secure，只保证cookie与WEB服务器之间的数据传输过程加密，而保存在本地的cookie文件并不加密。如果想让本地cookie也加密，得自己加密数据。</td>
<td style="text-align:left"><code>false</code></td>
</tr>
</tbody>
</table>
<h3 id="set">set</h3><p>设置 cookie 的值，设置时间</p>
<p><code>cookie.set(name,value,options)</code><br>效果相同<code>cookie(name,value,options)</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie(<span class="string">"test"</span>,<span class="string">"tank"</span>,<span class="number">30</span>)    <span class="comment">//设置cookie，并设置过期时间30天</span></span><br><span class="line"></span><br><span class="line">cookie(<span class="string">"test"</span>,<span class="string">"123"</span>,&#123;       <span class="comment">//设置cookie，并设置过期时间7天，路径、域</span></span><br><span class="line">    <span class="string">"expires"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">'/'</span>,</span><br><span class="line">    <span class="string">"domain"</span>:<span class="string">""</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">cookie(&#123;<span class="string">"test"</span>:<span class="string">"123"</span>,<span class="string">"test2"</span>:<span class="string">"456"</span>&#125;,&#123;  <span class="comment">//批量设置</span></span><br><span class="line">    <span class="string">"expires"</span>: <span class="number">7</span>,</span><br><span class="line">    <span class="string">"path"</span>: <span class="string">'/'</span>,</span><br><span class="line">    <span class="string">"domain"</span>:<span class="string">""</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h3 id="get">get</h3><p>获取 cookie 的值</p>
<p><code>cookie.get(name)</code><br>效果相同<code>cookie(name)</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.get(<span class="string">"wcj1"</span>) <span class="comment">//获取wcj1的字符串数据</span></span><br><span class="line">store(<span class="string">"wcj1"</span>) <span class="comment">//功能同上</span></span><br></pre></td></tr></table></figure>
<h3 id="clear">clear</h3><p>清空cookie</p>
<p><code>cookie.clear()</code><br>效果相同<code>cookie()</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie()</span><br><span class="line">cookie.clear(</span><br></pre></td></tr></table></figure>
<h3 id="remove">remove</h3><p>删除cookie</p>
<p><code>cookie.remove(name)</code><br>效果相同<code>cookie(name,null)</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cookie.remove(<span class="string">"test"</span>) <span class="comment">//删除cookie test</span></span><br><span class="line">cookie(<span class="string">"test"</span>,<span class="literal">null</span>) <span class="comment">//这样也是 删除cookie test</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/jaywcjlove/cookie.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/ja]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[本地存储localStorage的封装]]></title>
    <link href="http://jslite.io/2015/04/16/%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8localStorage%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://jslite.io/2015/04/16/本地存储localStorage的封装/</id>
    <published>2015-04-16T04:24:58.000Z</published>
    <updated>2015-05-03T13:28:19.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/jaywcjlove/store.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/store.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/store.js/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/store.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/store.js/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/store.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/store.js/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/store.js.svg" alt=""></a>  </p>
<p><a href="https://github.com/jaywcjlove/store.js" target="_blank" rel="external">store.js</a> 是一个实现了浏览器的本地存储的 JavaScript 封装 API，不是通过 Cookie 和 Flash 技术实现，而是使用 localStorage。小弟我主要是用于chrome，Safari，手机Web等先进浏览器里面跑。so….大家可以做兼容哦….</p>
<p>比较诡异的是居然所有支持的浏览器目前都采用的5MB，尽管有一些浏览器可以让用户设置，但对于网页制作者来说，目前的形势就5MB来考虑是比较妥当的。</p>
<p><a href="https://github.com/jaywcjlove/store.js" target="_blank" rel="external">Github地址</a></p>
<h2 id="下载">下载</h2><h3 id="bower">bower</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ bower <span class="keyword">install</span> storejs</span><br></pre></td></tr></table></figure>
<h3 id="npm">npm</h3><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> storejs</span><br></pre></td></tr></table></figure>
<h2 id="本地存储APIs">本地存储APIs</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store(key, data);                 <span class="comment">//单个存储字符串数据</span></span><br><span class="line">store(&#123;key: data, key2: data2&#125;);  <span class="comment">//批量存储多个字符串数据</span></span><br><span class="line">store(key);                       <span class="comment">//获取key的字符串数据</span></span><br><span class="line">store();                          <span class="comment">//获取所有key/data</span></span><br><span class="line">store(<span class="literal">false</span>);                     <span class="comment">//清空所有key/data</span></span><br><span class="line">store(key,<span class="literal">false</span>);                 <span class="comment">//删除key包括key的字符串数据</span></span><br><span class="line"></span><br><span class="line">store.set(key, data[, overwrite]);<span class="comment">//=== store(key, data);</span></span><br><span class="line">store.setAll(data[, overwrite]);  <span class="comment">//=== store(&#123;key: data, key2: data&#125;);</span></span><br><span class="line">store.get(key[, alt]);            <span class="comment">//=== store(key);</span></span><br><span class="line">store.getAll();                   <span class="comment">//=== store();</span></span><br><span class="line">store.clear();                    <span class="comment">//=== store(false);</span></span><br><span class="line">store.remove(key);                <span class="comment">//===store(key,false)</span></span><br><span class="line">store.keys();                     <span class="comment">//返回所有key的数组</span></span><br><span class="line">store.forEach(callback);          <span class="comment">//循环遍历，返回false结束遍历</span></span><br><span class="line"></span><br><span class="line">store.has(key);         <span class="comment">//⇒判断是否存在返回true/false</span></span><br></pre></td></tr></table></figure>
<h3 id="set">set</h3><p>单个存储或删除字符串数据<br><br><code>store.set(key, data[, overwrite]);</code><br><br>效果相同<code>store(key, data);</code><br></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.set(<span class="string">"wcj"</span>,<span class="string">"1"</span>)   <span class="comment">//⇒  1</span></span><br><span class="line">store.set(<span class="string">"wcj"</span>)       <span class="comment">//⇒  删除wcj及字符串数据</span></span><br></pre></td></tr></table></figure>
<h3 id="setAll">setAll</h3><p>批量存储多个字符串数据<br><br><code>store.setAll(data[, overwrite])</code><br><br>效果相同<code>store({key: data, key2: data});</code><br></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.setAll(&#123;</span><br><span class="line">    <span class="string">"wcj1"</span>:<span class="number">123</span>,</span><br><span class="line">    <span class="string">"wcj2"</span>:<span class="number">345</span></span><br><span class="line">&#125;) <span class="comment">//存储两条字符串数据</span></span><br><span class="line"></span><br><span class="line">store.setAll([<span class="string">"w1"</span>,<span class="string">"w2"</span>,<span class="string">"w3"</span>]) </span><br><span class="line"><span class="comment">//存储三条字符串数据 </span></span><br><span class="line"><span class="comment">//  0⇒ "w1"</span></span><br><span class="line"><span class="comment">//  1⇒ "w2"</span></span><br><span class="line"><span class="comment">//  2⇒ "w3"</span></span><br></pre></td></tr></table></figure>
<h3 id="get">get</h3><p>获取key的字符串数据<br><code>store.get(key[, alt])</code><br>效果相同<code>store(key)</code>   </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.get(<span class="string">"wcj1"</span>) <span class="comment">//获取wcj1的字符串数据</span></span><br><span class="line">store(<span class="string">"wcj1"</span>) <span class="comment">//功能同上</span></span><br></pre></td></tr></table></figure>
<h3 id="getAll">getAll</h3><p>获取所有key/data<br><code>store.getAll()</code><br>效果相同<code>store()</code>  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.getAll() <span class="comment">//⇒JSON</span></span><br><span class="line">store() <span class="comment">//功能同上</span></span><br></pre></td></tr></table></figure>
<h3 id="clear">clear</h3><p>清空所有key/data<br><code>store.clear()</code><br>效果相同<code>store(false)</code>   </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.clear() <span class="comment">//</span></span><br><span class="line">store(<span class="literal">false</span>)  <span class="comment">//功能同上</span></span><br></pre></td></tr></table></figure>
<h3 id="keys">keys</h3><p>返回所有key的数组<br><code>store.keys()</code>  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.keys() <span class="comment">//⇒["w1", "w2", "w3"]</span></span><br></pre></td></tr></table></figure>
<h3 id="has">has</h3><p>判断是否存在返回true/false<br><code>store.has(key)</code>  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.has(<span class="string">"w1"</span>); <span class="comment">//⇒true</span></span><br></pre></td></tr></table></figure>
<h3 id="remove">remove</h3><p>删除key包括key的字符串数据<br><code>store.remove(key)</code>  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.remove(<span class="string">"w1"</span>); <span class="comment">//删除w1 返回 w1的value</span></span><br><span class="line"></span><br><span class="line">store(<span class="string">"w1"</span>,<span class="literal">false</span>) <span class="comment">//这样也是 删除w1</span></span><br></pre></td></tr></table></figure>
<h3 id="forEach">forEach</h3><p>循环遍历，返回false结束遍历</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">store.forEach(<span class="function"><span class="keyword">function</span><span class="params">(k,d)</span></span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(k,d)</span><br><span class="line">    <span class="keyword">if</span> (k== <span class="number">3</span>) <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="定时清除">定时清除</h3><p>(做个笔记，未来将定时清除封装起来，有思路)<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (+<span class="keyword">new</span> <span class="built_in">Date</span>() &gt; +<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2014</span>, <span class="number">11</span>, <span class="number">30</span>)) &#123;</span><br><span class="line">    localStorage.removeItem(<span class="string">"c"</span>);    <span class="comment">//清除c的值</span></span><br><span class="line">    <span class="comment">// or localStorage.clear();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="storage事件">storage事件</h2><p>HTML5的本地存储，还提供了一个storage事件，可以对键值对的改变进行监听，使用方法如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.addEventListener)&#123;</span><br><span class="line">     <span class="built_in">window</span>.addEventListener(<span class="string">"storage"</span>,handle_storage,<span class="literal">false</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.attachEvent)&#123;</span><br><span class="line">    <span class="built_in">window</span>.attachEvent(<span class="string">"onstorage"</span>,handle_storage);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handle_storage</span><span class="params">(e)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!e)&#123;e=<span class="built_in">window</span>.event;&#125;</span><br><span class="line">    <span class="comment">//showStorage();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>对于事件变量e，是一个StorageEvent对象，提供了一些实用的属性，可以很好的观察键值对的变化，如下表：</p>
<table>
<thead>
<tr>
<th>Property</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>key</td>
<td>String</td>
<td>The named key that was added, removed, or moddified</td>
</tr>
<tr>
<td>oldValue</td>
<td>Any</td>
<td>The previous value(now overwritten), or null if a new item was added</td>
</tr>
<tr>
<td>newValue</td>
<td>Any</td>
<td>The new value, or null if an item was added</td>
</tr>
<tr>
<td>url/uri</td>
<td>String</td>
<td>The page that called the method that triggered this change</td>
</tr>
</tbody>
</table>
<h2 id="兼容">兼容</h2><table>
<thead>
<tr>
<th>特性</th>
<th>Chrome</th>
<th>Firefox (Gecko)</th>
<th>Internet Explorer</th>
<th>Opera</th>
<th>Safari (WebKit)</th>
</tr>
</thead>
<tbody>
<tr>
<td>localStorage</td>
<td>4</td>
<td>3.5</td>
<td>8</td>
<td>10.50</td>
<td>4</td>
</tr>
<tr>
<td>sessionStorage</td>
<td>5</td>
<td>2</td>
<td>8</td>
<td>10.50</td>
<td>4</td>
</tr>
</tbody>
</table>
<h2 id="本地存储大小">本地存储大小</h2><p><code>JSON.stringify(localStorage).length</code> 当前占用多大容量  </p>
<p><a href="https://arty.name/localstorage.html" target="_blank" rel="external">检测localstore容量上限</a>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/jaywcjlove/store.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jay]]>
    </summary>
    
      <category term="js" scheme="http://jslite.io/tags/js/"/>
    
      <category term="localStorage" scheme="http://jslite.io/tags/localStorage/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在Mac下安装GraphicsMagick]]></title>
    <link href="http://jslite.io/2015/04/16/%E5%9C%A8Mac%E4%B8%8B%E5%AE%89%E8%A3%85GraphicsMagick/"/>
    <id>http://jslite.io/2015/04/16/在Mac下安装GraphicsMagick/</id>
    <published>2015-04-16T02:47:53.000Z</published>
    <updated>2015-04-16T04:16:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="下载依赖">下载依赖</h2><p>GraphicsMagic根据使用功能的不同，依赖不同的组件，我需要的只是对jpeg和png进行简单的图片处理（缩放、裁剪啊什么的，不过它的功能可以更加强大），主要依赖了两个组件:</p>
<h3 id="libjpeg">libjpeg</h3><p><a href="ftp://ftp.graphicsmagick.org/pub/GraphicsMagick/delegates/libjpeg-6b.tar.gz" target="_blank" rel="external">libjpeg-6b.tar.gz</a>  </p>
<h3 id="libpng">libpng</h3><p><a href="http://sourceforge.net/projects/libpng/files/libpng14/1.4.7/libpng-1.4.7.tar.gz/download" target="_blank" rel="external">libpng-1.4.7.tar.gz</a>  </p>
<h3 id="GraphicsMagic">GraphicsMagic</h3><p><a href="http://sourceforge.net/projects/graphicsmagick/files/graphicsmagick/" target="_blank" rel="external">GraphicsMagic</a><br><a href="http://www.graphicsmagick.org/" target="_blank" rel="external">GraphicsMagic 官网</a></p>
<h2 id="安装">安装</h2><h3 id="解压">解压</h3><p>进入下载目录解压。例如我下载的是<code>libpng-1.6.17.tar.xz</code> 就是下面的方法解压</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">tar jxvf libpng-1.6.17.tar.xz</span><br></pre></td></tr></table></figure>
<h3 id="运行">运行</h3><p>进入解压的目录，运行三条命令，然后就安装好了。</p>
<ol>
<li><code>./configure</code></li>
<li><code>make</code></li>
<li><code>sudo make install</code></li>
</ol>
<h2 id="然后">然后</h2><p>然后按照上面步骤安装 <code>GraphicsMagic</code>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="下载依赖">下载依赖</h2><p>GraphicsMagic根据使用功能的不同，依赖不同的组件，我需要的只是对jpeg和png进行简单的图片处理（缩放、裁剪啊什么的，不过它的功能可以更加强大），主要依赖了两个组件:</p>
<h3 id="libjpeg">li]]>
    </summary>
    
      <category term="Mac" scheme="http://jslite.io/tags/Mac/"/>
    
      <category term="软件安装" scheme="http://jslite.io/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[date.js 对时间的操作]]></title>
    <link href="http://jslite.io/2015/04/09/date-js-%E5%AF%B9%E6%97%B6%E9%97%B4%E7%9A%84%E6%93%8D%E4%BD%9C/"/>
    <id>http://jslite.io/2015/04/09/date-js-对时间的操作/</id>
    <published>2015-04-09T06:40:37.000Z</published>
    <updated>2015-04-16T06:04:21.000Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/jaywcjlove/date.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/date.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/date.js/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/date.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/date.js/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/date.js.svg" alt=""></a> <a href="https://github.com/jaywcjlove/store.js/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/date.js.svg" alt=""></a></p>
<p><a href="https://github.com/jaywcjlove/date.js" target="_blank" rel="external">Github date.js</a></p>
<h2 id="format">format</h2><blockquote>
<p>格式化时间</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2015-10-12 23:01:11'</span>).format(<span class="string">"yyyy年MM月dd日 hh:mm:ss"</span>);</span><br><span class="line"><span class="comment">//⇒ "2015年10月12日 23:01:11"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> testDate = <span class="keyword">new</span> <span class="built_in">Date</span>(); </span><br><span class="line"><span class="keyword">var</span> testStr = testDate.format(<span class="string">"yyyy年MM月dd日hh小时mm分ss秒"</span>); </span><br><span class="line"><span class="comment">//=&gt; testStr =  2015年01月20日 19小时21分03秒</span></span><br></pre></td></tr></table></figure>
<h3 id="ago">ago</h3><blockquote>
<p>多少小时前、多少分钟前、多少秒前</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">1421313395359</span>).ago(<span class="number">1411430400000</span>)</span><br><span class="line"><span class="comment">//=&gt; "3个月前"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">1421313395359</span>).ago(<span class="string">'1987-04-03'</span>)</span><br><span class="line"><span class="comment">//=&gt; "28年前"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2010-02-02'</span>).ago(<span class="string">'1987-04-03'</span>)</span><br><span class="line"><span class="comment">//=&gt; "23年前"</span></span><br></pre></td></tr></table></figure>
<h3 id="toHHMMSS">toHHMMSS</h3><blockquote>
<p>时间转换,倒计时  ‘毫秒’.toHHMMSS(输出格式)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">"123112"</span>.toHHMMSS(<span class="string">'hh时mm分ss秒'</span>) <span class="comment">//=&gt; 34时11分52秒</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/jaywcjlove/date.js/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jayw]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Grunt教程-前端自动化]]></title>
    <link href="http://jslite.io/2015/04/09/Grunt%E6%95%99%E7%A8%8B-%E5%89%8D%E7%AB%AF%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    <id>http://jslite.io/2015/04/09/Grunt教程-前端自动化/</id>
    <published>2015-04-09T05:48:22.000Z</published>
    <updated>2015-05-11T07:03:43.000Z</updated>
    <content type="html"><![CDATA[<h2 id="为何选择Grunt?">为何选择Grunt?</h2><blockquote>
<p>压缩、编译、单元测试、代码检查等 我们需要自动化，不必重复劳动，减小工作量。为何选择Grunt呢？好像是没有更好的选择了。</p>
</blockquote>
<h2 id="准备工作">准备工作</h2><h3 id="安装node-js">安装node.js</h3><blockquote>
<p>Grunt基于Node.js，安装之前要先安装Node.js。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">brew install node</span><br></pre></td></tr></table></figure>
<h3 id="更新npm">更新npm</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">sudo npm install npm -g</span><br></pre></td></tr></table></figure>
<h3 id="安装_grunt-cli">安装 grunt-cli</h3><blockquote>
<p>安装 grunt-cli 并不等于安装了 Grunt 任务运行器<br>Grunt CLI 的任务是运行 Gruntfile 指定的 Grunt 版本。 这样就可以在一台电脑上同时安装多个版本的 Grunt。(没有懂，俺直接实战)</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">npm install -g grunt-cli</span><br></pre></td></tr></table></figure>
<h2 id="Grunt必备文件">Grunt必备文件</h2><blockquote>
<p>创建文件必须创建文件夹，我建立了一个 <code>test</code> 的文件夹，一个标准的 <code>grunt</code> 项目中必须有两个文件。</p>
<p>package.json：用于保存项目元数据。<br>Gruntfile.js : 用于配置或定义任务、加载 Grunt 插件。</p>
<p>在test1文件夹中创建这两个文件吧。那么文件中写什么内容呢。我们首先来关注一下package.json写什么内容</p>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<h3 id="运行">运行</h3><p>在项目的根目录下运行下面的命令</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h3 id="命令执行过程">命令执行过程</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">npm WARN package.json test1@1.0.0 No description&#10;npm WARN package.json test1@1.0.0 No repository field.&#10;npm WARN package.json test1@1.0.0 No README data</span><br></pre></td></tr></table></figure>
<blockquote>
<p>提示说没有描述信息没有README之类的<br>在根目录添加一个 README.md 文件</p>
</blockquote>
<h3 id="添加内容">添加内容</h3><p>在 package.json 中添加下面内容之后</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,</span><br><span class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"测试的例子"</span></span>,</span><br><span class="line">  "<span class="attribute">repository</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"git"</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">"https://github.com/JSLite/JSLite.git"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>于是乎万事大吉了</p>
</blockquote>
<h3 id="安装_Grunt_插件">安装 Grunt 插件</h3><blockquote>
<p>在此项目中安装 Grunt 插件</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">sudo npm install grunt --save-dev</span><br></pre></td></tr></table></figure>
<p>package.json的文件内容发现多了 <code>devDependencies</code> 的信息<br>目录多了一个 <code>node_modules</code> 的文件夹  </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "<span class="attribute">name</span>": <span class="value"><span class="string">"test"</span></span>,</span><br><span class="line">  "<span class="attribute">version</span>": <span class="value"><span class="string">"1.0.0"</span></span>,</span><br><span class="line">  "<span class="attribute">description</span>": <span class="value"><span class="string">"测试的例子"</span></span>,</span><br><span class="line">  "<span class="attribute">repository</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">type</span>": <span class="value"><span class="string">"git"</span></span>,</span><br><span class="line">    "<span class="attribute">url</span>": <span class="value"><span class="string">"https://github.com/JSLite/JSLite.git"</span></span><br><span class="line">  </span>&#125;</span>,</span><br><span class="line">  "<span class="attribute">devDependencies</span>": <span class="value">&#123;</span><br><span class="line">    "<span class="attribute">grunt</span>": <span class="value"><span class="string">"^0.4.5"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line"></span>&#125;</span><br></pre></td></tr></table></figure>
<p>运行 <code>npm install &lt;module&gt; --save-dev</code>，不仅会安装指定的 <module> 模块，还会自动添加到 <code>devDependencies</code> 区域中，且包括 版本范围。</module></p>
<h2 id="grunt-contrib-uglify">grunt-contrib-uglify</h2><blockquote>
<p>插件用途：压缩js,css文件<br>插件名称：grunt-contrib-uglify</p>
</blockquote>
<h3 id="安装">安装</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">sudo npm install grunt-contrib-uglify --save-dev</span><br></pre></td></tr></table></figure>
<p>安装成功之后 在package.json的文件内容中的 <code>devDependencies</code> 的信息又增加了 </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"devDependencies": &#123;</span><br><span class="line">  "grunt": "^0.4.5",</span><br><span class="line">  "grunt-contrib-uglify": "^0.8.0"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="使用方法">使用方法</h3><blockquote>
<p>还记得我们上面说一个Grunt项目要两个必须的文件一个 <code>package.json</code> 和<code>Gruntfile.js</code>，注意大小写，Linux区分大小写的，创建 <code>Gruntfile.js</code> 并写入如下内容</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包装函数</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span><span class="params">(grunt)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 任务配置,所有插件的配置信息</span></span><br><span class="line">  grunt.initConfig(&#123;</span><br><span class="line">    pkg: grunt.file.readJSON(<span class="string">'package.json'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// uglify插件的配置信息</span></span><br><span class="line">    uglify: &#123;</span><br><span class="line">        options: &#123;</span><br><span class="line">          banner: <span class="string">'/*! This is uglify test - '</span> +</span><br><span class="line">            <span class="string">'&lt;%= grunt.template.today("yyyy-mm-dd") %&gt; */'</span>,</span><br><span class="line">          beautify: <span class="literal">true</span>,<span class="comment">//是否压缩</span></span><br><span class="line">          mangle: <span class="literal">false</span>, <span class="comment">//不混淆变量名</span></span><br><span class="line">          compress:<span class="literal">true</span>,<span class="comment">//打开或关闭使用默认选项源压缩。 </span></span><br><span class="line">          preserveComments: <span class="string">'all'</span>, <span class="comment">//不删除注释</span></span><br><span class="line">        &#125;,</span><br><span class="line">        app_task: &#123;</span><br><span class="line">          files: &#123;</span><br><span class="line">            <span class="string">'build/app.min.js'</span>: [<span class="string">'lib/index.js'</span>, <span class="string">'lib/test.js'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        buildb:&#123;<span class="comment">//任务二：压缩b.js，输出压缩信息</span></span><br><span class="line">            options: &#123;</span><br><span class="line">                report: <span class="string">"min"</span><span class="comment">//输出压缩率，可选的值有 false(不输出信息)，gzip</span></span><br><span class="line">            &#125;,</span><br><span class="line">            files: &#123;</span><br><span class="line">                <span class="string">'output/js/b.min.js'</span>: [<span class="string">'js/main/b.js'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        buildall: &#123;<span class="comment">//任务三：按原文件结构压缩js文件夹内所有JS文件</span></span><br><span class="line">            files: [&#123;</span><br><span class="line">                expand:<span class="literal">true</span>,</span><br><span class="line">                cwd:<span class="string">'js'</span>,<span class="comment">//js目录下</span></span><br><span class="line">                src:<span class="string">'**/*.js'</span>,<span class="comment">//所有js文件</span></span><br><span class="line">                dest: <span class="string">'output/js'</span><span class="comment">//输出到此目录下</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,</span><br><span class="line">        release: &#123;<span class="comment">//任务四：合并压缩a.js和b.js</span></span><br><span class="line">            files: &#123;</span><br><span class="line">                <span class="string">'output/js/index.min.js'</span>: [<span class="string">'js/a.js'</span>, <span class="string">'js/main/b.js'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 告诉grunt我们将使用插件</span></span><br><span class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-uglify'</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 告诉grunt当我们在终端中输入grunt时需要做些什么</span></span><br><span class="line">  grunt.registerTask(<span class="string">'default'</span>, [<span class="string">'uglify'</span>]);</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="分析">分析</h3><ul>
<li>banner：在<code>build/app.min.js</code> 文件生成内容如日期什么的</li>
<li>files：将 <code>lib</code> 目录中的 <code>js</code> 压缩合并生成到 <code>build</code> 目录中生成 <code>app.min.js</code></li>
</ul>
<h3 id="运行grunt">运行grunt</h3><blockquote>
<p>输入命令下面命令，好了，我的没有错误正常的。如果有错误，会有错误日志，自己分析哦。</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">grunt</span><br></pre></td></tr></table></figure>
<h2 id="grunt-contrib-watch">grunt-contrib-watch</h2><blockquote>
<p>插件用途：监控文件变化并自动运行grunt的watch插件<br>插件名称：grunt-contrib-watch</p>
</blockquote>
<h3 id="安装-1">安装</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">sudo npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure>
<h3 id="使用">使用</h3><blockquote>
<p>修改 <code>Gruntfile.js</code></p>
</blockquote>
<p>initConfig 中添加了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// watch插件的配置信息</span></span><br><span class="line">watch: &#123;</span><br><span class="line">    another: &#123;</span><br><span class="line">        files: [<span class="string">'lib/*.js'</span>],</span><br><span class="line">        tasks: [<span class="string">'uglify'</span>],</span><br><span class="line">        options: &#123;</span><br><span class="line">            <span class="comment">// Start another live reload server on port 1337</span></span><br><span class="line">            livereload: <span class="number">1337</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>增加了一行<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">grunt.loadNpmTasks(<span class="string">'grunt-contrib-watch'</span>);</span><br></pre></td></tr></table></figure></p>
<p>数组中添加了<code>watch</code><br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">grunt.registerTask(<span class="string">'default'</span>, [<span class="string">'uglify'</span>,<span class="string">'watch'</span>]);</span><br></pre></td></tr></table></figure></p>
<p>添加了watch后，完整的 <code>Gruntfile.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 包装函数</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span><span class="params">(grunt)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 任务配置,所有插件的配置信息</span></span><br><span class="line">  grunt.initConfig(&#123;</span><br><span class="line">    pkg: grunt.file.readJSON(<span class="string">'package.json'</span>),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// uglify插件的配置信息</span></span><br><span class="line">    uglify: &#123;</span><br><span class="line">        options: &#123;</span><br><span class="line">          banner: <span class="string">'/*! This is uglify test - '</span> +</span><br><span class="line">            <span class="string">'&lt;%= grunt.template.today("yyyy-mm-dd") %&gt; */'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        app_task: &#123;</span><br><span class="line">          files: &#123;</span><br><span class="line">            <span class="string">'build/app.min.js'</span>: [<span class="string">'lib/index.js'</span>, <span class="string">'lib/test.js'</span>]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// watch插件的配置信息</span></span><br><span class="line">    watch: &#123;</span><br><span class="line">        another: &#123;</span><br><span class="line">            files: [<span class="string">'lib/*.js'</span>],</span><br><span class="line">            tasks: [<span class="string">'uglify'</span>],</span><br><span class="line">            options: &#123;</span><br><span class="line">                <span class="comment">// Start another live reload server on port 1337</span></span><br><span class="line">                livereload: <span class="number">1337</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 告诉grunt我们将使用插件</span></span><br><span class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-uglify'</span>);</span><br><span class="line">  grunt.loadNpmTasks(<span class="string">'grunt-contrib-watch'</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 告诉grunt当我们在终端中输入grunt时需要做些什么</span></span><br><span class="line">  grunt.registerTask(<span class="string">'default'</span>, [<span class="string">'uglify'</span>,<span class="string">'watch'</span>]);</span><br><span class="line"> </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="grunt-contrib-watch-1">grunt-contrib-watch</h2><h3 id="安装_stylus">安装 <code>stylus</code></h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">sudo npm install grunt-contrib-watch --save-dev</span><br></pre></td></tr></table></figure>
<h3 id="修改_Gruntfile-js">修改 <code>Gruntfile.js</code></h3><p><code>initConfig</code> 中添加了  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">stylus:&#123;</span><br><span class="line">    build: &#123;</span><br><span class="line">        options: &#123;</span><br><span class="line">            linenos: <span class="literal">false</span>,</span><br><span class="line">            compress: <span class="literal">false</span>,</span><br><span class="line">            banner: <span class="string">'\/** \n * &lt;%= pkg.name %&gt; - &lt;%= pkg.description %&gt;\n * version &lt;%= pkg.version %&gt; \n * author &lt;%= pkg.author %&gt; \n * date &lt;%= grunt.template.today() %&gt; \n**/\n'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        files: [&#123;</span><br><span class="line">            <span class="string">'css/historyDetail.css'</span>: <span class="string">'styl/historyDetail.styl'</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<p>下面添加  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">grunt.loadNpmTasks(<span class="string">'grunt-contrib-stylus'</span>);</span><br></pre></td></tr></table></figure>
<p><code>paths</code> 将自动使用@import来引入一些<code>Stylus</code>文件，比如一些<code>Mixin</code>集合，放在一个Stylus文件中进行维护，写在paths中后，就可以在每个<code>Stylus</code>文件中调用它们。<code>define</code> 可以定义一些全局变量，然后在<code>Stylus</code>中使用，但我不喜欢使用这个配置，而是更喜欢把全局变量放在一个单独的<code>Stylus</code>文件中，然后将这个文件加入paths的数组中。一句话，把所有不会直接产出CSS的<code>Stylus</code>代码分成若干个<code>Stylus</code>文件，然后全部添加到<code>paths</code>中，这样在所有<code>Stylus</code>文件中都可以随时调用了，但要注意这些<code>Stylus</code>文件的调用关系和使用先后顺序。  </p>
<p><code>compress</code> 及 <code>linenos</code> 是两个Boolean值，用来控制是否压缩处理后的CSS代码以及是否在CSS代码中保留注释。</p>
<p><code>banner</code> 是一个字符串，会被放置在CSS文件的最前面，一般我用来写注释，比如</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">banner: '\/<span class="keyword">*</span><span class="keyword">*</span> \n <span class="keyword">*</span> <span class="variable">&lt;%= pkg.name %&gt;</span> - <span class="variable">&lt;%= pkg.description %&gt;</span>\n <span class="keyword">*</span> version <span class="variable">&lt;%= pkg.version %&gt;</span> \n <span class="keyword">*</span> author <span class="variable">&lt;%= pkg.author %&gt;</span> \n <span class="keyword">*</span> date <span class="variable">&lt;%= grunt.template.today() %&gt;</span> \n<span class="keyword">*</span><span class="keyword">*</span>/\n'</span><br></pre></td></tr></table></figure>
<p><code>firebug</code> 将控制是否使用一个<code>Firebug</code>的<code>Stylus</code>插件FireStylus for <code>Firebug</code>，可以在Firefox中调试Stylus。</p>
<p><code>use</code> 可以引入一些<code>Stylus</code>的其他<code>grunt</code>插件。</p>
<h2 id="常用模块设置">常用模块设置</h2><p><code>grunt-contrib-clean</code>：删除文件。<a href="https://www.npmjs.com/package/grunt-contrib-clean" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-compass</code>：使用compass编译sass文件。<a href="https://www.npmjs.com/package/grunt-contrib-compass" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-concat</code>：合并文件。<a href="https://www.npmjs.com/package/grunt-contrib-concat" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-copy</code>：复制文件。<a href="https://www.npmjs.com/package/grunt-contrib-copy" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-cssmin</code>：压缩以及合并CSS文件。<a href="https://www.npmjs.com/package/grunt-contrib-cssmin" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-imagemin</code>：图像压缩模块。<a href="https://www.npmjs.com/package/grunt-contrib-imagemin" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-jshint</code>：检查JavaScript语法。<a href="https://www.npmjs.com/package/grunt-contrib-jshint" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-uglify</code>：压缩以及合并JavaScript文件。<a href="https://www.npmjs.com/package/grunt-contrib-uglify" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-watch</code>：监视文件变动，做出相应动作。<a href="https://www.npmjs.com/package/grunt-contrib-watch" target="_blank" rel="external">npm&gt;&gt;</a><br><code>grunt-contrib-stylus</code>：stylus编写styl输出css <a href="https://www.npmjs.com/package/grunt-contrib-stylus" target="_blank" rel="external">npm&gt;&gt;</a>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="为何选择Grunt?">为何选择Grunt?</h2><blockquote>
<p>压缩、编译、单元测试、代码检查等 我们需要自动化，不必重复劳动，减小工作量。为何选择Grunt呢？好像是没有更好的选择了。</p>
</blockquote>
<h2 id="准]]>
    </summary>
    
      <category term="grunt" scheme="http://jslite.io/tags/grunt/"/>
    
      <category term="nodejs" scheme="http://jslite.io/tags/nodejs/"/>
    
      <category term="tools" scheme="http://jslite.io/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS获取时间并实现字符串和时间戳之间的转换]]></title>
    <link href="http://jslite.io/2015/04/09/js%E8%8E%B7%E5%8F%96%E6%97%B6%E9%97%B4%E5%B9%B6%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%92%8C%E6%97%B6%E9%97%B4%E6%88%B3%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>http://jslite.io/2015/04/09/js获取时间并实现字符串和时间戳之间的转换/</id>
    <published>2015-04-08T17:31:27.000Z</published>
    <updated>2015-04-10T19:09:48.000Z</updated>
    <content type="html"><![CDATA[<h2 id="获取当前时间：">获取当前时间：</h2><h3 id="时间">时间</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();          <span class="comment">//当前时间</span></span><br></pre></td></tr></table></figure>
<h3 id="年份">年份</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> year = myDate.getFullYear();</span><br></pre></td></tr></table></figure>
<h3 id="月份">月份</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> month = myDate.getMonth() + <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h3 id="日">日</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> day = myDate.getDate();</span><br></pre></td></tr></table></figure>
<h3 id="年份(2位)">年份(2位)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getYear();</span><br></pre></td></tr></table></figure>
<h3 id="完整年份">完整年份</h3><blockquote>
<p>(4位,1970-????)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getFullYear();</span><br></pre></td></tr></table></figure>
<h3 id="月份-1">月份</h3><blockquote>
<p>(0-11,0代表1月)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getMonth();</span><br></pre></td></tr></table></figure>
<h3 id="日(1-31)">日(1-31)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getDate();</span><br></pre></td></tr></table></figure>
<h3 id="星期X">星期X</h3><blockquote>
<p>(0-6,0代表星期天)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getDay();</span><br></pre></td></tr></table></figure>
<h3 id="时间戳">时间戳</h3><blockquote>
<p>(从1970.1.1开始的毫秒数)</p>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getTime();</span><br></pre></td></tr></table></figure>
<h3 id="小时数(0-23)">小时数(0-23)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getHours();</span><br></pre></td></tr></table></figure>
<h3 id="分钟数(0-59)">分钟数(0-59)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getMinutes();</span><br></pre></td></tr></table></figure>
<h3 id="秒数(0-59)">秒数(0-59)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getSeconds();</span><br></pre></td></tr></table></figure>
<h3 id="毫秒数(0-999)">毫秒数(0-999)</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getSeconds();</span><br></pre></td></tr></table></figure>
<h3 id="日期">日期</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.getMilliseconds();</span><br></pre></td></tr></table></figure>
<h3 id="时间-1">时间</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> mytime=myDate.toLocaleTimeString();</span><br></pre></td></tr></table></figure>
<h3 id="日期与时间">日期与时间</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">myDate.toLocaleString( );</span><br></pre></td></tr></table></figure>
<h2 id="获取最近一周的日期">获取最近一周的日期</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> oneDay = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>;</span><br><span class="line"><span class="keyword">var</span> lastDate = <span class="keyword">new</span> <span class="built_in">Date</span>(myDate - oneDay * <span class="number">6</span>);</span><br><span class="line"><span class="keyword">var</span> lastYear = lastDate.getFullYear();</span><br><span class="line"><span class="keyword">var</span> lastMonth = lastDate.getMonth() + <span class="number">1</span>;</span><br></pre></td></tr></table></figure>
<h2 id="获取当前月的最后一天">获取当前月的最后一天</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lastDay = lastDate.getDate();</span><br><span class="line"><span class="keyword">var</span> day = <span class="keyword">new</span> <span class="built_in">Date</span>(year ,month , <span class="number">0</span>);</span><br><span class="line"><span class="keyword">var</span> lastdate = day.getDate();<span class="comment">//当前月的最后一天</span></span><br></pre></td></tr></table></figure>
<h2 id="获取最近N个月的日期">获取最近N个月的日期</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lastDate = <span class="keyword">new</span> <span class="built_in">Date</span>(myDate - oneDay * myDate.getDate());</span><br><span class="line">lastDate = <span class="keyword">new</span> <span class="built_in">Date</span>(lastDate - N * oneDay * (lastDate.getDate() - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">var</span> lastYear = lastDate.getFullYear();</span><br><span class="line"><span class="keyword">var</span> lastMonth = lastDate.getMonth() + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> lastDay = lastDate.getDate();</span><br></pre></td></tr></table></figure>
<h2 id="字符串转换为时间戳">字符串转换为时间戳</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date=<span class="string">"2014-12-06"</span>;</span><br><span class="line">date = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.parse(date.replace(<span class="regexp">/-/g</span>, <span class="string">"/"</span>)));</span><br><span class="line">date = date.getTime();</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="获取当前时间：">获取当前时间：</h2><h3 id="时间">时间</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class]]>
    </summary>
    
      <category term="js" scheme="http://jslite.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS 设置背景颜色透明度]]></title>
    <link href="http://jslite.io/2015/04/09/CSS-%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%A2%9C%E8%89%B2%E9%80%8F%E6%98%8E%E5%BA%A6/"/>
    <id>http://jslite.io/2015/04/09/CSS-设置背景颜色透明度/</id>
    <published>2015-04-08T17:05:26.000Z</published>
    <updated>2015-04-08T17:07:03.000Z</updated>
    <content type="html"><![CDATA[<h2 id="兼容IE">兼容IE</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#4Bffffff,endColorstr=#4Bffffff);</span><br></pre></td></tr></table></figure>
<h2 id="标准">标准</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">background</span>: <span class="tag">rgba</span>(255, 255, 255, 0<span class="class">.6</span>);</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="兼容IE">兼容IE</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">filter:progid:DXImageTransform.Microsof]]>
    </summary>
    
      <category term="css" scheme="http://jslite.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[bash快捷键]]></title>
    <link href="http://jslite.io/2015/04/08/bash%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://jslite.io/2015/04/08/bash快捷键/</id>
    <published>2015-04-08T15:37:49.000Z</published>
    <updated>2015-04-08T16:41:02.000Z</updated>
    <content type="html"><![CDATA[<p><code>Ctrl + a</code> ：移到命令行首<br><code>Ctrl + e</code> ：移到命令行尾<br><code>Ctrl + f</code> ：按字符前移（右向）<br><code>Ctrl + b</code> ：按字符后移（左向）<br><code>Alt + f</code> ：按单词前移（右向）<br><code>Alt + b</code> ：按单词后移（左向）<br><code>Ctrl + xx</code>：在命令行首和光标之间移动<br><code>Ctrl + u</code> ：从光标处删除至命令行首<br><code>Ctrl + k</code> ：从光标处删除至命令行尾<br><code>Ctrl + w</code> ：从光标处删除至字首<br><code>Alt + d</code> ：从光标处删除至字尾<br><code>Ctrl + d</code> ：删除光标处的字符<br><code>Ctrl + h</code> ：删除光标前的字符<br><code>Ctrl + y</code> ：粘贴至光标后<br><code>Alt + c</code> ：从光标处更改为首字母大写的单词<br><code>Alt + u</code> ：从光标处更改为全部大写的单词<br><code>Alt + l</code> ：从光标处更改为全部小写的单词<br><code>Ctrl + t</code> ：交换光标处和之前的字符<br><code>Alt + t</code> ：交换光标处和之前的单词<br><code>Alt + Backspace</code>：与 <code>Ctrl + w</code> 相同  </p>
<h2 id="重新执行命令">重新执行命令</h2><p><code>Ctrl + r</code>：逆向搜索命令历史<br><code>Ctrl + g</code>：从历史搜索模式退出<br><code>Ctrl + p</code>：历史中的上一条命令<br><code>Ctrl + n</code>：历史中的下一条命令<br><code>Alt + .</code>：使用上一条命令的最后一个参数  </p>
<h2 id="控制命令">控制命令</h2><p><code>Ctrl + l</code>：清屏<br><code>Ctrl + o</code>：执行当前命令，并选择上一条命令<br><code>Ctrl + s</code>：阻止屏幕输出<br><code>Ctrl + q</code>：允许屏幕输出<br><code>Ctrl + c</code>：终止命令<br><code>Ctrl + z</code>：挂起命令  </p>
<h2 id="Bang_(!)_命令">Bang (!) 命令</h2><p><code>!!</code>：执行上一条命令<br><code>!blah</code>：执行最近的以 blah 开头的命令，如 <code>!ls</code><br><code>!blah:p</code>：仅打印输出，而不执行<br><code>!$</code>：上一条命令的最后一个参数，与 <code>Alt + .</code> 相同<br><code>!$:p</code>：打印输出 <code>!$</code> 的内容<br><code>!*</code>：上一条命令的所有参数<br><code>!*:p</code>：打印输出 <code>!*</code> 的内容<br><code>^blah</code>：删除上一条命令中的 <code>blah</code><br><code>^blah^foo</code>：将上一条命令中的 <code>blah</code> 替换为 <code>foo</code><br><code>^blah^foo^</code>：将上一条命令中所有的 <code>blah</code> 都替换为 <code>foo</code>  </p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>Ctrl + a</code> ：移到命令行首<br><code>Ctrl + e</code> ：移到命令行尾<br><code>Ctrl + f</code> ：按字符前移（右向）<br><code>Ctrl + b</code> ：按字符后移（左向）<br]]>
    </summary>
    
      <category term="bash" scheme="http://jslite.io/tags/bash/"/>
    
      <category term="快捷键" scheme="http://jslite.io/tags/%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo模板制作小技巧]]></title>
    <link href="http://jslite.io/2015/04/05/hexo%E6%A8%A1%E6%9D%BF%E5%88%B6%E4%BD%9C%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://jslite.io/2015/04/05/hexo模板制作小技巧/</id>
    <published>2015-04-05T11:05:25.000Z</published>
    <updated>2015-05-13T05:50:24.000Z</updated>
    <content type="html"><![CDATA[<p>这个是我做JSLite官网的笔记，顺便皮肤也共享了。</p>
<a id="more"></a> 
<h1 id="皮肤hexoThemeKacper">皮肤hexoThemeKacper</h1><p><a href="https://github.com/jaywcjlove/hexoThemeKacper/issues" target="_blank" rel="external"><img src="https://img.shields.io/github/issues/jaywcjlove/hexoThemeKacper.svg" alt=""></a> <a href="https://github.com/jaywcjlove/hexoThemeKacper/network" target="_blank" rel="external"><img src="https://img.shields.io/github/forks/jaywcjlove/hexoThemeKacper.svg" alt=""></a> <a href="https://github.com/jaywcjlove/hexoThemeKacper/stargazers" target="_blank" rel="external"><img src="https://img.shields.io/github/stars/jaywcjlove/hexoThemeKacper.svg" alt=""></a> <a href="https://github.com/jaywcjlove/hexoThemeKacper/releases" target="_blank" rel="external"><img src="https://img.shields.io/github/release/jaywcjlove/hexoThemeKacper.svg" alt=""></a></p>
<h2 id="读取config-yml配置文件">读取config.yml配置文件</h2><p>有两个 <code>config</code> 文件：  </p>
<ol>
<li>在 <code>themes/模板/_config.yml</code> ，模板中读取 <code>theme.social</code></li>
<li>在 <code>/_config.yml</code> 模板中读取 <code>config.title</code></li>
</ol>
<h2 id="page">page</h2><p>archives  </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">page = &#123;</span><br><span class="line">    path:archives/index.html</span><br><span class="line">    base:archives/</span><br><span class="line">    total:2</span><br><span class="line">    current:1</span><br><span class="line">    current_url:archives/</span><br><span class="line">    posts:[object Object]</span><br><span class="line">    prev:0</span><br><span class="line">    prev_link:</span><br><span class="line">    next:2</span><br><span class="line">    next_link:archives/page/2/</span><br><span class="line">    archive:true</span><br><span class="line">    lang:zh-CN</span><br><span class="line">    canonical_path:archives/index.html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="详细页面">详细页面</h3><p>page </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">path:<span class="string">"about/index.html"</span></span><br><span class="line">title:<span class="string">"关于我啦"</span></span><br><span class="line">date:<span class="string">"Thu Apr 02 2015 01:36:59 GMT+0800"</span></span><br><span class="line">description:<span class="string">"关于我啦"</span></span><br><span class="line">type:<span class="string">"about"</span></span><br><span class="line">_content: <span class="string">"前端开发工程师。敏捷实践者。目前就职于hotpu，生活在上海。 &lt;!--more--&gt; ### 我熟悉 - javascript - HTML5 - CSS3 ### 我略知 - Node.js - iOS开发 - PHP ### 爱好 - 旅游 - 看电视 ### 联系我 OS X: `echo d293b2hvb0BxcS5jb20K | base64 -D` Linux: `echo d293b2hvb0BxcS5jb20K | base64 -d` "</span></span><br><span class="line">source:<span class="string">"about/index.md"</span></span><br><span class="line">raw:<span class="string">'title: "关于我啦"date: 2015-04-02 01:36:59 description: "关于我啦"type: "about"--- 前端开发工程师。敏捷实践者。目前就职于hotpu，生活在上海。 &lt;!--more--&gt; ### 我熟悉 - javascript - HTML5 - CSS3 ### 我略知 - Node.js - iOS开发 - PHP ### 爱好 - 旅游 - 看电视 ### 联系我 OS X: `echo d293b2hvb0BxcS5jb20K | base64 -D` Linux: `echo d293b2hvb0BxcS5jb20K | base64 -d`'</span></span><br><span class="line">updated:<span class="string">'Sun Apr 05 2015 06:38:56 GMT+0800'</span></span><br><span class="line">_id:<span class="string">"ci83azhas0001j7glyolhyet0"</span></span><br><span class="line">comments:<span class="literal">true</span></span><br><span class="line">layout:<span class="string">"page"</span></span><br><span class="line">content:<span class="string">"&lt;p&gt;前端开发工程师。敏捷实践者。目前就职于hotpu，生活在上海。&lt;/p&gt;"</span> </span><br><span class="line">permalink:<span class="string">"http://kacperwang.github.io/about/index.html"</span></span><br><span class="line">full_source:<span class="string">"/Applications/XAMPP/xamppfiles/htdocs/git/github.com/kacperwang.github.io/source/about/index.md"</span></span><br><span class="line">lang:<span class="string">"zh-CN"</span></span><br><span class="line">canonical_path:<span class="string">"about/index.html"</span></span><br></pre></td></tr></table></figure>
<h2 id="页面数据读取">页面数据读取</h2><p><code>post.type</code>  </p>
<h2 id="图片显示">图片显示</h2><p>把图片放到 source/images 目录下</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line">!<span class="attr_selector">[]</span>(images/xxx.jpg)</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>这个是我做JSLite官网的笔记，顺便皮肤也共享了。</p>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://jslite.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[chrome 使用技巧]]></title>
    <link href="http://jslite.io/2015/04/05/chrome-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://jslite.io/2015/04/05/chrome-使用技巧/</id>
    <published>2015-04-05T10:04:11.000Z</published>
    <updated>2015-04-08T07:35:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Reference">Reference</h2><p><a href="https://plus.google.com/+AddyOsmani/posts/TanDFKEN9Kn" target="_blank" rel="external">Styled console logging in the Chrome DevTools (Canary)</a><br><a href="https://developer.chrome.com/devtools/docs/console-api" target="_blank" rel="external">Chrome Console API</a><br><a href="https://developer.chrome.com/devtools/docs/commandline-api" target="_blank" rel="external">Chrome Console Command Line API</a></p>
<h2 id="控制台">控制台</h2><h3 id="在控制台选择元素">在控制台选择元素</h3><h4 id="$()_&amp;_$$()">$() &amp; $$()</h4><p><code>$()</code> – <code>document.querySelector()</code>的缩写，返回第一个与之匹配的CSS选择器的元素(例如：<code>$(&#39;div&#39;)</code> 它将返回本页的第一个div元素)。<br><code>$$()</code> - <code>document.querySelectorAll()</code>的缩写，返回一个数组，里面是与之匹配的CSS选择器的元素。  </p>
<h4 id="$0_-_$4">$0 - $4</h4><p><code>$_</code>命令返回最近一次表达式执行的结果，功能跟按向上的方向键再回车是一样的，但它可以做为一个变量使用在你接下来的表达式中。<code>$_</code>需要领悟其奥义才能使用得当，而 <code>$0~$4</code> 则代表了最近5个你选择过的DOM节点。</p>
<h3 id="console">console</h3><h4 id="console-time_&amp;_console-timeEnd">console.time &amp; console.timeEnd</h4><p>输出一些调试信息是控制台最常用的功能，当然，它的功能远不止于此。当做一些性能测试时，同样可以在这里很方便地进行。  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.time(<span class="string">"Array initialize"</span>);</span><br><span class="line"><span class="keyword">var</span> array= <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">1000000</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = array.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    array[i] = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">console</span>.timeEnd(<span class="string">"Array initialize"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&gt;&gt;  Array initialize: 1195.575ms</span></span><br></pre></td></tr></table></figure>
<h4 id="console-profile_&amp;_console-timeLime">console.profile &amp; console.timeLime</h4><p>当想要查看CPU使用相关的信息时，可以使用 <code>console.profile</code> 配合 <code>console.profileEnd</code> 来完成这个需求。<br>这一功能可以通过UI界面来完成，Chrome 开发者工具里面有个 <code>tab</code> 便是 <code>Profile</code> 。  </p>
<p>与此类似的功能还有 <code>console.timeLine</code> 配合 <code>console.timeLineEnd</code> ,它的作用是开始记录一段时间轴，同样可以通过Chrome开发者工具里的Timeline标签来进行相应操作。  </p>
<p>所以在我看来这两个方法有点鸡肋，因为都可以通过操作界面来完成。但至少他提供了一种命令行方式的交互，还是多了种姿势供选择吧。  </p>
<h4 id="console-trace">console.trace</h4><p>堆栈跟踪相关的调试可以使用 <code>console.trace</code>。这个同样可以通过UI界面完成。当代码被打断点后，可以在Call Stack面板中查看相关堆栈信息。  </p>
<h3 id="copy">copy</h3><p>通过此命令可以将在控制台获取到的内容复制到剪贴板。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">copy</span><span class="params">(document.body)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="keys_&amp;_values">keys &amp; values</h3><p>这是一对基友。前者返回传入对象所有属性名组成的数据，后者返回所有属性值组成的数组。具体请看下面的例子：<br><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tboy=&#123;name:<span class="string">'wayou'</span>,gender:<span class="string">'unknown'</span>,hobby:<span class="string">'opposite to the gender'</span>&#125;;</span><br><span class="line">keys(tboy);</span><br><span class="line">values(tboy);</span><br></pre></td></tr></table></figure></p>
<h2 id="DevTools">DevTools</h2><h3 id="快速文件转换">快速文件转换</h3><p><code>Ctrl + P</code> ( 在Mac上使用 <code>Cmd + P</code> )来快速的寻找和打开你工程中的任意文件。  </p>
<h3 id="在源代码中搜索">在源代码中搜索</h3><p>按下 <code>Ctrl + Shift + F</code> (在Mac上使用 <code>Cmd + Opt + F</code>)，即可在所有已加载的文件中查找一个特定的字符串。这个搜索的方法也支持正则表达式。  </p>
<h3 id="跳转到特定的行数">跳转到特定的行数</h3><p>DevTools能够允许你轻松地跳转到代码里的任意一行，Windows 和 Linux用户只需要按下<code>Ctrl + G</code> (在Mac上使用 <code>Cmd + L</code>),然后输入你想查阅的行数即可。<br>另一个跳转的方法是按下Ctrl + O ，输入:和行数，而不用去寻找一个文件。  </p>
<h3 id="多个位置同时编辑">多个位置同时编辑</h3><p>编辑一个文件的时候你可以通过按住<code>Ctrl</code> (在Mac上为 Cmd) 同时点击你想让光标停留的位置，设置多个光标，这样你就可以同时在多个位置输入同一文本了。  </p>
<h3 id="选择下一个匹配项">选择下一个匹配项</h3><p>当你在Sources 标签下编辑文件时，如果你按下<code>Ctrl + D</code> (在Mac上使用 <code>Cmd + D</code>)，下一个匹配项也会被选中，这能够帮助你同时编辑他们。  </p>
<h3 id="改变颜色格式">改变颜色格式</h3><p>在颜色预览中使用<code>Shift + Click</code> ，可以在<code>rgba</code>, <code>hsl</code> 和 <code>hexadecimal</code> 这三种格式中改变。  </p>
<h2 id="美化js">美化js</h2><p>很多js都被压缩了，在调试工具里面 <code>Sources</code> 选中js文件在下面有个 <code>{}</code> 自动美化  </p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Reference">Reference</h2><p><a href="https://plus.google.com/+AddyOsmani/posts/TanDFKEN9Kn" target="_blank" rel="external">Styled co]]>
    </summary>
    
      <category term="chrome" scheme="http://jslite.io/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS编码规范]]></title>
    <link href="http://jslite.io/2015/04/01/CSS%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>http://jslite.io/2015/04/01/CSS编码规范/</id>
    <published>2015-04-01T14:06:05.000Z</published>
    <updated>2015-05-22T18:26:09.000Z</updated>
    <content type="html"><![CDATA[<p>转载：<a href="https://github.com/ecomfe/spec" target="_blank" rel="external">原地址</a></p>
<h2 id="1_前言">1 前言</h2><p>CSS作为网页样式的描述语言，在百度一直有着广泛的应用。本文档的目标是使CSS代码风格保持一致，容易被理解和被维护。</p>
<p>虽然本文档是针对CSS设计的，但是在使用各种CSS的预编译器(如less、sass、stylus等)时，适用的部分也应尽量遵循本文档的约定。</p>
<h2 id="2_代码风格">2 代码风格</h2><h3 id="2-1_文件">2.1 文件</h3><blockquote>
<p>[建议] <code>CSS</code> 文件使用无 <code>BOM</code> 的 <code>UTF-8</code> 编码。</p>
</blockquote>
<p>解释：</p>
<p>UTF-8 编码具有更广泛的适应性。BOM 在使用程序或工具处理文件时可能造成不必要的干扰。</p>
<h3 id="2-2_缩进">2.2 缩进</h3><blockquote>
<p>[强制] 使用 <code>4</code> 个空格做为一个缩进层级，不允许使用 <code>2</code> 个空格 或 <code>tab</code> 字符。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.selector</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="2-3_空格">2.3 空格</h3><blockquote>
<p>[强制] <code>选择器</code> 与 <code>{</code> 之间必须包含空格。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.selector</span> <span class="rules">&#123;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] <code>属性名</code> 与之后的 <code>:</code> 之间不允许包含空格， <code>:</code> 与 <code>属性值</code> 之间必须包含空格。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p> [强制] <code>列表型属性值</code> 书写在单行时，<code>,</code> 后必须跟一个空格。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="rules">&#123;<span class="rule"><span class="attribute">font-family</span>:<span class="value"> Arial, sans-serif</span></span>;<span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="2-4_行长度">2.4 行长度</h3><blockquote>
<p>[强制] 每行不得超过 <code>120</code> 个字符，除非单行不可分割。</p>
</blockquote>
<p>解释：</p>
<p>常见不可分割的场景为URL超长。</p>
<blockquote>
<p>[建议] 对于超长的样式，在样式值的 <code>空格</code> 处或 <code>,</code> 后换行，建议按逻辑分组。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="rules">&#123;<span class="comment">/* 不同属性值按逻辑分组 */</span></span><br><span class="line"><span class="rule"><span class="attribute">background</span>:<span class="value"></span><br><span class="line">    transparent <span class="function">url</span>(aVeryVeryVeryLongUrlIsPlacedHere)</span><br><span class="line">    no-repeat <span class="number">0</span> <span class="number">0</span></span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 可重复多次的属性，每次重复一行 */</span></span><br><span class="line"><span class="rule"><span class="attribute">background-image</span>:<span class="value"></span><br><span class="line">    <span class="function">url</span>(aVeryVeryVeryLongUrlIsPlacedHere)</span><br><span class="line">    <span class="function">url</span>(anotherVeryVeryVeryLongUrlIsPlacedHere)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 类似函数的属性值可以根据函数调用的缩进进行 */</span></span><br><span class="line"><span class="rule"><span class="attribute">background-image</span>:<span class="value"> <span class="function">-webkit-gradient</span>(</span><br><span class="line">    linear,</span><br><span class="line">    left bottom,</span><br><span class="line">    left top,</span><br><span class="line">    <span class="function">color-stop</span>(<span class="number">0.04</span>, <span class="function">rgb</span>(<span class="number">88</span>,<span class="number">94</span>,<span class="number">124</span>)),</span><br><span class="line">    <span class="function">color-stop</span>(<span class="number">0.52</span>, <span class="function">rgb</span>(<span class="number">115</span>,<span class="number">123</span>,<span class="number">162</span>))</span><br><span class="line">)</span></span>;<span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="2-5_选择器">2.5 选择器</h3><blockquote>
<p>[强制] 当一个 rule 包含多个 selector 时，每个选择器声明必须独占一行。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.post</span>,</span><br><span class="line"><span class="class">.page</span>,</span><br><span class="line"><span class="class">.comment</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1.5</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.post</span>, <span class="class">.page</span>, <span class="class">.comment</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1.5</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] <code>&gt;</code>、<code>+</code>、<code>~</code> 选择器的两边各保留一个空格。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">main</span> &gt; <span class="tag">nav</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">label</span> + <span class="tag">input</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">input</span><span class="pseudo">:checked</span> ~ <span class="tag">button</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#69C</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">main</span>&gt;<span class="tag">nav</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">label</span>+<span class="tag">input</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">input</span><span class="pseudo">:checked</span>~<span class="tag">button</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#69C</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] 属性选择器中的值必须用双引号包围。</p>
</blockquote>
<p>解释：</p>
<p>不允许使用单引号，不允许不使用引号。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">article</span><span class="attr_selector">[character="juliet"]</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">voice-family</span>:<span class="value"> <span class="string">"Vivien Leigh"</span>, victoria, female</span><br><span class="line"></span></span></span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">article</span><span class="attr_selector">[character='juliet']</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">voice-family</span>:<span class="value"> <span class="string">"Vivien Leigh"</span>, victoria, female</span><br><span class="line"></span></span></span>&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-6_属性">2.6 属性</h3><blockquote>
<p>[强制] 属性定义必须另起一行。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.selector</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.selector</span> <span class="rules">&#123; <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>; <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>; <span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p> [强制] 属性定义后必须以分号结尾。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.selector</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.selector</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span><br><span class="line"></span></span></span>&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3_通用">3 通用</h2><h3 id="3-1_选择器">3.1 选择器</h3><blockquote>
<p>[强制] 如无必要，不得为 <code>id</code>、<code>class</code> 选择器添加类型选择器进行限定。</p>
</blockquote>
<p>解释：</p>
<p>在性能和维护性上，都有一定的影响。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="id">#error</span>,</span><br><span class="line"><span class="class">.danger-message</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-color</span>:<span class="value"> <span class="hexcolor">#c00</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">dialog</span><span class="id">#error</span>,</span><br><span class="line"><span class="tag">p</span><span class="class">.danger-message</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-color</span>:<span class="value"> <span class="hexcolor">#c00</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 选择器的嵌套层级应不大于 3 级，位置靠后的限定条件应尽可能精确。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="id">#username</span> <span class="tag">input</span> <span class="rules">&#123;<span class="rule">&#125;</span></span></span><br><span class="line"><span class="class">.comment</span> <span class="class">.avatar</span> <span class="rules">&#123;<span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.page</span> <span class="class">.header</span> <span class="class">.login</span> <span class="id">#username</span> <span class="tag">input</span> <span class="rules">&#123;<span class="rule">&#125;</span></span></span><br><span class="line"><span class="class">.comment</span> <span class="tag">div</span> * <span class="rules">&#123;<span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="3-2_属性缩写">3.2 属性缩写</h3><blockquote>
<p>[建议] 在可以使用缩写的情况下，尽量使用属性缩写。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.post</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">12px</span>/<span class="number">1.5</span> arial, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.post</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> arial, sans-serif</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1.5</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 使用 <code>border</code> / <code>margin</code> / <code>padding</code> 等缩写时，应注意隐含值对实际数值的影响，确实需要设置多个方向的值时才使用缩写。</p>
</blockquote>
<p>解释：</p>
<p>border / margin / padding 等缩写会同时设置多个属性的值，容易覆盖不需要覆盖的设定。如某些方向需要继承其他声明的值，则应该分开设置。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* centering &lt;article class="page"&gt; horizontally and highlight featured ones */</span></span><br><span class="line"><span class="tag">article</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#999</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.page</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> auto</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> auto</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">.featured</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#69c</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.page</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">5px</span> auto</span></span>; <span class="comment">/* introducing redundancy */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">.featured</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#69c</span></span></span>; <span class="comment">/* introducing redundancy */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="3-3_属性书写顺序">3.3 属性书写顺序</h3><blockquote>
<p>[建议] 同一 rule set 下的属性在书写时，应按功能进行分组，并以 <strong>Formatting Model（布局方式、位置） &gt; Box Model（尺寸） &gt; Typographic（文本相关） &gt; Visual（视觉效果）</strong> 的顺序书写，以提高代码的可读性。</p>
</blockquote>
<p>解释：</p>
<ul>
<li>Formatting Model 相关属性包括：<code>position</code> / <code>top</code> / <code>right</code> / <code>bottom</code> / <code>left</code> / <code>float</code> / <code>display</code> / <code>overflow</code> 等</li>
<li>Box Model 相关属性包括：<code>border</code> / <code>margin</code> / <code>padding</code> / <code>width</code> / <code>height</code> 等</li>
<li>Typographic 相关属性包括：<code>font</code> / <code>line-height</code> / <code>text-align</code> / <code>word-wrap</code> 等</li>
<li>Visual 相关属性包括：<code>background</code> / <code>color</code> / <code>transition</code> / <code>list-style</code> 等</li>
</ul>
<p>另外，如果包含 <code>content</code> 属性，应放在最前面。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.sidebar</span> <span class="rules">&#123;</span><br><span class="line">    <span class="comment">/* formatting model: positioning schemes / offsets / z-indexes / display / ...  */</span></span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">50px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">overflow-x</span>:<span class="value"> hidden</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* box model: sizes / margins / paddings / borders / ...  */</span></span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ddd</span></span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* typographic: font / aligns / text styles / ... */</span></span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* visual: colors / shadows / gradients / ... */</span></span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#f5f5f5</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#333</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transition</span>:<span class="value"> color <span class="number">1s</span></span></span>;</span><br><span class="line">       <span class="rule"><span class="attribute">-moz-transition</span>:<span class="value"> color <span class="number">1s</span></span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">transition</span>:<span class="value"> color <span class="number">1s</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="3-4_清除浮动">3.4 清除浮动</h3><blockquote>
<p>[建议] 当元素需要撑起高度以包含内部的浮动元素时，通过对伪类设置 <code>clear</code> 或触发 <code>BFC</code> 的方式进行 <code>clearfix</code>。尽量不使用增加空标签的方式。</p>
</blockquote>
<p>解释：</p>
<p>触发 BFC 的方式很多，常见的有：</p>
<ul>
<li>float 非 none</li>
<li>position 非 static</li>
<li>overflow 非 visible</li>
</ul>
<p>如希望使用更小副作用的清除浮动方法，参见 <a href="http://nicolasgallagher.com/micro-clearfix-hack/" target="_blank" rel="external">A new micro clearfix hack</a> 一文。</p>
<p>另需注意，对已经触发 BFC 的元素不需要再进行 clearfix。</p>
<h3 id="3-5_!important">3.5 !important</h3><blockquote>
<p>[建议] 尽量不使用 <code>!important</code> 声明。</p>
<p>[建议] 当需要强制指定样式且不允许任何场景覆盖时，通过标签内联和 <code>!important</code> 定义样式。</p>
</blockquote>
<p>解释：</p>
<p>必须注意的是，仅在设计上 <code>确实不允许任何其它场景覆盖样式</code> 时，才使用内联的 <code>!important</code> 样式。通常在第三方环境的应用中使用这种方案。下面的 z-index 章节是其中一个特殊场景的典型样例。</p>
<h3 id="3-6_z-index">3.6 z-index</h3><blockquote>
<p>[建议] 将 <code>z-index</code> 进行分层，对文档流外绝对定位元素的视觉层级关系进行管理。</p>
</blockquote>
<p>解释：</p>
<p>同层的多个元素，如多个由用户输入触发的 Dialog，在该层级内使用相同的 <code>z-index</code> 或递增 <code>z-index</code>。</p>
<p>建议每层包含100个 <code>z-index</code> 来容纳足够的元素，如果每层元素较多，可以调整这个数值。</p>
<blockquote>
<p>[建议] 在可控环境下，期望显示在最上层的元素，<code>z-index</code> 指定为 <code>999999</code>。</p>
</blockquote>
<p>解释：</p>
<p>可控环境分成两种，一种是自身产品线环境；还有一种是可能会被其他产品线引用，但是不会被外部第三方的产品引用。</p>
<p>不建议取值为 <code>2147483647</code>。以便于自身产品线被其他产品线引用时，当遇到层级覆盖冲突的情况，留出向上调整的空间。</p>
<blockquote>
<p>[建议] 在第三方环境下，期望显示在最上层的元素，通过标签内联和 <code>!important</code>，将 <code>z-index</code> 指定为 <code>2147483647</code>。</p>
</blockquote>
<p>解释：</p>
<p>第三方环境对于开发者来说完全不可控。在第三方环境下的元素，为了保证元素不被其页面其他样式定义覆盖，需要采用此做法。</p>
<h2 id="4_值与单位">4 值与单位</h2><h3 id="4-1_文本">4.1 文本</h3><blockquote>
<p>[强制] 文本内容必须用双引号包围。</p>
</blockquote>
<p>解释：</p>
<p>文本类型的内容可能在选择器、属性值等内容中。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">html</span><span class="attr_selector">[lang|="zh"]</span> <span class="tag">q</span><span class="pseudo">:before</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">"“"</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">html</span><span class="attr_selector">[lang|="zh"]</span> <span class="tag">q</span><span class="pseudo">:after</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">"”"</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">html</span><span class="attr_selector">[lang|=zh]</span> <span class="tag">q</span><span class="pseudo">:before</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">'Microsoft YaHei'</span>, sans-serif</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">'“'</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">html</span><span class="attr_selector">[lang|=zh]</span> <span class="tag">q</span><span class="pseudo">:after</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">"”"</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="4-2_数值">4.2 数值</h3><blockquote>
<p> [强制] 当数值为 0 - 1 之间的小数时，省略整数部分的 <code>0</code>。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">panel</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">opacity</span>:<span class="value"> .<span class="number">8</span></span><br><span class="line"></span></span></span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">panel</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">opacity</span>:<span class="value"> <span class="number">0.8</span></span><br><span class="line"></span></span></span>&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-3_url()">4.3 url()</h3><blockquote>
<p>[强制] <code>url()</code> 函数中的路径不加引号。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(bg.png)</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] <code>url()</code> 函数中的绝对路径可省去协议名。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(//baidu.com/img/bg.png) no-repeat <span class="number">0</span> <span class="number">0</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="4-4_长度">4.4 长度</h3><blockquote>
<p>[强制] 长度为 <code>0</code> 时须省略单位。 (也只有长度单位可省)</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0px</span> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="4-5_颜色">4.5 颜色</h3><blockquote>
<p>[强制] RGB颜色值必须使用十六进制记号形式 <code>#rrggbb</code>。不允许使用 <code>rgb()</code>。 </p>
</blockquote>
<p>解释：</p>
<p>带有alpha的颜色信息可以使用 <code>rgba()</code>。使用 <code>rgba()</code> 时每个逗号后必须保留一个空格。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>, <span class="number">128</span>, <span class="number">0</span>, .<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="hexcolor">#008000</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">box-shadow</span>:<span class="value"> <span class="number">0</span> <span class="number">0</span> <span class="number">2px</span> <span class="function">rgba</span>(<span class="number">0</span>,<span class="number">128</span>,<span class="number">0</span>,.<span class="number">3</span>)</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">0</span>, <span class="number">128</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] 颜色值可以缩写时，必须使用缩写形式。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#aca</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#aaccaa</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] 颜色值不允许使用命名色值。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#90ee90</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> lightgreen</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 颜色值中的英文字符采用小写。如不用小写也需要保证同一项目内保持大小写一致。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#aca</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#90ee90</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ACA</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#90EE90</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.success</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ACA</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#90ee90</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="4-6_2D_位置">4.6 2D 位置</h3><blockquote>
<p>[强制] 必须同时给出水平和垂直方向的位置。</p>
</blockquote>
<p>解释：</p>
<p>2D 位置初始值为 <code>0% 0%</code>，但在只有一个方向的值时，另一个方向的值会被解析为 center。为避免理解上的困扰，应同时给出两个方向的值。<a href="http://www.w3.org/TR/CSS21/colors.html#propdef-background-position" target="_blank" rel="external">background-position属性值的定义</a></p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-position</span>:<span class="value"> center top</span></span>; <span class="comment">/* 50% 0% */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-position</span>:<span class="value"> top</span></span>; <span class="comment">/* 50% 0% */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="5_文本编排">5 文本编排</h2><h3 id="5-1_字体族">5.1 字体族</h3><blockquote>
<p>[强制] <code>font-family</code> 属性中的字体族名称应使用字体的英文 <code>Family Name</code>，其中如有空格，须放置在引号中。</p>
</blockquote>
<p>解释：</p>
<p>所谓英文 Family Name，为字体文件的一个元数据，常见名称如下：</p>
<table>
<thead>
<tr>
<th>字体</th>
<th>操作系统</th>
<th>Family Name</th>
</tr>
</thead>
<tbody>
<tr>
<td>宋体 (中易宋体)</td>
<td>Windows</td>
<td>SimSun</td>
</tr>
<tr>
<td>黑体 (中易黑体)</td>
<td>Windows</td>
<td>SimHei</td>
</tr>
<tr>
<td>微软雅黑</td>
<td>Windows</td>
<td>Microsoft YaHei</td>
</tr>
<tr>
<td>微软正黑</td>
<td>Windows</td>
<td>Microsoft JhengHei</td>
</tr>
<tr>
<td>华文黑体</td>
<td>Mac/iOS</td>
<td>STHeiti</td>
</tr>
<tr>
<td>冬青黑体</td>
<td>Mac/iOS</td>
<td>Hiragino Sans GB</td>
</tr>
<tr>
<td>文泉驿正黑</td>
<td>Linux</td>
<td>WenQuanYi Zen Hei</td>
</tr>
<tr>
<td>文泉驿微米黑</td>
<td>Linux</td>
<td>WenQuanYi Micro Hei</td>
</tr>
</tbody>
</table>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Microsoft YaHei"</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] <code>font-family</code> 按「西文字体在前、中文字体在后」、「效果佳 (质量高/更能满足需求) 的字体在前、效果一般的字体在后」的顺序编写，最后必须指定一个通用字体族( <code>serif</code> / <code>sans-serif</code> )。</p>
</blockquote>
<p>解释：</p>
<p>更详细说明可参考<a href="http://www.zhihu.com/question/19911793/answer/13329819" target="_blank" rel="external">本文</a>。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Display according to platform */</span></span><br><span class="line"><span class="class">.article</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Arial, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Specific for most platforms */</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">"Helvetica Neue"</span>, Arial, <span class="string">"Hiragino Sans GB"</span>, <span class="string">"WenQuanYi Micro Hei"</span>, <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] <code>font-family</code> 不区分大小写，但在同一个项目中，同样的 <code>Family Name</code> 大小写必须统一。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Arial, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Arial, <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">body</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> arial, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-family</span>:<span class="value"> Arial, <span class="string">"Microsoft YaHei"</span>, sans-serif</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="5-2_字号">5.2 字号</h3><blockquote>
<p>[强制] 需要在 Windows 平台显示的中文内容，其字号应不小于 <code>12px</code>。</p>
</blockquote>
<p>解释：</p>
<p>由于 Windows 的字体渲染机制，小于 12px 的文字显示效果极差、难以辨认。</p>
<h3 id="5-3_字体风格">5.3 字体风格</h3><blockquote>
<p>[建议] 需要在 Windows 平台显示的中文内容，不要使用除 <code>normal</code> 外的 <code>font-style</code>。其他平台也应慎用。</p>
</blockquote>
<p>解释：</p>
<p>由于中文字体没有 italic 风格的实现，所有浏览器下都会 fallback 到 obilique 实现 (自动拟合为斜体)，小字号下 (特别是 Windows 下会在小字号下使用点阵字体的情况下) 显示效果差，造成阅读困难。</p>
<h3 id="5-4_字重">5.4 字重</h3><blockquote>
<p> [强制] <code>font-weight</code> 属性必须使用数值方式描述。</p>
</blockquote>
<p>解释：</p>
<p>CSS 的字重分 100 – 900 共九档，但目前受字体本身质量和浏览器的限制，实际上支持 400 和 700 两档，分别等价于关键词 normal 和 bold。</p>
<p>浏览器本身使用一系列<a href="http://www.w3.org/TR/CSS21/fonts.html#propdef-font-weight" target="_blank" rel="external">启发式规则</a>来进行匹配，在 <700 时一般匹配字体的="" regular="" 字重，="">=700 时匹配 Bold 字重。</700></p>
<p>但已有浏览器开始支持 =600 时匹配 Semibold 字重 (见<a href="http://justineo.github.io/slideshows/font/#/3/15" target="_blank" rel="external">此表</a>)，故使用数值描述增加了灵活性，也更简短。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> <span class="number">700</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="tag">h1</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">font-weight</span>:<span class="value"> bold</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="5-5_行高">5.5 行高</h3><blockquote>
<p>[建议] <code>line-height</code> 在定义文本段落时，应使用数值。</p>
</blockquote>
<p>解释：</p>
<p>将 line-height 设置为数值，浏览器会基于当前元素设置的 font-size 进行再次计算。在不同字号的文本段落组合中，能达到较为舒适的行间间隔效果，避免在每个设置了 font-size 都需要设置 line-height。</p>
<p>当 line-height 用于控制垂直居中时，还是应该设置成与容器高度一致。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.container</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">1.5</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="6_变换与动画">6 变换与动画</h2><blockquote>
<p>[强制] 使用 <code>transition</code> 时应指定 <code>transition-property</code>。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transition</span>:<span class="value"> color <span class="number">1s</span>, border-color <span class="number">1s</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transition</span>:<span class="value"> all <span class="number">1s</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 尽可能在浏览器能高效实现的属性上添加过渡和动画。</p>
</blockquote>
<p>解释：</p>
<p>见<a href="http://www.html5rocks.com/en/tutorials/speed/high-performance-animations/" target="_blank" rel="external">本文</a>，在可能的情况下应选择这样四种变换：</p>
<ul>
<li><code>transform: translate(npx, npx);</code></li>
<li><code>transform: scale(n);</code></li>
<li><code>transform: rotate(ndeg);</code></li>
<li><code>opacity: 0..1;</code></li>
</ul>
<p>典型的，可以使用 translate 来代替 left 作为动画属性。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* good */</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transition</span>:<span class="value"> transform <span class="number">1s</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="class">.box</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translate</span>(<span class="number">20px</span>)</span></span>; <span class="comment">/* move right for 20px */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* bad */</span></span><br><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transition</span>:<span class="value"> left <span class="number">1s</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"><span class="class">.box</span><span class="pseudo">:hover</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">20px</span></span></span>; <span class="comment">/* move right for 20px */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="7_响应式">7 响应式</h2><blockquote>
<p>[强制] <code>Media Query</code> 不得单独编排，必须与相关的规则一起定义。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Good */</span></span><br><span class="line"><span class="comment">/* header styles */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> (...) </span>&#123;</span><br><span class="line">    <span class="comment">/* header styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* main styles */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> (...) </span>&#123;</span><br><span class="line">    <span class="comment">/* main styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* footer styles */</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> (...) </span>&#123;</span><br><span class="line">    <span class="comment">/* footer styles */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Bad */</span></span><br><span class="line"><span class="comment">/* header styles */</span></span><br><span class="line"><span class="comment">/* main styles */</span></span><br><span class="line"><span class="comment">/* footer styles */</span></span><br><span class="line"></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> (...) </span>&#123;</span><br><span class="line">    <span class="comment">/* header styles */</span></span><br><span class="line">    <span class="comment">/* main styles */</span></span><br><span class="line">    <span class="comment">/* footer styles */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>[强制] <code>Media Query</code> 如果有多个逗号分隔的条件时，应将每个条件放在单独一行中。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">media</span></span><br><span class="line">(-webkit-min-device-pixel-ratio: <span class="number">2</span>), /* Webkit-based browsers */</span><br><span class="line">(min--moz-device-pixel-ratio: <span class="number">2</span>),    /* Older Firefox browsers (prior to Firefox <span class="number">16</span>) */</span><br><span class="line">(min-resolution: <span class="number">2dppx</span>),             /* The standard way */</span><br><span class="line">(min-resolution: <span class="number">192dpi</span>) </span>&#123;           <span class="comment">/* dppx fallback */</span></span><br><span class="line">    <span class="comment">/* Retina-specific stuff here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 尽可能给出在高分辨率设备 (Retina) 下效果更佳的样式。</p>
</blockquote>
<h2 id="8_兼容性">8 兼容性</h2><h3 id="8-1_属性前缀">8.1 属性前缀</h3><blockquote>
<p>[强制] 带私有前缀的属性由长到短排列，按冒号位置对齐。</p>
</blockquote>
<p>解释：</p>
<p>标准属性放在最后，按冒号对齐方便阅读，也便于在编辑器内进行多行编辑。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-box-sizing</span>:<span class="value"> border-box</span></span>;</span><br><span class="line">       <span class="rule"><span class="attribute">-moz-box-sizing</span>:<span class="value"> border-box</span></span>;</span><br><span class="line">            <span class="rule"><span class="attribute">box-sizing</span>:<span class="value"> border-box</span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="8-2_Hack">8.2 Hack</h3><blockquote>
<p> [建议] 需要添加 <code>hack</code> 时应尽可能考虑是否可以采用其他方式解决。</p>
</blockquote>
<p>解释：</p>
<p>如果能通过合理的 HTML 结构或使用其他的 CSS 定义达到理想的样式，则不应该使用 hack 手段解决问题。通常 hack 会导致维护成本的增加。</p>
<blockquote>
<p> [建议] 尽量使用 <code>选择器 hack</code> 处理兼容性，而非 <code>属性 hack</code>。</p>
</blockquote>
<p>解释：</p>
<p>尽量使用符合 CSS 语法的 selector hack，可以避免一些第三方库无法识别 hack 语法的问题。</p>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* IE 7 */</span></span><br><span class="line">*<span class="pseudo">:first-child</span> + <span class="tag">html</span> <span class="id">#header</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">3px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* IE 6 */</span></span><br><span class="line">* <span class="tag">html</span> <span class="id">#header</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>[建议] 尽量使用简单的 <code>属性 hack</code>。</p>
</blockquote>
<p>示例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="class">.box</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">_display</span>:<span class="value"> inline</span></span>; <span class="comment">/* fix double margin */</span></span><br><span class="line">    <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line"><span class="rule">&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class">.container</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">    <span class="rule">*<span class="attribute">zoom</span>:<span class="value"> <span class="number">1</span></span></span>; <span class="comment">/* triggering hasLayout */</span></span><br><span class="line"><span class="rule">&#125;</span></span></span><br></pre></td></tr></table></figure>
<h3 id="8-3_Expression">8.3 Expression</h3><blockquote>
<p>[强制] 禁止使用 <code>Expression</code>。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>转载：<a href="https://github.com/ecomfe/spec" target="_blank" rel="external">原地址</a></p>
<h2 id="1_前言">1 前言</h2><p>CSS作为网页样式的描述语言，在百度一直有着广泛]]>
    </summary>
    
      <category term="css" scheme="http://jslite.io/tags/css/"/>
    
      <category term="编码规范" scheme="http://jslite.io/tags/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
      <category term="CSS" scheme="http://jslite.io/categories/CSS/"/>
    
      <category term="编码规范" scheme="http://jslite.io/categories/CSS/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    
  </entry>
  
</feed>